var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Activity.html",[0,1.367,1,2.118]],["body/interfaces/Activity.html",[0,1.713,1,4.35,2,2.442,3,0.239,4,0.204,5,0.204,6,3.662,7,0.511,8,2.379,9,3.997,10,2.657,11,0.468,12,2.034,13,2.345,14,5.344,15,5.344,16,4.477,17,5.631,18,1.25,19,0.866,20,0.025,21,1.084,22,1.15,23,0.759,24,3.755,25,0.302,26,0.914,27,0.239,28,0.015,29,0.018,30,0.015]],["title/classes/ActivityDTO.html",[31,0.084,32,2.322]],["body/classes/ActivityDTO.html",[1,4.392,3,0.224,4,0.192,5,0.192,7,0.48,11,0.44,12,1.955,13,2.167,14,4.939,15,4.939,16,4.483,17,5.639,18,1.155,19,0.875,20,0.025,21,1.221,22,1.131,23,0.856,24,2.971,25,0.29,26,0.86,27,0.224,28,0.014,29,0.018,30,0.014,31,0.1,32,4.152,33,1.974,34,3.444,35,2.374,36,3.884,37,1.265,38,4.057,39,4.057,40,4.057,41,4.057,42,4.057,43,2.125,44,1.419]],["title/controllers/AppController.html",[45,1.367,46,2.322]],["body/controllers/AppController.html",[3,0.128,4,0.109,5,0.109,7,0.416,11,0.25,18,0.458,19,0.614,20,0.025,21,1.227,22,0.4,23,0.716,25,0.342,26,0.489,27,0.128,28,0.008,29,0.012,30,0.008,31,0.057,35,2.02,37,1.077,44,0.806,45,1.897,46,2.375,47,0.916,48,1.957,49,2.988,50,1.087,51,2.174,52,2.988,53,3.52,54,3.52,55,4.055,56,5.641,57,4.367,58,2.306,59,4.329,60,2.637,61,3.579,62,3.58,63,1.124,64,1.878,65,4.777,66,4.055,67,2.306,68,2.881,69,2.306,70,4.269,71,2.306,72,2.306,73,2.235,74,1.589,75,1.589,76,1.675,77,2.306,78,2.306,79,1.937,80,2.306,81,4.777,82,2.306,83,4.104,84,5.961,85,2.306,86,2.306,87,2.166,88,1.419,89,2.306,90,2.306,91,2.306,92,2.306,93,2.306,94,3.167,95,1.957,96,2.306,97,2.912,98,2.637,99,2.988,100,2.306,101,2.306,102,3.52,103,4.269,104,4.269,105,2.306,106,2.306,107,3.52,108,2.306,109,5.145,110,2.306,111,1.419,112,1.556,113,1.992,114,1.305,115,1.419,116,1.796,117,0.372,118,1.419,119,1.419,120,1.419,121,1.419,122,2.375,123,1.419,124,1.728,125,1.419,126,1.419,127,1.957,128,1.305,129,2.077,130,1.957,131,1.207,132,1.957,133,1.556,134,1.318,135,1.207,136,1.843,137,1.305,138,1.207,139,1.728,140,1.728,141,1.957,142,2.306,143,1.713,144,1.957,145,1.207,146,1.419,147,2.306,148,0.758,149,1.046,150,1.493,151,1.957,152,2.306,153,2.306,154,3.167,155,1.419,156,3.338,157,2.375,158,2.627,159,1.556,160,1.556,161,1.556,162,1.419,163,2.306,164,2.306,165,1.475,166,2.166,167,2.306,168,2.306,169,1.556,170,1.556,171,2.306,172,1.81,173,1.57,174,2.306,175,3.198,176,1.916,177,2.306,178,2.306,179,2.306,180,2.306,181,2.306,182,1.419,183,2.306,184,2.306,185,2.306,186,2.637,187,2.988,188,2.306,189,2.166,190,1.728,191,2.306,192,2.306,193,1.556,194,1.419,195,2.306,196,1.556,197,2.637,198,1.556,199,1.957,200,1.556,201,2.306,202,2.306,203,2.306]],["title/modules/AppModule.html",[204,0.939,205,2.322]],["body/modules/AppModule.html",[3,0.207,4,0.177,5,0.177,20,0.025,25,0.38,27,0.207,28,0.013,29,0.017,30,0.013,31,0.092,46,3.779,47,1.98,63,0.805,117,0.605,137,2.123,138,1.964,165,1.158,204,1.528,205,4.757,206,1.489,207,1.489,208,1.701,209,1.701,210,1.489,211,2.262,212,1.701,213,3.183,214,3.183,215,3.345,216,3.615,217,3.931,218,3.615,219,3.931,220,3.345,221,2.709,222,2.262,223,1.701,224,1.701,225,2.81,226,3.779,227,2.611,228,2.81,229,2.308,230,3.75,231,3.75,232,2.531,233,1.825,234,2.81,235,3.75,236,3.75,237,2.81,238,2.81,239,1.701,240,2.308,241,3.75,242,3.183,243,3.75,244,2.81,245,3.735,246,3.183,247,3.183,248,3.75,249,3.75,250,3.75,251,3.75,252,3.75,253,3.183,254,3.75,255,3.183,256,3.75,257,3.75,258,3.75]],["title/modules/AuthModule.html",[204,0.939,215,1.802]],["body/modules/AuthModule.html",[3,0.235,4,0.201,5,0.201,20,0.025,25,0.371,27,0.235,28,0.014,29,0.018,30,0.014,31,0.104,117,0.687,128,2.409,129,3.405,204,1.624,206,1.69,207,1.69,208,1.931,209,1.931,210,1.69,211,2.7,212,2.7,215,3.681,221,2.803,222,2.456,223,1.931,224,1.931,227,2.834,259,3.612,260,4.255,261,3.612,262,3.612,263,4.068,264,4.068,265,4.255,266,3.612,267,4.255,268,5.412,269,4.255,270,4.255,271,3.188,272,4.255,273,4.255,274,4.255,275,3.612,276,3.612,277,4.255,278,4.255,279,4.255,280,4.255]],["title/injectables/AuthService.html",[129,1.675,281,0.639]],["body/injectables/AuthService.html",[3,0.19,4,0.163,5,0.163,7,0.634,11,0.373,19,0.604,20,0.025,22,1.079,23,0.745,25,0.296,27,0.19,28,0.018,29,0.016,30,0.012,31,0.084,37,1.063,50,1.451,51,2.163,55,4.888,57,3.99,62,2.893,63,1.114,64,1.923,68,2.319,74,1.654,75,1.654,76,1.778,79,1.862,94,3.544,97,1.945,98,2.575,99,2.917,116,1.778,117,0.555,129,2.287,134,1.654,135,1.8,148,1.129,149,1.559,150,1.457,159,2.319,160,2.319,161,2.319,162,2.115,165,1.923,175,4.315,176,1.751,189,2.115,253,3.99,255,5.285,271,2.575,281,0.873,282,1.28,283,2.917,284,2.66,285,4.7,286,4.7,287,3.437,288,4.7,289,3.437,290,4.7,291,5.759,292,4.7,293,4.7,294,3.437,295,3.172,296,2.66,297,5.357,298,3.437,299,5.119,300,3.99,301,4.7,302,3.437,303,2.917,304,4.7,305,2.917,306,4.7,307,3.437,308,3.437,309,3.437]],["title/interfaces/Course.html",[0,1.367,310,1.561]],["body/interfaces/Course.html",[0,1.044,2,1.488,3,0.145,4,0.124,5,0.124,7,0.547,8,1.834,9,3.35,10,1.89,11,0.285,12,1.447,13,1.9,16,3.443,18,1.324,19,0.879,20,0.025,21,1.28,22,1.071,23,0.71,24,4.036,25,0.255,26,0.557,27,0.145,28,0.009,29,0.013,30,0.009,63,0.627,239,1.762,310,3.238,311,2.231,312,3.822,313,3.822,314,3.822,315,3.14,316,3.14,317,3.443,318,3.822,319,2.888,320,3.822,321,3.822,322,3.225,323,3.822,324,3.822,325,3.822,326,3.822,327,3.845,328,3.822,329,3.822,330,4.269,331,3.822,332,3.296,333,3.296,334,4.836,335,3.081,336,3.443,337,2.621,338,3.296,339,3.296,340,3.506,341,2.198,342,2.39,343,3.296,344,3.296,345,3.296,346,3.296,347,2.315,348,4.33,349,2.888,350,3.296,351,2.628,352,2.631]],["title/modules/CoursesModule.html",[204,0.939,216,1.948]],["body/modules/CoursesModule.html",[3,0.241,4,0.206,5,0.206,20,0.024,23,0.606,25,0.373,27,0.241,28,0.015,29,0.019,30,0.015,31,0.107,47,2.182,117,0.704,204,1.642,206,1.731,207,1.731,208,1.977,209,1.977,210,1.731,211,2.73,212,2.73,216,3.954,220,3.483,221,2.82,222,2.493,223,1.977,224,1.977,227,2.877,229,2.682,232,2.941,233,2.12,234,3.265,310,1.977,353,3.699,354,4.357,355,3.699,356,3.699,357,3.974,358,4.357,359,5.108,360,4.357,361,4.357,362,4.116,363,4.357,364,3.265,365,2.941]],["title/injectables/CoursesService.html",[281,0.639,357,1.948]],["body/injectables/CoursesService.html",[3,0.109,4,0.093,5,0.093,7,0.653,8,0.78,11,0.213,18,1.357,19,0.747,20,0.025,21,1.357,23,0.809,25,0.294,26,0.416,27,0.109,28,0.007,29,0.011,30,0.007,31,0.048,37,1.154,50,0.96,51,2.235,63,0.859,74,1.796,75,1.796,76,1.796,79,1.832,116,1.753,117,0.317,134,1.191,135,1.029,148,0.646,150,1.318,165,2.002,173,1.949,176,2.335,233,0.956,281,0.577,282,0.732,284,1.759,296,3.584,305,2.638,310,2.978,315,1.913,319,3.01,322,2.481,327,2.958,341,2.481,342,2.698,347,1.41,352,0.78,357,1.759,366,1.668,367,4.786,368,3.108,369,3.108,370,3.108,371,3.108,372,3.108,373,3.108,374,3.108,375,3.108,376,3.108,377,3.108,378,3.108,379,4.072,380,1.965,381,2.098,382,3.108,383,1.965,384,1.913,385,3.108,386,1.965,387,1.913,388,2.638,389,3.108,390,1.965,391,3.108,392,1.965,393,2.698,394,3.108,395,1.965,396,3.108,397,1.965,398,3.108,399,1.965,400,3.108,401,1.965,402,3.108,403,1.965,404,2.329,405,1.965,406,1.472,407,1.209,408,1.965,409,1.965,410,1.965,411,1.965,412,1.668,413,1.668,414,1.965,415,1.965,416,1.965,417,3.108,418,3.108,419,3.273,420,3.273,421,0.891,422,1.965,423,1.965,424,1.965,425,1.965,426,1.965,427,1.965,428,3.108,429,2.329,430,3.108,431,1.965,432,1.965,433,1.965,434,2.638,435,1.965,436,3.108,437,2.638,438,2.638,439,2.329,440,3.108,441,3.108,442,1.965,443,1.965,444,1.965,445,1.965,446,5.319,447,2.638,448,3.578,449,1.965,450,1.965,451,4.383,452,1.965,453,1.965,454,1.965,455,1.965,456,1.965,457,3.108,458,3.108,459,3.108,460,3.108,461,3.108,462,3.108,463,1.965,464,1.965,465,1.965,466,1.965,467,1.965,468,1.965,469,1.209,470,3.108,471,1.472]],["title/classes/CreateCourseDTO.html",[31,0.084,379,2.322]],["body/classes/CreateCourseDTO.html",[3,0.109,4,0.093,5,0.093,7,0.565,11,0.213,12,1.159,13,1.437,16,3.591,18,1.178,19,0.844,20,0.025,21,1.295,22,0.88,23,0.767,24,3.946,25,0.213,26,0.417,27,0.109,28,0.007,29,0.011,30,0.007,31,0.048,33,0.957,35,2.431,36,3.934,37,1.303,43,1.03,44,0.688,63,0.708,239,1.99,310,3.256,312,2.891,313,2.891,314,2.891,315,2.375,316,2.375,317,2.604,318,2.891,319,2.184,320,2.891,321,2.891,322,3.011,323,2.891,324,2.891,325,2.891,326,2.891,327,3.591,328,2.891,329,2.891,330,3.986,331,2.891,332,3.723,333,3.723,334,5.123,335,2.875,336,3.723,337,2.96,338,3.723,339,3.723,340,2.699,341,2.482,342,2.699,343,3.723,344,3.723,345,3.723,346,3.723,347,2.503,348,4.683,349,2.184,350,3.723,352,2.756,379,2.96,472,5.602,473,1.669,474,1.967,475,4.446,476,4.062,477,1.967,478,1.967,479,1.967,480,1.967,481,1.967,482,1.967,483,1.967,484,1.967,485,1.967,486,1.967,487,1.967,488,1.967,489,1.967,490,1.967,491,1.967,492,1.967,493,1.967,494,1.967,495,1.967,496,1.967,497,1.967,498,5.517,499,1.967,500,2.64]],["title/classes/CreateNodeDTO.html",[31,0.084,501,2.118]],["body/classes/CreateNodeDTO.html",[3,0.193,4,0.165,5,0.165,7,0.412,11,0.378,12,1.766,13,2.008,18,1.27,19,0.822,20,0.025,21,1.378,22,0.822,23,0.805,25,0.262,26,0.738,27,0.193,28,0.012,29,0.016,30,0.012,31,0.085,33,1.694,35,2.328,36,3.844,37,1.27,43,1.823,44,1.217,63,0.935,316,3.319,317,3.639,322,3.62,335,3.538,336,4.393,340,4.179,341,3.277,352,2.141,421,2.902,475,4.338,476,3.847,500,4.024,501,2.918,502,5.525,503,2.954,504,4.741,505,2.793,506,3.2,507,4.04,508,3.639,509,3.481,510,3.481,511,3.481,512,3.481,513,3.481,514,3.481,515,3.481]],["title/classes/CreateUserDTO.html",[31,0.084,516,1.675]],["body/classes/CreateUserDTO.html",[3,0.171,4,0.146,5,0.146,7,0.366,11,0.336,12,1.628,13,1.887,18,1.006,19,0.838,20,0.025,21,1.093,22,1.184,23,0.88,24,3.116,25,0.242,26,0.656,27,0.171,28,0.01,29,0.015,30,0.01,31,0.076,33,1.506,35,2.428,36,3.932,37,1.294,43,1.621,44,1.082,63,1.155,64,2.036,73,3.243,157,3.715,166,3.812,475,4.739,476,3.893,516,2.679,517,4.058,518,2.319,519,3.796,520,3.796,521,3.419,522,4.64,523,3.419,524,4.64,525,3.095,526,3.274,527,3.095,528,5.504,529,5.504,530,3.095,531,3.095,532,5.504,533,3.095,534,3.095,535,4.672,536,3.095,537,3.095,538,3.095,539,3.095]],["title/controllers/InviteUserController.html",[45,1.367,540,2.322]],["body/controllers/InviteUserController.html",[3,0.113,4,0.097,5,0.097,7,0.381,11,0.223,18,0.407,19,0.771,20,0.024,21,1.304,22,0.97,23,0.779,25,0.318,26,0.435,27,0.113,28,0.007,29,0.011,30,0.007,31,0.05,35,1.816,37,0.968,44,0.718,45,0.815,47,0.815,50,0.993,51,2.079,60,3.653,61,1.537,62,2.763,63,1.055,64,1.884,74,1.506,75,1.506,76,1.506,79,1.597,83,3.649,87,2.763,88,2.763,94,1.979,111,1.263,112,1.385,113,2.541,114,1.161,116,1.853,117,0.331,118,1.263,119,1.263,120,1.263,121,1.263,122,2.17,123,1.263,124,1.537,125,1.263,126,1.263,131,1.074,133,1.385,134,1.225,135,1.074,143,2.373,145,1.074,146,1.263,148,0.674,149,0.931,150,0.87,154,3.001,155,2.441,157,2.17,158,1.263,165,1.597,169,3.974,170,3.974,172,0.87,173,2.192,176,1.927,182,1.263,186,1.537,193,2.676,194,2.763,196,1.385,197,1.537,198,2.17,200,1.385,239,3.04,240,3.183,310,2.87,315,1.263,319,3.645,337,4.051,342,1.979,347,2.611,393,2.441,437,1.742,438,1.742,469,1.263,516,3.134,517,1.263,540,2.17,541,3.183,542,1.742,543,1.385,544,2.73,545,3.216,546,2.73,547,2.73,548,2.41,549,2.052,550,2.052,551,2.73,552,2.052,553,2.052,554,3.811,555,2.052,556,3.216,557,4.31,558,2.052,559,2.052,560,3.366,561,2.052,562,4.49,563,2.052,564,2.052,565,2.052,566,2.052,567,2.763,568,3.216,569,3.966,570,3.216,571,3.966,572,2.052,573,2.052,574,2.052,575,2.052,576,2.052,577,3.445,578,2.052,579,2.41,580,2.41,581,2.052,582,3.216,583,2.73,584,2.052,585,1.385,586,1.385,587,1.263,588,1.979,589,1.742,590,2.245,591,1.742,592,2.052,593,2.052,594,2.052,595,1.537,596,2.052,597,3.966,598,2.052,599,3.216,600,2.052,601,3.29,602,3.966,603,3.364,604,2.052,605,2.763,606,3.216,607,3.364,608,2.052,609,3.966,610,3.216,611,2.052,612,3.966,613,2.052,614,2.052,615,3.216,616,2.052,617,2.052,618,2.052,619,1.537,620,2.052,621,2.052,622,2.052,623,2.052,624,2.052,625,2.052]],["title/classes/InviteUserDTO.html",[31,0.084,577,2.118]],["body/classes/InviteUserDTO.html",[3,0.253,4,0.217,5,0.217,7,0.542,11,0.496,12,2.11,19,0.728,20,0.024,21,1.276,22,1.114,25,0.253,27,0.253,28,0.015,29,0.019,30,0.015,31,0.112,33,2.227,35,2.11,36,3.639,37,1.125,43,2.397,44,1.601,63,1.087,64,2.107,239,2.57,352,2.674,505,2.554,506,3.823,518,3.429,541,3.787,577,3.487,626,5.223,627,6.153,628,4.577,629,4.577]],["title/modules/InviteUserModule.html",[204,0.939,217,2.118]],["body/modules/InviteUserModule.html",[3,0.233,4,0.199,5,0.199,20,0.024,25,0.375,27,0.233,28,0.014,29,0.018,30,0.014,31,0.103,47,2.136,117,0.68,137,2.385,138,2.207,204,1.617,206,1.674,207,1.674,208,1.912,209,1.912,210,1.674,211,2.688,212,1.912,215,3.453,216,3.732,217,4.366,218,3.732,220,3.453,221,2.734,222,2.44,223,1.912,224,1.912,227,2.207,228,3.157,229,2.594,234,3.157,239,2.44,240,2.594,242,3.577,540,3.998,541,2.594,590,3.732,591,3.577,630,3.577,631,4.214,632,3.577,633,4.214,634,4.214,635,4.214,636,4.214]],["title/injectables/InviteUserService.html",[281,0.639,590,1.948]],["body/injectables/InviteUserService.html",[3,0.15,4,0.128,5,0.128,7,0.556,11,0.294,18,1.143,19,0.604,20,0.025,21,0.537,22,0.814,23,0.654,25,0.344,26,0.574,27,0.15,28,0.009,29,0.013,30,0.009,31,0.066,37,0.933,50,1.225,51,2.045,63,1.075,64,0.836,74,1.451,75,1.451,76,1.451,79,1.225,114,1.532,115,1.666,116,1.451,117,0.437,134,1.451,135,1.417,136,2.46,137,1.532,138,1.417,139,2.028,148,0.889,149,1.228,150,1.992,165,1.837,169,3.171,170,2.678,172,2.336,173,2.045,176,2.417,186,2.973,189,2.892,190,3.52,239,2.973,240,3.185,281,0.737,282,1.008,284,2.246,296,1.532,310,2.132,319,2.929,337,3.492,347,2.348,357,2.659,367,2.028,413,2.298,469,1.666,476,1.666,505,1.576,506,3.171,516,3.029,517,1.666,541,3.185,544,3.369,548,2.973,551,3.369,554,3.369,567,1.666,577,3.755,588,2.442,589,2.298,590,2.246,605,2.892,619,2.028,637,2.298,638,3.969,639,3.969,640,2.707,641,3.969,642,2.707,643,3.969,644,5.174,645,2.707,646,3.969,647,2.707,648,2.46,649,2.707,650,2.707,651,2.707,652,3.969,653,2.707,654,2.707,655,2.707,656,2.298,657,2.707,658,2.028,659,2.707,660,2.707,661,2.707,662,2.707,663,2.707,664,2.707,665,2.707,666,2.707,667,2.707,668,2.707,669,2.707,670,2.707,671,2.707,672,2.707,673,2.707,674,2.707,675,2.707,676,2.707,677,2.707,678,4.699,679,2.707,680,2.707,681,2.707,682,2.707,683,2.707,684,3.969,685,2.707,686,2.298,687,2.298,688,2.707,689,3.969,690,2.707,691,2.707,692,3.969,693,2.707,694,3.969,695,2.707,696,2.707,697,2.707,698,2.707,699,2.707,700,2.707,701,1.827,702,2.707,703,2.707]],["title/injectables/JwtAuthGuard.html",[131,1.802,281,0.639]],["body/injectables/JwtAuthGuard.html",[3,0.286,4,0.245,5,0.245,7,0.612,10,3.158,20,0.024,25,0.337,27,0.286,28,0.018,29,0.021,30,0.018,31,0.127,117,0.835,127,5.508,128,2.929,131,3.51,281,1.133,282,1.927,586,3.492,704,4.392,705,5.175]],["title/injectables/JwtStrategy.html",[263,2.118,281,0.639]],["body/injectables/JwtStrategy.html",[3,0.247,4,0.211,5,0.211,7,0.528,10,2.961,11,0.484,13,1.663,19,0.574,20,0.025,23,0.621,25,0.337,27,0.247,28,0.015,29,0.019,30,0.015,31,0.11,37,1.107,50,1.723,51,1.999,64,1.379,74,1.379,75,1.379,76,1.379,79,1.379,116,1.379,117,0.721,128,2.527,140,3.345,148,1.833,263,3.923,275,3.79,276,3.79,281,1.036,282,1.663,295,4.301,299,5.41,476,2.748,706,3.79,707,5.165,708,4.559,709,4.465,710,5.579,711,4.465,712,4.465,713,3.79,714,3.345,715,3.79,716,3.79,717,4.465,718,4.465,719,4.465,720,4.465,721,4.465,722,4.465]],["title/injectables/LocalStrategy.html",[264,2.118,281,0.639]],["body/injectables/LocalStrategy.html",[3,0.239,4,0.204,5,0.204,7,0.511,10,2.915,11,0.468,19,0.555,20,0.025,22,1.15,23,0.6,25,0.348,27,0.239,28,0.015,29,0.018,30,0.015,31,0.106,37,0.856,50,1.686,51,1.968,63,0.967,64,1.944,73,3.528,74,1.332,75,1.332,76,1.332,79,1.332,116,1.686,117,0.697,128,2.442,129,2.915,148,1.417,149,1.957,165,1.332,172,1.83,173,1.417,176,1.607,264,3.875,266,3.662,281,1.013,282,1.607,295,4.248,296,3.09,707,5.084,713,3.662,714,3.232,715,3.662,716,3.662,723,3.662,724,5.46,725,4.314,726,3.662,727,4.314,728,4.314,729,5.46,730,4.314]],["title/modules/MailerEdu4uModule.html",[204,0.939,218,1.948]],["body/modules/MailerEdu4uModule.html",[3,0.269,4,0.23,5,0.23,20,0.024,25,0.325,27,0.269,28,0.016,29,0.02,30,0.016,31,0.119,117,0.785,136,3.728,137,2.753,138,2.547,139,3.644,204,1.725,206,1.931,207,1.931,208,2.206,209,2.206,210,1.931,211,2.867,212,2.867,218,3.912,222,2.667,223,2.206,224,2.206,731,4.128,732,4.128,733,4.128,734,3.644,735,4.863]],["title/injectables/MailerEdu4uService.html",[136,1.802,281,0.639]],["body/injectables/MailerEdu4uService.html",[3,0.123,4,0.105,5,0.105,7,0.405,11,0.241,19,0.687,20,0.025,22,1.217,23,0.743,25,0.231,27,0.123,28,0.008,29,0.012,30,0.008,31,0.102,37,1.061,50,1.056,52,2.903,61,2.563,63,1.093,66,2.903,73,1.791,74,1.65,75,1.65,76,1.65,79,1.562,113,3.603,116,1.944,117,0.359,136,1.791,137,1.936,138,2.915,148,0.73,149,1.008,151,3.54,162,1.367,165,1.944,169,2.308,170,2.308,190,2.563,237,1.664,238,1.664,239,2.424,281,0.635,282,0.827,347,1.552,352,0.882,546,2.903,547,2.903,548,2.563,701,3.414,734,4.171,736,1.885,737,3.42,738,4.171,739,5.059,740,3.42,741,6.217,742,2.221,743,5.344,744,5.567,745,5.567,746,3.42,747,2.221,748,3.42,749,2.221,750,5.567,751,3.42,752,2.221,753,3.42,754,5.059,755,5.059,756,2.221,757,3.42,758,5.344,759,5.059,760,2.221,761,4.171,762,3.42,763,3.42,764,2.221,765,2.221,766,2.221,767,2.221,768,2.221,769,4.685,770,4.171,771,2.221,772,2.221,773,2.221,774,3.42,775,3.42,776,3.42,777,3.42,778,2.221,779,3.42,780,3.42,781,4.725,782,3.42,783,3.125,784,2.221,785,3.42,786,3.42,787,3.42,788,2.221,789,3.42,790,2.221,791,2.221,792,3.42,793,3.42,794,2.221,795,3.42,796,2.221,797,2.221,798,1.885,799,2.221,800,2.221,801,2.221,802,2.221,803,2.221,804,2.221,805,3.42,806,2.221,807,2.221,808,2.221,809,4.685,810,3.42,811,3.42,812,2.221,813,3.42,814,2.221,815,2.221,816,5.344,817,3.42,818,2.221,819,3.42,820,3.42,821,2.221]],["title/interfaces/Node.html",[0,1.367,505,1.367]],["body/interfaces/Node.html",[0,1.573,2,2.242,3,0.219,4,0.187,5,0.187,7,0.469,8,2.285,9,3.893,10,2.515,11,0.43,12,1.925,13,2.271,18,1.357,19,0.849,20,0.025,21,1.21,22,0.997,23,0.719,25,0.286,26,0.84,27,0.219,28,0.013,29,0.017,30,0.013,63,0.834,316,3.753,317,4.115,322,3.671,335,3.58,336,4.115,340,3.992,341,2.925,352,2.624,421,2.943,505,2.815,507,4.568,508,4.115,822,3.363]],["title/controllers/TeachersController.html",[45,1.367,823,2.322]],["body/controllers/TeachersController.html",[3,0.171,4,0.146,5,0.146,7,0.366,11,0.335,18,0.613,19,0.651,20,0.025,21,1.308,22,0.757,23,0.607,25,0.35,26,0.655,27,0.171,28,0.015,29,0.015,30,0.01,31,0.076,35,1.626,37,0.867,44,1.081,45,2.01,47,1.227,50,1.348,51,1.979,60,2.316,63,0.972,64,1.86,68,3.416,74,1.348,75,1.348,76,1.348,79,1.348,83,2.946,87,1.902,88,1.902,95,2.623,97,2.471,98,2.316,111,1.902,113,2.471,114,1.749,116,1.792,117,0.499,118,1.902,119,1.902,120,1.902,121,1.902,123,1.902,124,2.316,125,1.902,126,1.902,129,2.463,130,2.623,134,1.563,135,1.618,143,2.125,145,1.618,146,1.902,148,1.015,149,1.402,150,1.851,154,2.687,155,2.687,156,3.116,158,1.902,165,1.792,166,1.902,172,1.311,173,2.256,175,2.316,176,2.049,182,1.902,194,1.902,196,2.086,198,2.086,199,2.623,239,1.981,347,3.14,381,2.946,421,2.297,516,3.129,517,1.902,543,2.086,557,4.267,567,2.687,583,2.623,585,2.086,587,1.902,588,1.902,601,2.086,605,2.687,607,2.316,686,2.623,823,2.946,824,2.623,825,3.271,826,5.062,827,2.623,828,3.091,829,3.091,830,3.091,831,3.271,832,3.091,833,3.091,834,3.091,835,3.091,836,3.091,837,3.091,838,2.623,839,3.091,840,2.865,841,2.623,842,3.091,843,3.091,844,3.091,845,3.091,846,3.091,847,3.091,848,3.091,849,3.091,850,3.091,851,2.316,852,2.623,853,4.366,854,3.091,855,3.091,856,2.623,857,2.623,858,2.623]],["title/modules/TeachersModule.html",[204,0.939,219,2.118]],["body/modules/TeachersModule.html",[3,0.255,4,0.218,5,0.218,20,0.024,25,0.366,27,0.255,28,0.016,29,0.019,30,0.016,31,0.113,47,2.262,117,0.745,204,1.685,206,1.833,207,1.833,208,2.094,209,2.094,210,1.833,211,2.802,212,2.094,215,3.533,219,4.312,221,2.861,222,2.584,223,2.094,224,2.094,227,2.982,228,3.458,229,2.841,823,4.168,840,3.819,841,3.918,859,3.918,860,4.616,861,3.918,862,4.616,863,4.616]],["title/injectables/TeachersService.html",[281,0.639,840,1.948]],["body/injectables/TeachersService.html",[3,0.239,4,0.205,5,0.205,7,0.647,11,0.469,18,1.251,19,0.556,20,0.025,21,1.251,23,0.601,25,0.332,26,0.916,27,0.239,28,0.015,29,0.018,30,0.015,31,0.106,37,0.858,50,1.688,51,1.97,63,0.968,74,1.335,75,1.335,76,1.335,79,1.335,97,2.447,114,2.447,115,2.661,116,1.335,117,0.698,134,1.851,148,1.42,150,1.833,156,3.364,159,2.917,160,2.917,161,2.917,162,2.661,165,1.335,172,2.318,173,2.135,176,2.036,281,1.015,282,1.61,284,3.094,303,3.669,347,2.858,412,3.669,421,2.48,708,3.239,840,3.094,857,3.669,864,3.669,865,5.467,866,5.467,867,4.323,868,3.669,869,4.323,870,4.323]],["title/interfaces/Topic.html",[0,1.367,349,1.948]],["body/interfaces/Topic.html",[0,1.752,2,2.496,3,0.244,4,0.209,5,0.209,7,0.801,8,2.403,9,4.023,10,2.694,11,0.478,12,2.062,13,2.364,18,1.26,19,0.816,20,0.025,21,1.099,22,1.156,23,0.77,25,0.335,26,0.935,27,0.244,28,0.015,29,0.019,30,0.015,32,4.282,349,3.98,871,3.744,872,5.663,873,5.386,874,4.41]],["title/classes/TopicDTO.html",[31,0.084,875,2.578]],["body/classes/TopicDTO.html",[1,3.623,3,0.23,4,0.197,5,0.197,7,0.801,11,0.451,12,1.986,13,2.193,18,1.169,19,0.798,20,0.025,21,1.233,22,1.076,23,0.864,25,0.326,26,0.881,27,0.23,28,0.014,29,0.018,30,0.014,31,0.102,33,2.023,35,2.313,36,3.83,37,1.233,43,2.177,44,1.454,349,4.01,352,2.609,872,5.671,873,4.997,875,4.653,876,3.529,877,4.158,878,4.158,879,4.158,880,4.158,881,4.158]],["title/controllers/UniversitiesController.html",[45,1.367,882,2.322]],["body/controllers/UniversitiesController.html",[3,0.107,4,0.092,5,0.092,7,0.229,11,0.21,18,0.385,19,0.744,20,0.025,21,1.371,22,0.875,23,0.786,25,0.304,26,0.411,27,0.107,28,0.007,29,0.01,30,0.007,31,0.048,35,2.044,37,1.09,44,0.678,45,1.518,47,0.77,50,0.95,51,2.184,62,2.352,74,1.695,75,1.695,76,1.695,79,1.695,87,3.378,88,1.893,94,1.193,97,3.2,111,1.193,112,1.308,113,2.163,115,1.193,116,1.931,117,0.313,118,1.193,119,1.193,120,1.193,121,1.193,122,2.075,123,1.193,125,1.893,126,1.193,131,1.015,133,1.308,134,1.18,135,1.015,143,2.309,145,1.015,146,1.193,148,0.637,149,0.88,150,0.822,154,3.378,155,1.193,156,3.479,158,1.193,165,1.695,172,2.397,173,2.054,176,2.044,182,1.193,193,2.936,194,1.193,196,2.075,198,2.936,200,1.308,335,1.097,341,1.741,384,2.352,387,1.893,407,1.193,421,2.29,501,3.886,505,2.662,543,1.308,557,4.523,579,1.453,580,1.453,585,1.308,586,1.308,587,1.193,595,1.453,601,2.579,603,4.731,648,2.002,656,3.244,831,2.304,851,1.453,882,2.075,883,1.646,884,5.18,885,2.61,886,2.61,887,3.244,888,2.61,889,2.61,890,3.075,891,2.61,892,2.61,893,1.939,894,1.939,895,3.244,896,1.939,897,1.939,898,1.939,899,3.075,900,2.61,901,3.244,902,1.939,903,4.285,904,1.939,905,1.646,906,3.244,907,1.939,908,1.939,909,1.939,910,1.939,911,1.939,912,4.916,913,2.61,914,1.939,915,1.939,916,4.285,917,4.798,918,1.939,919,1.939,920,1.939,921,4.285,922,1.939,923,1.939,924,3.075,925,1.939,926,1.939,927,1.939,928,1.939,929,1.939,930,4.285,931,1.939,932,1.646,933,1.646,934,1.646,935,1.646,936,1.646,937,1.939,938,1.939,939,1.646,940,1.939,941,1.939,942,1.939,943,3.075,944,1.939,945,1.939,946,1.939,947,1.939,948,1.939,949,1.939,950,1.939,951,1.939,952,1.939,953,1.939,954,1.939,955,1.939,956,1.939,957,1.939,958,1.939,959,1.939,960,1.939,961,1.939,962,1.939,963,1.939,964,1.939,965,3.244,966,1.939,967,1.939,968,1.646,969,2.61,970,3.075,971,1.646,972,1.646,973,3.244,974,1.939,975,1.646,976,1.939,977,3.244,978,1.939]],["title/modules/UniversitiesModule.html",[204,0.939,220,1.802]],["body/modules/UniversitiesModule.html",[3,0.248,4,0.213,5,0.213,20,0.024,23,0.625,25,0.371,27,0.248,28,0.015,29,0.019,30,0.015,31,0.11,47,2.224,117,0.725,204,1.665,206,1.784,207,1.784,208,2.038,209,2.038,210,1.784,211,2.768,212,2.768,220,3.628,221,2.842,222,2.541,223,2.038,224,2.038,227,2.932,229,2.765,232,3.032,233,2.186,364,3.366,365,3.032,505,1.784,648,3.691,882,4.118,935,3.813,979,3.813,980,4.492,981,3.813,982,3.813,983,4.492,984,4.492,985,4.196,986,4.492]],["title/injectables/UniversitiesService.html",[281,0.639,648,1.802]],["body/injectables/UniversitiesService.html",[3,0.102,4,0.087,5,0.087,7,0.438,8,0.734,11,0.2,18,1.322,19,0.715,20,0.025,21,1.361,23,0.839,25,0.298,26,0.392,27,0.102,28,0.006,29,0.01,30,0.006,31,0.045,37,1.158,50,0.914,51,2.169,63,0.959,64,0.571,74,1.718,75,1.718,76,1.801,79,1.834,116,1.911,117,0.298,134,1.144,148,0.607,150,1.255,165,2.039,173,1.522,176,2.212,189,1.138,233,0.899,281,0.55,282,0.688,284,1.676,296,3.539,300,2.513,342,1.138,347,2.243,352,0.734,367,1.385,381,1.998,384,1.822,387,1.822,393,1.822,404,2.218,406,1.385,407,1.138,419,2.513,420,2.513,421,2.356,429,2.218,434,2.513,447,1.569,448,3.471,469,1.138,471,1.385,501,3.763,505,2.483,508,1.998,521,1.247,523,1.247,648,1.55,701,2.499,708,1.385,868,1.569,884,2.513,885,2.513,886,2.513,887,2.513,888,2.513,889,2.513,891,3.594,892,3.594,921,5.402,930,4.845,936,1.569,965,1.569,971,1.569,973,2.513,977,2.513,987,1.569,988,2.96,989,2.96,990,2.96,991,2.513,992,2.96,993,1.848,994,2.96,995,1.848,996,2.96,997,1.848,998,2.96,999,5.938,1000,6.187,1001,1.848,1002,3.703,1003,4.234,1004,2.96,1005,1.848,1006,3.703,1007,2.96,1008,2.96,1009,1.848,1010,2.96,1011,1.848,1012,2.96,1013,1.848,1014,2.96,1015,1.848,1016,1.848,1017,2.96,1018,1.848,1019,1.848,1020,1.848,1021,2.96,1022,1.848,1023,5.192,1024,1.848,1025,3.143,1026,1.848,1027,2.96,1028,1.848,1029,2.96,1030,1.848,1031,1.848,1032,1.848,1033,2.96,1034,1.848,1035,1.848,1036,1.848,1037,1.848,1038,2.96,1039,1.848,1040,1.848,1041,1.848,1042,1.848,1043,1.848,1044,1.848,1045,1.848,1046,1.848,1047,3.703,1048,1.848,1049,4.234,1050,1.848,1051,1.848,1052,1.848,1053,1.848,1054,2.96,1055,2.96,1056,2.96,1057,2.96,1058,1.848,1059,1.848,1060,1.848,1061,1.848,1062,2.96,1063,2.96,1064,1.848,1065,1.848,1066,1.848,1067,1.848,1068,1.848,1069,1.848,1070,1.848,1071,1.848,1072,1.848,1073,1.848,1074,1.848,1075,1.569]],["title/interfaces/User.html",[0,1.367,63,0.556]],["body/interfaces/User.html",[0,1.457,2,2.076,3,0.203,4,0.174,5,0.174,7,0.434,8,2.199,9,3.796,10,2.39,11,0.398,12,1.83,13,2.203,18,1.174,19,0.866,20,0.025,21,0.975,22,1.235,25,0.272,26,0.777,27,0.203,28,0.012,29,0.017,30,0.012,63,1.147,64,2.034,73,3.324,157,3.315,166,3.906,352,2.65,519,4.432,520,4.756,521,4.283,522,4.756,523,4.283,524,4.756,526,4.149,1076,3.114]],["title/classes/UserLoginDTO.html",[31,0.084,59,2.322]],["body/classes/UserLoginDTO.html",[3,0.26,4,0.223,5,0.223,7,0.557,11,0.51,12,2.146,19,0.741,20,0.024,22,1.125,25,0.319,27,0.26,28,0.016,29,0.019,30,0.016,31,0.141,33,2.29,35,2.146,37,1.144,43,2.464,44,1.645,59,4.381,63,1.048,64,1.78,73,3.488,1077,3.994,1078,6.23,1079,4.706,1080,4.706,1081,4.706,1082,4.706,1083,4.706,1084,4.706,1085,5.763,1086,5.763,1087,3.994,1088,4.706,1089,4.706]],["title/controllers/UsersController.html",[45,1.367,226,2.322]],["body/controllers/UsersController.html",[3,0.128,4,0.109,5,0.109,7,0.273,11,0.25,18,0.458,19,0.748,20,0.025,21,1.155,22,0.892,23,0.755,25,0.312,26,0.489,27,0.128,28,0.008,29,0.012,30,0.008,31,0.057,35,1.917,37,1.022,44,0.807,45,1.697,47,0.917,50,1.088,51,2.127,62,2.629,63,1.129,64,1.476,68,2.377,74,1.59,75,1.59,76,1.59,79,1.59,83,3.474,87,3.168,88,1.421,94,1.421,97,2.914,111,1.421,112,1.558,113,2.418,115,1.421,116,1.937,117,0.373,118,1.421,119,1.421,120,1.421,121,1.421,122,2.377,123,1.421,125,1.421,126,1.421,131,1.209,132,1.959,133,1.558,134,1.476,143,2.326,144,1.959,145,1.209,146,1.421,148,0.758,149,1.047,154,3.168,155,2.942,156,3.168,158,1.421,165,1.675,172,2.027,173,2.061,176,2.167,182,2.168,187,3.626,189,1.421,193,2.377,194,1.421,197,2.639,200,1.558,226,2.377,384,2.629,387,2.168,393,3.581,407,1.421,429,1.729,439,4.986,516,3.176,543,1.558,557,4.437,560,1.959,567,2.942,579,1.729,580,1.729,585,1.558,588,1.421,595,1.729,601,2.883,603,4.065,605,2.168,607,1.729,658,2.639,687,1.959,825,2.639,827,1.959,831,2.639,838,1.959,851,1.729,852,1.959,856,1.959,858,1.959,895,1.959,900,2.99,901,3.626,903,4.057,905,1.959,906,3.626,912,4.057,913,2.99,916,2.99,917,2.99,932,1.959,933,1.959,934,2.99,939,3.626,968,1.959,969,1.959,972,1.959,975,1.959,1090,1.959,1091,2.99,1092,3.626,1093,2.99,1094,2.99,1095,2.308,1096,2.308,1097,2.308,1098,2.308,1099,2.308,1100,2.308,1101,2.308,1102,2.308,1103,2.308,1104,2.308,1105,2.308,1106,2.308,1107,3.523,1108,2.308,1109,2.308,1110,2.308,1111,2.308,1112,2.308,1113,2.308,1114,1.959,1115,2.308,1116,2.308,1117,2.308,1118,2.308,1119,2.308,1120,2.308,1121,2.308,1122,2.308,1123,4.78,1124,2.308,1125,3.523,1126,3.523,1127,1.959,1128,3.626,1129,2.308,1130,3.626,1131,2.308]],["title/modules/UsersModule.html",[204,0.939,221,1.459]],["body/modules/UsersModule.html",[3,0.26,4,0.223,5,0.223,20,0.024,23,0.655,25,0.359,27,0.26,28,0.016,29,0.019,30,0.016,31,0.115,63,0.76,117,0.76,134,2.19,204,1.7,206,1.869,207,1.869,208,2.135,209,2.135,210,1.869,211,2.826,212,2.826,221,2.911,222,2.615,223,2.135,224,2.135,227,2.464,232,3.176,233,2.29,364,3.526,365,3.176,1114,3.994,1132,3.994,1133,3.994,1134,3.994,1135,4.706,1136,4.318,1137,4.706]],["title/injectables/UsersService.html",[134,1.063,281,0.639]],["body/injectables/UsersService.html",[3,0.137,4,0.117,5,0.117,7,0.66,8,0.985,11,0.269,18,1.265,19,0.717,20,0.025,21,1.23,22,1.002,23,0.776,25,0.308,26,0.525,27,0.137,28,0.008,29,0.013,30,0.008,31,0.061,37,1.181,50,1.148,51,2.254,63,1.125,64,1.942,74,1.722,75,1.722,76,1.837,79,1.837,114,1.403,116,1.786,117,0.4,134,1.148,148,0.814,150,1.051,159,2.509,160,2.509,161,2.509,162,2.288,165,1.837,172,1.051,173,1.954,176,2.343,233,1.206,281,0.69,282,0.923,284,2.104,296,3.74,352,0.985,381,2.509,384,2.288,387,2.288,388,3.156,393,3.922,404,2.786,406,1.857,407,1.526,421,1.687,439,2.786,448,1.857,469,1.526,471,1.857,506,3.345,516,3.165,567,1.526,588,1.526,605,1.526,619,1.857,658,1.857,701,1.673,783,4.178,825,2.786,991,4.207,1025,4.207,1075,2.104,1091,3.156,1092,3.156,1093,3.156,1094,4.207,1127,2.104,1128,3.156,1130,3.156,1138,2.104,1139,3.718,1140,3.718,1141,3.718,1142,2.479,1143,3.718,1144,2.479,1145,3.718,1146,4.957,1147,3.718,1148,3.718,1149,2.479,1150,3.718,1151,2.479,1152,3.718,1153,2.479,1154,2.479,1155,3.718,1156,2.479,1157,2.479,1158,2.479,1159,2.479,1160,2.479,1161,2.479,1162,4.461,1163,2.479,1164,2.479,1165,2.479,1166,2.479,1167,2.479,1168,4.461,1169,3.718,1170,3.718,1171,2.479,1172,2.479,1173,2.479,1174,2.479,1175,2.479,1176,2.479,1177,2.479,1178,2.479]],["title/injectables/ValidateObjectId.html",[143,1.675,281,0.639]],["body/injectables/ValidateObjectId.html",[3,0.252,4,0.216,5,0.216,7,0.539,8,2.55,11,0.494,18,1.274,19,0.586,20,0.024,21,0.905,22,1.064,23,0.634,25,0.313,27,0.252,28,0.015,29,0.019,30,0.015,31,0.112,37,0.905,50,1.745,51,2.018,74,1.407,75,1.407,76,1.407,79,1.407,116,1.745,117,0.736,143,2.75,145,2.959,165,1.407,172,1.933,173,1.497,281,1.049,282,1.698,295,3.813,587,3.478,1179,3.869,1180,5.651,1181,5.651,1182,4.558,1183,6.421,1184,5.213,1185,5.651,1186,4.558,1187,4.558,1188,3.869,1189,4.558,1190,4.558]],["title/coverage.html",[1191,3.525]],["body/coverage.html",[0,2.422,1,2.184,5,0.168,6,3.012,19,0.456,20,0.024,28,0.012,29,0.016,30,0.012,31,0.158,32,2.395,34,3.012,45,2.497,46,2.395,48,3.012,59,2.395,63,0.573,129,1.727,131,1.858,134,1.096,136,1.858,138,1.858,143,1.727,145,1.858,173,1.166,210,1.409,225,2.659,226,2.395,240,2.957,245,2.659,263,2.184,264,2.184,281,1.255,283,3.012,310,1.61,311,3.012,349,2.009,357,2.009,359,3.012,362,2.659,366,3.012,379,2.395,472,3.012,473,3.012,501,2.184,502,3.012,503,3.012,505,1.409,516,1.727,517,2.184,518,3.599,540,2.395,541,3.352,542,3.012,577,2.184,586,2.395,587,2.184,590,2.009,626,3.012,637,3.012,648,1.858,704,3.012,706,3.012,723,3.012,734,2.659,736,3.012,781,6.113,783,2.659,822,3.012,823,2.395,824,3.012,840,2.009,864,3.012,871,3.012,875,2.659,876,3.012,882,2.395,883,3.012,985,2.659,987,3.012,1076,3.012,1077,3.012,1090,3.012,1136,2.659,1138,3.012,1179,3.012,1191,2.659,1192,3.012,1193,3.549,1194,3.549,1195,4.804,1196,5.836,1197,6.286,1198,4.804,1199,5.836,1200,5.446,1201,3.549,1202,5.446,1203,5.446,1204,5.836,1205,4.804,1206,3.012,1207,3.012,1208,3.549,1209,4.804,1210,3.012,1211,4.804,1212,3.549,1213,3.012,1214,3.549]],["title/dependencies.html",[207,1.645,1215,2.87]],["body/dependencies.html",[8,2.179,20,0.025,26,0.922,28,0.015,29,0.019,30,0.015,31,0.135,44,1.521,117,0.702,128,2.461,140,4.111,141,3.691,207,1.727,233,2.116,237,3.258,238,3.258,271,3.258,505,1.727,714,4.504,726,3.691,1087,3.691,1188,3.691,1216,4.349,1217,4.349,1218,6.314,1219,4.349,1220,5.487,1221,4.349,1222,4.349,1223,5.487,1224,4.349,1225,4.349,1226,4.349,1227,4.349,1228,4.349,1229,4.349,1230,4.349,1231,4.349,1232,4.349,1233,4.349,1234,4.349,1235,4.349,1236,4.349,1237,4.349,1238,4.349,1239,5.487,1240,4.349,1241,4.349,1242,4.349,1243,4.349,1244,4.349,1245,3.691,1246,5.487,1247,4.349,1248,4.349,1249,4.349,1250,4.349,1251,4.349,1252,4.349,1253,4.349,1254,4.349,1255,4.349,1256,4.349,1257,4.349,1258,4.349,1259,4.349,1260,4.349,1261,4.349,1262,4.349,1263,4.349,1264,4.349,1265,4.349,1266,4.349]],["title/miscellaneous/functions.html",[1267,1.937,1268,3.515]],["body/miscellaneous/functions.html",[11,0.597,20,0.021,28,0.019,29,0.021,30,0.019,210,2.714,1207,4.67,1267,3.713,1268,4.67,1269,5.501]],["title/index.html",[11,0.311,1270,2.87,1271,2.87]],["body/index.html",[4,0.198,7,0.495,20,0.024,28,0.014,29,0.018,30,0.014,49,3.55,244,4.423,535,3.55,798,4.543,1191,3.133,1192,5.011,1245,5.011,1272,4.182,1273,4.182,1274,5.352,1275,4.182,1276,4.182,1277,4.182,1278,4.182,1279,4.182,1280,4.182,1281,4.182,1282,4.182,1283,4.182,1284,5.903,1285,4.182,1286,4.182,1287,4.182,1288,4.182,1289,6.775,1290,4.182,1291,4.182,1292,6.775,1293,4.182,1294,4.182,1295,4.182,1296,4.182,1297,4.182,1298,5.352,1299,4.182,1300,5.903,1301,4.182,1302,4.182,1303,4.182,1304,4.182,1305,4.182,1306,4.182,1307,4.182,1308,4.182,1309,4.182,1310,5.352,1311,5.352,1312,4.182,1313,4.182,1314,4.182,1315,4.182,1316,4.182,1317,4.182,1318,4.182,1319,5.352,1320,5.352,1321,4.182,1322,4.182,1323,4.182,1324,4.182,1325,4.182,1326,3.55,1327,4.182,1328,4.182,1329,4.182,1330,4.182,1331,4.182,1332,4.182,1333,4.182,1334,4.182,1335,4.182,1336,4.182,1337,4.182,1338,4.182,1339,4.182,1340,4.182,1341,4.182,1342,4.182,1343,4.182,1344,4.182]],["title/modules.html",[206,1.868]],["body/modules.html",[20,0.02,28,0.017,29,0.02,30,0.017,205,3.435,206,2.022,215,2.666,216,2.881,217,3.133,218,2.881,219,3.133,220,2.666,221,2.159,1326,5.966,1345,7.029,1346,7.029,1347,7.029]],["title/overview.html",[1348,3.993]],["body/overview.html",[2,2.049,20,0.024,28,0.012,29,0.016,30,0.012,33,1.761,47,1.437,129,3.144,134,1.995,136,3.383,204,0.988,205,4.706,206,1.437,207,1.437,208,1.642,209,1.642,210,1.437,211,1.642,212,1.642,213,3.072,214,3.072,215,3.62,216,3.839,217,4.274,218,3.657,219,4.095,220,3.521,221,2.877,222,2.209,223,1.642,224,1.642,259,3.072,261,3.072,262,3.072,263,3.386,264,3.386,282,1.348,353,3.072,355,3.072,356,3.072,357,3.657,590,3.114,630,3.072,632,3.072,648,3.383,731,3.072,732,3.072,733,3.072,840,3.114,859,3.072,861,3.072,979,3.072,981,3.072,982,3.072,1132,3.072,1133,3.072,1134,3.072,1348,3.072,1349,3.619,1350,3.619,1351,3.619,1352,3.619,1353,3.619]],["title/miscellaneous/variables.html",[1267,1.937,1354,3.515]],["body/miscellaneous/variables.html",[8,2.353,11,0.457,13,2.207,18,1.347,20,0.023,22,1.217,24,3.878,28,0.014,29,0.018,30,0.014,63,0.68,64,1.301,73,2.207,166,2.594,173,1.946,225,3.157,244,3.157,245,4.439,246,3.577,247,3.577,310,1.912,312,3.157,313,3.157,314,3.157,315,2.594,316,3.31,318,3.157,319,2.385,320,3.157,321,3.157,322,3.044,323,3.157,324,3.157,325,3.157,326,3.157,327,2.844,328,3.157,329,3.157,330,3.157,331,3.157,335,3.044,340,3.969,362,4.03,365,3.998,421,1.912,505,1.674,507,3.157,508,2.844,519,3.157,520,3.157,521,2.844,522,3.157,523,2.844,524,3.157,526,3.157,985,4.03,1136,4.03,1184,5.298,1206,3.577,1210,3.577,1213,3.577,1267,2.844,1354,3.577,1355,4.214,1356,4.214,1357,4.214,1358,4.214,1359,6.241,1360,5.925,1361,5.379]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"injectables/TeachersService.html":{},"interfaces/Topic.html":{},"classes/TopicDTO.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":701,"title":{},"body":{"injectables/InviteUserService.html":{},"injectables/MailerEdu4uService.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["0.1.13",{"_index":1256,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["0.2.25",{"_index":1266,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1253,"title":{},"body":{"dependencies.html":{}}}],["0pt",{"_index":789,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["1.0.0",{"_index":1254,"title":{},"body":{"dependencies.html":{}}}],["1.5.1",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1197,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1170,"title":{},"body":{"injectables/UsersService.html":{}}}],["100",{"_index":781,"title":{},"body":{"injectables/MailerEdu4uService.html":{},"coverage.html":{}}}],["11",{"_index":1351,"title":{},"body":{"overview.html":{}}}],["11/11",{"_index":1203,"title":{},"body":{"coverage.html":{}}}],["12/12",{"_index":1212,"title":{},"body":{"coverage.html":{}}}],["13.9.1",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["13px",{"_index":803,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["2/2",{"_index":1200,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":104,"title":{},"body":{"controllers/AppController.html":{}}}],["22/22",{"_index":1202,"title":{},"body":{"coverage.html":{}}}],["3.0.0",{"_index":1243,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":1258,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":1240,"title":{},"body":{"dependencies.html":{}}}],["3.5.9",{"_index":1249,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1199,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":1246,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":1262,"title":{},"body":{"dependencies.html":{}}}],["4.5.12",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["4.6.3",{"_index":1248,"title":{},"body":{"dependencies.html":{}}}],["4.7.6",{"_index":1242,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1198,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1353,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["5.10.0",{"_index":1250,"title":{},"body":{"dependencies.html":{}}}],["5.7.36",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1205,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1350,"title":{},"body":{"overview.html":{}}}],["6.4.11",{"_index":1252,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":1260,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1204,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1177,"title":{},"body":{"injectables/UsersService.html":{}}}],["6h",{"_index":280,"title":{},"body":{"modules/AuthModule.html":{}}}],["7",{"_index":1352,"title":{},"body":{"overview.html":{}}}],["7.0.0",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1349,"title":{},"body":{"overview.html":{}}}],["8.2.0",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}],["8.6.2",{"_index":1264,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1209,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1211,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":804,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["_getmailtext",{"_index":737,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["_getmailtext(firstline",{"_index":740,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["_id",{"_index":13,"title":{},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{},"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"injectables/JwtStrategy.html":{},"interfaces/Node.html":{},"interfaces/Topic.html":{},"classes/TopicDTO.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["a,t]/}).exec",{"_index":1167,"title":{},"body":{"injectables/UsersService.html":{}}}],["access",{"_index":579,"title":{},"body":{"controllers/InviteUserController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["access_token",{"_index":175,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/TeachersController.html":{}}}],["access_token'})@apiunauthorizedresponse({description",{"_index":90,"title":{},"body":{"controllers/AppController.html":{}}}],["activities",{"_index":872,"title":{},"body":{"interfaces/Topic.html":{},"classes/TopicDTO.html":{}}}],["activity",{"_index":1,"title":{"interfaces/Activity.html":{}},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{},"classes/TopicDTO.html":{},"coverage.html":{}}}],["activity._id",{"_index":462,"title":{},"body":{"injectables/CoursesService.html":{}}}],["activitydto",{"_index":32,"title":{"classes/ActivityDTO.html":{}},"body":{"classes/ActivityDTO.html":{},"interfaces/Topic.html":{},"coverage.html":{}}}],["activityname",{"_index":14,"title":{},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{}}}],["activitytype",{"_index":15,"title":{},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{}}}],["add",{"_index":381,"title":{},"body":{"injectables/CoursesService.html":{},"controllers/TeachersController.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["addcourse",{"_index":368,"title":{},"body":{"injectables/CoursesService.html":{}}}],["addcourse(createcoursedto",{"_index":378,"title":{},"body":{"injectables/CoursesService.html":{}}}],["addnode",{"_index":885,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["addnode(@res",{"_index":963,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["addnode(createnodedto",{"_index":992,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["addnode(res",{"_index":893,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["address",{"_index":1146,"title":{},"body":{"injectables/UsersService.html":{}}}],["adduser",{"_index":825,"title":{},"body":{"controllers/TeachersController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["adduser(@res",{"_index":852,"title":{},"body":{"controllers/TeachersController.html":{},"controllers/UsersController.html":{}}}],["adduser(createuserdto",{"_index":1141,"title":{},"body":{"injectables/UsersService.html":{}}}],["adduser(res",{"_index":827,"title":{},"body":{"controllers/TeachersController.html":{},"controllers/UsersController.html":{}}}],["adjust",{"_index":780,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["admin",{"_index":414,"title":{},"body":{"injectables/CoursesService.html":{}}}],["admin@admin.com",{"_index":1083,"title":{},"body":{"classes/UserLoginDTO.html":{}}}],["adminadmin4",{"_index":1080,"title":{},"body":{"classes/UserLoginDTO.html":{}}}],["allnodes",{"_index":999,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["allnodes.filter(x",{"_index":1029,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["allnodes.filter(x=>x.parentnode",{"_index":1047,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["allnodes.filter(x=>x.teachers.includes(id",{"_index":1046,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["allnodes.filter(x=>x.teachers.length",{"_index":1026,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["allusers",{"_index":1000,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["allusers.filter(x=>x._id.equals(teacher))[0",{"_index":1038,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["already",{"_index":567,"title":{},"body":{"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"controllers/TeachersController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["always",{"_index":102,"title":{},"body":{"controllers/AppController.html":{}}}],["amazing",{"_index":1327,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1283,"title":{},"body":{"index.html":{}}}],["apibadrequestresponse",{"_index":126,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apibadrequestresponse({description",{"_index":193,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apibadrequestresponse({description:'invalid",{"_index":607,"title":{},"body":{"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UsersController.html":{}}}],["apibearerauth",{"_index":122,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apiforbiddenresponse",{"_index":121,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apiforbiddenresponse({description",{"_index":155,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apinotfoundresponse",{"_index":123,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apinotfoundresponse({description",{"_index":182,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apiokresponse",{"_index":120,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apiokresponse({description",{"_index":154,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":124,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{}}}],["apioperation({description",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{}}}],["apioperation({description:'get",{"_index":845,"title":{},"body":{"controllers/TeachersController.html":{}}}],["apiparam",{"_index":125,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apiparam({name",{"_index":194,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":43,"title":{},"body":{"classes/ActivityDTO.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/TopicDTO.html":{},"classes/UserLoginDTO.html":{}}}],["apiproperty({description",{"_index":36,"title":{},"body":{"classes/ActivityDTO.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/TopicDTO.html":{}}}],["apiproperty({example:'admin@admin.com",{"_index":1088,"title":{},"body":{"classes/UserLoginDTO.html":{}}}],["apiproperty({example:'adminadmin4",{"_index":1089,"title":{},"body":{"classes/UserLoginDTO.html":{}}}],["apiquery",{"_index":934,"title":{},"body":{"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apiquery({name",{"_index":969,"title":{},"body":{"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":118,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apitags('invite",{"_index":593,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["apitags('login",{"_index":147,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('teachers",{"_index":842,"title":{},"body":{"controllers/TeachersController.html":{}}}],["apitags('universities",{"_index":938,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["apitags('users",{"_index":1116,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiunauthorizedresponse",{"_index":119,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apiunauthorizedresponse({description",{"_index":158,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["app",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["app.controler",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":46,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1280,"title":{},"body":{"index.html":{}}}],["applied",{"_index":1303,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":205,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":340,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"interfaces/Node.html":{},"miscellaneous/variables.html":{}}}],["async",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["auth",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["auth.guard",{"_index":133,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":704,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":266,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/InviteUserModule.html":{},"modules/TeachersModule.html":{}}}],["auth/auth.service",{"_index":130,"title":{},"body":{"controllers/AppController.html":{},"controllers/TeachersController.html":{}}}],["auth/jwt",{"_index":132,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["authguard",{"_index":127,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":705,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":215,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/InviteUserModule.html":{},"modules/TeachersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1337,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":129,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/TeachersController.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":793,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["await",{"_index":176,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/LocalStrategy.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["backend",{"_index":1316,"title":{},"body":{"index.html":{}}}],["backers",{"_index":1328,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":1186,"title":{},"body":{"injectables/ValidateObjectId.html":{}}}],["badrequestexception('invalid",{"_index":1190,"title":{},"body":{"injectables/ValidateObjectId.html":{}}}],["bcrypt",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["beta.2",{"_index":1244,"title":{},"body":{"dependencies.html":{}}}],["bicubic",{"_index":799,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["block",{"_index":802,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["body",{"_index":113,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":526,"title":{},"body":{"classes/CreateUserDTO.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["border",{"_index":785,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["browse",{"_index":1347,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1345,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1275,"title":{},"body":{"index.html":{}}}],["change",{"_index":66,"title":{},"body":{"controllers/AppController.html":{},"injectables/MailerEdu4uService.html":{}}}],["changelog",{"_index":1307,"title":{},"body":{"index.html":{}}}],["changepassword",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"injectables/MailerEdu4uService.html":{}}}],["changepassword(@body",{"_index":184,"title":{},"body":{"controllers/AppController.html":{}}}],["changepassword(user",{"_index":746,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["changepassword(userlogindto",{"_index":58,"title":{},"body":{"controllers/AppController.html":{}}}],["check",{"_index":554,"title":{},"body":{"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{}}}],["checkemail",{"_index":1139,"title":{},"body":{"injectables/UsersService.html":{}}}],["checkemail(email",{"_index":1143,"title":{},"body":{"injectables/UsersService.html":{}}}],["checking",{"_index":1145,"title":{},"body":{"injectables/UsersService.html":{}}}],["checkinvitekey",{"_index":544,"title":{},"body":{"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{}}}],["checkinvitekey(@res",{"_index":624,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["checkinvitekey(invitekey",{"_index":639,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["checkinvitekey(res",{"_index":549,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["class",{"_index":31,"title":{"classes/ActivityDTO.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/TopicDTO.html":{},"classes/UserLoginDTO.html":{}},"body":{"classes/ActivityDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"injectables/TeachersService.html":{},"classes/TopicDTO.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":33,"title":{},"body":{"classes/ActivityDTO.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/TopicDTO.html":{},"classes/UserLoginDTO.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":259,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":261,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":260,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":262,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_coursesmodule",{"_index":353,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule_exports",{"_index":355,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule_imports",{"_index":354,"title":{},"body":{"modules/CoursesModule.html":{}}}],["cluster_coursesmodule_providers",{"_index":356,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_inviteusermodule",{"_index":630,"title":{},"body":{"modules/InviteUserModule.html":{},"overview.html":{}}}],["cluster_inviteusermodule_imports",{"_index":631,"title":{},"body":{"modules/InviteUserModule.html":{}}}],["cluster_inviteusermodule_providers",{"_index":632,"title":{},"body":{"modules/InviteUserModule.html":{},"overview.html":{}}}],["cluster_maileredu4umodule",{"_index":731,"title":{},"body":{"modules/MailerEdu4uModule.html":{},"overview.html":{}}}],["cluster_maileredu4umodule_exports",{"_index":732,"title":{},"body":{"modules/MailerEdu4uModule.html":{},"overview.html":{}}}],["cluster_maileredu4umodule_providers",{"_index":733,"title":{},"body":{"modules/MailerEdu4uModule.html":{},"overview.html":{}}}],["cluster_teachersmodule",{"_index":859,"title":{},"body":{"modules/TeachersModule.html":{},"overview.html":{}}}],["cluster_teachersmodule_imports",{"_index":860,"title":{},"body":{"modules/TeachersModule.html":{}}}],["cluster_teachersmodule_providers",{"_index":861,"title":{},"body":{"modules/TeachersModule.html":{},"overview.html":{}}}],["cluster_universitiesmodule",{"_index":979,"title":{},"body":{"modules/UniversitiesModule.html":{},"overview.html":{}}}],["cluster_universitiesmodule_exports",{"_index":981,"title":{},"body":{"modules/UniversitiesModule.html":{},"overview.html":{}}}],["cluster_universitiesmodule_imports",{"_index":980,"title":{},"body":{"modules/UniversitiesModule.html":{}}}],["cluster_universitiesmodule_providers",{"_index":982,"title":{},"body":{"modules/UniversitiesModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1132,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1133,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1134,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["collapse",{"_index":786,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["column",{"_index":814,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["compodoc",{"_index":1317,"title":{},"body":{"index.html":{}}}],["compodocsupport",{"_index":1318,"title":{},"body":{"index.html":{}}}],["confirm",{"_index":562,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["confirmed",{"_index":157,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"interfaces/User.html":{}}}],["confirmed'})@apioperation({description",{"_index":561,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["confirmed'})@apiunauthorizedresponse({description",{"_index":96,"title":{},"body":{"controllers/AppController.html":{}}}],["confirmedemail",{"_index":519,"title":{},"body":{"classes/CreateUserDTO.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["confirmemail",{"_index":545,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["confirmemail(@res",{"_index":618,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["confirmemail(res",{"_index":558,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["const",{"_index":165,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["constructor",{"_index":708,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/TeachersService.html":{},"injectables/UniversitiesService.html":{}}}],["constructor(@injectmodel('course",{"_index":409,"title":{},"body":{"injectables/CoursesService.html":{}}}],["constructor(@injectmodel('user",{"_index":1159,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":149,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["consultations",{"_index":332,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{}}}],["consultationsnumber",{"_index":312,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["contact",{"_index":528,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["contactphone",{"_index":520,"title":{},"body":{"classes/CreateUserDTO.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":333,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{}}}],["controller",{"_index":45,"title":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('invite",{"_index":592,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["controller('teachers",{"_index":843,"title":{},"body":{"controllers/TeachersController.html":{}}}],["controller('universities",{"_index":937,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["controller('users",{"_index":1115,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CoursesModule.html":{},"controllers/InviteUserController.html":{},"modules/InviteUserModule.html":{},"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"controllers/UsersController.html":{},"overview.html":{}}}],["controlworksnumber",{"_index":313,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["course",{"_index":310,"title":{"interfaces/Course.html":{}},"body":{"interfaces/Course.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["course._id",{"_index":437,"title":{},"body":{"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{}}}],["course.coursename",{"_index":438,"title":{},"body":{"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{}}}],["course.dto",{"_index":408,"title":{},"body":{"injectables/CoursesService.html":{}}}],["course.dto.ts",{"_index":473,"title":{},"body":{"classes/CreateCourseDTO.html":{},"coverage.html":{}}}],["course.dto.ts:101",{"_index":492,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:107",{"_index":487,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:113",{"_index":481,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:119",{"_index":482,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:12",{"_index":474,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:125",{"_index":484,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:131",{"_index":495,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:18",{"_index":480,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:24",{"_index":479,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:30",{"_index":488,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:36",{"_index":494,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:42",{"_index":493,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:47",{"_index":483,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:53",{"_index":486,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:59",{"_index":491,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:65",{"_index":489,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:71",{"_index":485,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:77",{"_index":490,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:83",{"_index":478,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:89",{"_index":477,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:95",{"_index":496,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.invitekey",{"_index":450,"title":{},"body":{"injectables/CoursesService.html":{}}}],["course.mentors.includes(user._id",{"_index":690,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["course.mentors.map(mentor",{"_index":432,"title":{},"body":{"injectables/CoursesService.html":{}}}],["course.mentors.push(user._id",{"_index":691,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["course.students.includes(user._id",{"_index":694,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["course.students.map(student",{"_index":443,"title":{},"body":{"injectables/CoursesService.html":{}}}],["course.students.push(user._id",{"_index":695,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["course.teachername",{"_index":418,"title":{},"body":{"injectables/CoursesService.html":{}}}],["course.teacherowner.equals(teacher._id",{"_index":424,"title":{},"body":{"injectables/CoursesService.html":{}}}],["course.teacherowner.equals(user._id",{"_index":416,"title":{},"body":{"injectables/CoursesService.html":{}}}],["coursedescription",{"_index":314,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["courseid",{"_index":436,"title":{},"body":{"injectables/CoursesService.html":{}}}],["coursemodel",{"_index":410,"title":{},"body":{"injectables/CoursesService.html":{}}}],["coursename",{"_index":315,"title":{},"body":{"interfaces/Course.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"controllers/InviteUserController.html":{},"miscellaneous/variables.html":{}}}],["courses",{"_index":367,"title":{},"body":{"injectables/CoursesService.html":{},"injectables/InviteUserService.html":{},"injectables/UniversitiesService.html":{}}}],["courses.controller",{"_index":360,"title":{},"body":{"modules/CoursesModule.html":{}}}],["courses.filter(course",{"_index":415,"title":{},"body":{"injectables/CoursesService.html":{}}}],["courses.foreach(function(course",{"_index":417,"title":{},"body":{"injectables/CoursesService.html":{}}}],["courses.map(course",{"_index":430,"title":{},"body":{"injectables/CoursesService.html":{}}}],["courses.service",{"_index":361,"title":{},"body":{"modules/CoursesModule.html":{}}}],["courses/courses.module",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["courses/courses.service",{"_index":647,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["courses[0",{"_index":703,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["courseschema",{"_index":362,"title":{},"body":{"modules/CoursesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursescontroller",{"_index":359,"title":{},"body":{"modules/CoursesModule.html":{},"coverage.html":{}}}],["coursesmodule",{"_index":216,"title":{"modules/CoursesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules.html":{},"overview.html":{}}}],["coursesservice",{"_index":357,"title":{"injectables/CoursesService.html":{}},"body":{"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"injectables/InviteUserService.html":{},"coverage.html":{},"overview.html":{}}}],["coverage",{"_index":1191,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cpurse",{"_index":556,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["create",{"_index":504,"title":{},"body":{"classes/CreateNodeDTO.html":{}}}],["createcoursedto",{"_index":379,"title":{"classes/CreateCourseDTO.html":{}},"body":{"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"coverage.html":{}}}],["createcoursedto._id",{"_index":455,"title":{},"body":{"injectables/CoursesService.html":{}}}],["createcoursedto.invitekey",{"_index":456,"title":{},"body":{"injectables/CoursesService.html":{}}}],["createcoursedto.topics.foreach(function(topic",{"_index":458,"title":{},"body":{"injectables/CoursesService.html":{}}}],["created",{"_index":336,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"interfaces/Node.html":{}}}],["createddate",{"_index":316,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"interfaces/Node.html":{},"miscellaneous/variables.html":{}}}],["createdduser",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createduser",{"_index":317,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"interfaces/Node.html":{}}}],["createnodedto",{"_index":501,"title":{"classes/CreateNodeDTO.html":{}},"body":{"classes/CreateNodeDTO.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"coverage.html":{}}}],["createnodedto._id",{"_index":971,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["createnodedto.createddate",{"_index":964,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["createnodedto.mentors",{"_index":1073,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["createnodedto.parentnode",{"_index":1063,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["createnodedto.teachers",{"_index":1070,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["createuserdto",{"_index":516,"title":{"classes/CreateUserDTO.html":{}},"body":{"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"controllers/TeachersController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto._id",{"_index":1127,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuserdto.email",{"_index":856,"title":{},"body":{"controllers/TeachersController.html":{},"controllers/UsersController.html":{}}}],["createuserdto.password",{"_index":1168,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.password.length",{"_index":1174,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.role",{"_index":686,"title":{},"body":{"injectables/InviteUserService.html":{},"controllers/TeachersController.html":{}}}],["credentials",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["data",{"_index":388,"title":{},"body":{"injectables/CoursesService.html":{},"injectables/UsersService.html":{}}}],["database",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":335,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"interfaces/Node.html":{},"controllers/UniversitiesController.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decode",{"_index":141,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["decoration",{"_index":796,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["decorators",{"_index":35,"title":{},"body":{"classes/ActivityDTO.html":{},"controllers/AppController.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"controllers/TeachersController.html":{},"classes/TopicDTO.html":{},"controllers/UniversitiesController.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaults",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["defined",{"_index":37,"title":{},"body":{"classes/ActivityDTO.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"classes/TopicDTO.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["delete",{"_index":384,"title":{},"body":{"injectables/CoursesService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete('/delete",{"_index":975,"title":{},"body":{"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["delete('/delete')@apinotfoundresponse({description",{"_index":1098,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete('/delete')@apiquery({name",{"_index":898,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["deletecourse",{"_index":369,"title":{},"body":{"injectables/CoursesService.html":{}}}],["deletecourse(id",{"_index":382,"title":{},"body":{"injectables/CoursesService.html":{}}}],["deleted",{"_index":901,"title":{},"body":{"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["deletedcourse",{"_index":470,"title":{},"body":{"injectables/CoursesService.html":{}}}],["deletednode",{"_index":977,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["deleteduser",{"_index":1130,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deletenode",{"_index":886,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["deletenode(@res",{"_index":976,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["deletenode(id",{"_index":994,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["deletenode(res",{"_index":897,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["deleteuser",{"_index":1091,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteuser(@res",{"_index":1129,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser(id",{"_index":1148,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteuser(res",{"_index":1097,"title":{},"body":{"controllers/UsersController.html":{}}}],["department",{"_index":342,"title":{},"body":{"interfaces/Course.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"controllers/InviteUserController.html":{},"injectables/UniversitiesService.html":{}}}],["department._id",{"_index":1044,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["department.parentnode",{"_index":1030,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["department.teachers.map(async",{"_index":1037,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["departmentname",{"_index":750,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["departments",{"_index":1002,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["dependencies",{"_index":207,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"interfaces/Topic.html":{},"classes/TopicDTO.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"index.html":{}}}],["development",{"_index":1291,"title":{},"body":{"index.html":{}}}],["disable",{"_index":160,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/TeachersService.html":{},"injectables/UsersService.html":{}}}],["display",{"_index":801,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["document",{"_index":9,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/Course.html":{},"interfaces/Node.html":{},"interfaces/Topic.html":{},"interfaces/User.html":{}}}],["documentation",{"_index":1192,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doesn't",{"_index":68,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/TeachersController.html":{},"controllers/UsersController.html":{}}}],["doesn\\'t",{"_index":156,"title":{},"body":{"controllers/AppController.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["dotenv",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":1305,"title":{},"body":{"index.html":{}}}],["dto",{"_index":506,"title":{},"body":{"classes/CreateNodeDTO.html":{},"classes/InviteUserDTO.html":{},"injectables/InviteUserService.html":{},"injectables/UsersService.html":{}}}],["dto/activity.dto",{"_index":874,"title":{},"body":{"interfaces/Topic.html":{}}}],["dto/create",{"_index":407,"title":{},"body":{"injectables/CoursesService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/invite",{"_index":589,"title":{},"body":{"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{}}}],["e2e",{"_index":1312,"title":{},"body":{"index.html":{}}}],["edit",{"_index":387,"title":{},"body":{"injectables/CoursesService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["editcourse",{"_index":370,"title":{},"body":{"injectables/CoursesService.html":{}}}],["editcourse(createcoursedto",{"_index":385,"title":{},"body":{"injectables/CoursesService.html":{}}}],["editedcourse",{"_index":451,"title":{},"body":{"injectables/CoursesService.html":{}}}],["editednode",{"_index":973,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["editeduser",{"_index":1128,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["editnode",{"_index":887,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["editnode(id",{"_index":996,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["editnode(res",{"_index":904,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["edituser",{"_index":1092,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["edituser(id",{"_index":1150,"title":{},"body":{"injectables/UsersService.html":{}}}],["edituser(res",{"_index":1101,"title":{},"body":{"controllers/UsersController.html":{}}}],["edu4u",{"_index":190,"title":{},"body":{"controllers/AppController.html":{},"injectables/InviteUserService.html":{},"injectables/MailerEdu4uService.html":{}}}],["edu4u.module",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/InviteUserModule.html":{}}}],["edu4u.module.ts",{"_index":735,"title":{},"body":{"modules/MailerEdu4uModule.html":{}}}],["edu4u.service",{"_index":139,"title":{},"body":{"controllers/AppController.html":{},"injectables/InviteUserService.html":{},"modules/MailerEdu4uModule.html":{}}}],["edu4u.service.ts",{"_index":736,"title":{},"body":{"injectables/MailerEdu4uService.html":{},"coverage.html":{}}}],["edu4u.service.ts:18",{"_index":760,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["edu4u.service.ts:35",{"_index":756,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["edu4u.service.ts:54",{"_index":752,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["edu4u.service.ts:70",{"_index":749,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["edu4u.service.ts:86",{"_index":747,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["edu4u.service.ts:99",{"_index":742,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["edu4u.user",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["edu4u.user@gmail.com",{"_index":766,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["edu4u/mailer",{"_index":138,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"coverage.html":{}}}],["edu4upassword",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["education",{"_index":345,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{}}}],["efficient",{"_index":1276,"title":{},"body":{"index.html":{}}}],["element._id",{"_index":1050,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["element.nodename",{"_index":1051,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["email",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/TeachersController.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["email'})@apibadrequestresponse({description",{"_index":563,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["email'})@apiforbiddenresponse({description",{"_index":835,"title":{},"body":{"controllers/TeachersController.html":{}}}],["email'})@post('/auth/password",{"_index":71,"title":{},"body":{"controllers/AppController.html":{}}}],["email}).exec",{"_index":1165,"title":{},"body":{"injectables/UsersService.html":{}}}],["eslint",{"_index":159,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/TeachersService.html":{},"injectables/UsersService.html":{}}}],["exec",{"_index":448,"title":{},"body":{"injectables/CoursesService.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["exist",{"_index":97,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["exist!'})@apibadrequestresponse({description",{"_index":838,"title":{},"body":{"controllers/TeachersController.html":{},"controllers/UsersController.html":{}}}],["exist!'})@apinotfoundresponse({description",{"_index":837,"title":{},"body":{"controllers/TeachersController.html":{}}}],["exist!'})@apiokresponse({description",{"_index":69,"title":{},"body":{"controllers/AppController.html":{}}}],["exist.'})@apibadrequestresponse({description",{"_index":1109,"title":{},"body":{"controllers/UsersController.html":{}}}],["existence",{"_index":1147,"title":{},"body":{"injectables/UsersService.html":{}}}],["exists",{"_index":605,"title":{},"body":{"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"controllers/TeachersController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["exists'})@apibadrequestresponse({description",{"_index":1103,"title":{},"body":{"controllers/UsersController.html":{}}}],["exists'})@apiokresponse({description",{"_index":560,"title":{},"body":{"controllers/InviteUserController.html":{},"controllers/UsersController.html":{}}}],["expired",{"_index":595,"title":{},"body":{"controllers/InviteUserController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["expired'})@apiokresponse({description",{"_index":581,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["expiresin",{"_index":278,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":27,"title":{},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"injectables/TeachersService.html":{},"interfaces/Topic.html":{},"classes/TopicDTO.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["exports",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":10,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/Course.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/Node.html":{},"interfaces/Topic.html":{},"interfaces/User.html":{}}}],["extractjwt",{"_index":712,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":718,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":476,"title":{},"body":{"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{}}}],["fastify",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["fetch",{"_index":912,"title":{},"body":{"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"injectables/TeachersService.html":{},"interfaces/Topic.html":{},"classes/TopicDTO.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"coverage.html":{}}}],["find",{"_index":1025,"title":{},"body":{"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["find({\"invitekey",{"_index":454,"title":{},"body":{"injectables/CoursesService.html":{}}}],["find({\"parentdepartment",{"_index":453,"title":{},"body":{"injectables/CoursesService.html":{}}}],["find({\"parentnode",{"_index":1024,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["findbyidandremove(id",{"_index":471,"title":{},"body":{"injectables/CoursesService.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["findbyidandupdate(course.id",{"_index":452,"title":{},"body":{"injectables/CoursesService.html":{}}}],["findbyidandupdate(createcoursedto._id",{"_index":468,"title":{},"body":{"injectables/CoursesService.html":{}}}],["findbyidandupdate(id",{"_index":1075,"title":{},"body":{"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["findone(id",{"_index":447,"title":{},"body":{"injectables/CoursesService.html":{},"injectables/UniversitiesService.html":{}}}],["findone(userid",{"_index":1163,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyemail",{"_index":1140,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyemail(email",{"_index":1152,"title":{},"body":{"injectables/UsersService.html":{}}}],["first",{"_index":532,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["firstline",{"_index":745,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["firstname",{"_index":521,"title":{},"body":{"classes/CreateUserDTO.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["fix",{"_index":807,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["forbidden",{"_index":939,"title":{},"body":{"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["forbidden.'})@apinotfoundresponse({description",{"_index":1108,"title":{},"body":{"controllers/UsersController.html":{}}}],["forbiddenexception",{"_index":114,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"injectables/UsersService.html":{}}}],["forbiddenexception('email",{"_index":174,"title":{},"body":{"controllers/AppController.html":{}}}],["forbiddenexception('teacher",{"_index":857,"title":{},"body":{"controllers/TeachersController.html":{},"injectables/TeachersService.html":{}}}],["forbiddenexception('user",{"_index":619,"title":{},"body":{"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/UsersService.html":{}}}],["found",{"_index":551,"title":{},"body":{"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{}}}],["framework",{"_index":1274,"title":{},"body":{"index.html":{}}}],["from:'\"edu4u",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["full",{"_index":819,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["function",{"_index":1208,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1268,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:id",{"_index":954,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["get('/:id')@apiokresponse({description",{"_index":909,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["get('/check/:invitekey",{"_index":622,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["get('/check/:invitekey')@apinotfoundresponse({description",{"_index":550,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["get('/newteacher/:id",{"_index":844,"title":{},"body":{"controllers/TeachersController.html":{}}}],["get('/newteacher/:id')@apioperation({description",{"_index":833,"title":{},"body":{"controllers/TeachersController.html":{}}}],["get('/profile",{"_index":201,"title":{},"body":{"controllers/AppController.html":{}}}],["get('/profile/:id",{"_index":192,"title":{},"body":{"controllers/AppController.html":{}}}],["get('/profile/:id')@apibadrequestresponse({description",{"_index":86,"title":{},"body":{"controllers/AppController.html":{}}}],["get('/teachers",{"_index":949,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["get('/teachers')@apiokresponse({description",{"_index":926,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["get('/tree",{"_index":940,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["get('/tree')@apiokresponse({description",{"_index":929,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["get('/universities",{"_index":945,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["get('/universities')@apiokresponse({description",{"_index":915,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["get('/users",{"_index":1117,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/users')@apiokresponse({description",{"_index":1112,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':userid",{"_index":1120,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':userid')@apiokresponse({description",{"_index":1106,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('nodes/:id",{"_index":958,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["get('nodes/:id')@apiokresponse({description",{"_index":920,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["getcourse",{"_index":371,"title":{},"body":{"injectables/CoursesService.html":{}}}],["getcourse(id",{"_index":389,"title":{},"body":{"injectables/CoursesService.html":{}}}],["getcourses",{"_index":372,"title":{},"body":{"injectables/CoursesService.html":{}}}],["getcourses(id",{"_index":391,"title":{},"body":{"injectables/CoursesService.html":{}}}],["getcoursesdepartmentid",{"_index":373,"title":{},"body":{"injectables/CoursesService.html":{}}}],["getcoursesdepartmentid(id",{"_index":394,"title":{},"body":{"injectables/CoursesService.html":{}}}],["getcoursesinvitekey",{"_index":374,"title":{},"body":{"injectables/CoursesService.html":{}}}],["getcoursesinvitekey(invitekey",{"_index":396,"title":{},"body":{"injectables/CoursesService.html":{}}}],["getdepartments",{"_index":988,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["getdepartments(id",{"_index":998,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["getinstitutions",{"_index":989,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["getinstitutions(id",{"_index":1004,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["getmentors",{"_index":375,"title":{},"body":{"injectables/CoursesService.html":{}}}],["getmentors(id",{"_index":398,"title":{},"body":{"injectables/CoursesService.html":{}}}],["getnewteacher",{"_index":865,"title":{},"body":{"injectables/TeachersService.html":{}}}],["getnewteacher(id",{"_index":866,"title":{},"body":{"injectables/TeachersService.html":{}}}],["getnode",{"_index":888,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["getnode(@res",{"_index":955,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["getnode(id",{"_index":1008,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["getnode(res",{"_index":908,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["getnodes",{"_index":889,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["getnodes(@res",{"_index":946,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["getnodes(id",{"_index":1010,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["getnodes(res",{"_index":914,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["getnodespatentid",{"_index":890,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["getnodespatentid(@res",{"_index":959,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["getnodespatentid(res",{"_index":919,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["getprofile",{"_index":53,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@request",{"_index":202,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":77,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofilebyid",{"_index":54,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofilebyid(@request",{"_index":195,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofilebyid(req",{"_index":85,"title":{},"body":{"controllers/AppController.html":{}}}],["getstudents",{"_index":376,"title":{},"body":{"injectables/CoursesService.html":{}}}],["getstudents(id",{"_index":400,"title":{},"body":{"injectables/CoursesService.html":{}}}],["getteachernode",{"_index":990,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["getteachernode(id",{"_index":1012,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["getteachers",{"_index":991,"title":{},"body":{"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["getteachers(teachers",{"_index":1014,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["getteachersinfo",{"_index":891,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["getteachersinfo(@res",{"_index":950,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["getteachersinfo(res",{"_index":925,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["getting",{"_index":1270,"title":{"index.html":{}},"body":{}}],["gettree",{"_index":892,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["gettree(@res",{"_index":941,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["gettree(res",{"_index":928,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["getuser",{"_index":1093,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getuser(@res",{"_index":1121,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuser(res",{"_index":1105,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuser(userid",{"_index":1155,"title":{},"body":{"injectables/UsersService.html":{}}}],["getusers",{"_index":1094,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getusers(@res",{"_index":1118,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(res",{"_index":1111,"title":{},"body":{"controllers/UsersController.html":{}}}],["group",{"_index":806,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["grow",{"_index":1323,"title":{},"body":{"index.html":{}}}],["handlebars",{"_index":1241,"title":{},"body":{"dependencies.html":{}}}],["headers",{"_index":109,"title":{},"body":{"controllers/AppController.html":{}}}],["headers.authorization.replace('bearer",{"_index":180,"title":{},"body":{"controllers/AppController.html":{}}}],["heavily",{"_index":1281,"title":{},"body":{"index.html":{}}}],["height",{"_index":792,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["here",{"_index":1334,"title":{},"body":{"index.html":{}}}],["host",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["hours",{"_index":16,"title":{},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{},"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{}}}],["hours',required",{"_index":499,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["hoursnumber",{"_index":318,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":767,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["htmloutput",{"_index":774,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["http://localhost:3001/api",{"_index":1315,"title":{},"body":{"index.html":{}}}],["https://edu4u.gitlab.io/edu4u/#/changepassword/${user._id",{"_index":773,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["https://edu4u.gitlab.io/edu4u/#/confirmation/mentor/${user._id",{"_index":772,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["https://edu4u.gitlab.io/edu4u/#/confirmation/student/${user._id",{"_index":771,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["https://edu4u.gitlab.io/edu4u/#/registration/teacher/${user._id",{"_index":768,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["https://nestjs.com",{"_index":1341,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":585,"title":{},"body":{"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["id",{"_index":21,"title":{},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{},"controllers/AppController.html":{},"interfaces/Course.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"injectables/InviteUserService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"interfaces/Topic.html":{},"classes/TopicDTO.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["id!'})@apiokresponse({description",{"_index":900,"title":{},"body":{"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["id!'})@apiparam({name",{"_index":88,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["id',required",{"_index":500,"title":{},"body":{"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{}}}],["id'})@apibadrequestresponse({description",{"_index":922,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["id'})@apiokresponse({description",{"_index":834,"title":{},"body":{"controllers/TeachersController.html":{}}}],["id.pipes",{"_index":146,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["id.pipes.ts",{"_index":1179,"title":{},"body":{"injectables/ValidateObjectId.html":{},"coverage.html":{}}}],["id.pipes.ts:14",{"_index":1182,"title":{},"body":{"injectables/ValidateObjectId.html":{}}}],["identifier",{"_index":1193,"title":{},"body":{"coverage.html":{}}}],["if(!activity._id",{"_index":467,"title":{},"body":{"injectables/CoursesService.html":{}}}],["if(!course",{"_index":449,"title":{},"body":{"injectables/CoursesService.html":{}}}],["if(!createnodedto.mentors",{"_index":1072,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["if(!createnodedto.parentnode",{"_index":1062,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["if(!createnodedto.teachers",{"_index":1069,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["if(!createuserdto",{"_index":682,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["if(!createuserdto.password",{"_index":1173,"title":{},"body":{"injectables/UsersService.html":{}}}],["if(!inviteuserdto",{"_index":651,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["if(!node",{"_index":655,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["if(!node.teachers.includes(user._id",{"_index":671,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["if(!topic._id",{"_index":466,"title":{},"body":{"injectables/CoursesService.html":{}}}],["if(!user",{"_index":186,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{}}}],["if((role",{"_index":168,"title":{},"body":{"controllers/AppController.html":{}}}],["if(course.mentors",{"_index":431,"title":{},"body":{"injectables/CoursesService.html":{}}}],["if(course.students",{"_index":442,"title":{},"body":{"injectables/CoursesService.html":{}}}],["if(courses.length",{"_index":700,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["if(createcoursedto.topics",{"_index":457,"title":{},"body":{"injectables/CoursesService.html":{}}}],["if(createuserdto.password.length",{"_index":1176,"title":{},"body":{"injectables/UsersService.html":{}}}],["if(institute",{"_index":1032,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["if(isolduser",{"_index":697,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["if(newrole",{"_index":688,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["if(req.user['_doc'].role",{"_index":164,"title":{},"body":{"controllers/AppController.html":{}}}],["if(teacher",{"_index":425,"title":{},"body":{"injectables/CoursesService.html":{}}}],["if(teacher.email",{"_index":855,"title":{},"body":{"controllers/TeachersController.html":{}}}],["if(teachers.length",{"_index":1060,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["if(topic.activities",{"_index":460,"title":{},"body":{"injectables/CoursesService.html":{}}}],["if(university",{"_index":1036,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["if(user",{"_index":434,"title":{},"body":{"injectables/CoursesService.html":{},"injectables/UniversitiesService.html":{}}}],["if(user.role",{"_index":413,"title":{},"body":{"injectables/CoursesService.html":{},"injectables/InviteUserService.html":{}}}],["ignore",{"_index":148,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ignoreexpiration",{"_index":719,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["img",{"_index":791,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["implements",{"_index":1187,"title":{},"body":{"injectables/ValidateObjectId.html":{}}}],["import",{"_index":25,"title":{},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"injectables/TeachersService.html":{},"interfaces/Topic.html":{},"classes/TopicDTO.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["important",{"_index":809,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["imports",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{}}}],["imports:[usersmodule",{"_index":636,"title":{},"body":{"modules/InviteUserModule.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"interfaces/Topic.html":{},"classes/TopicDTO.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"injectables/TeachersService.html":{},"interfaces/Topic.html":{},"classes/TopicDTO.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["informations",{"_index":1017,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["injectable",{"_index":281,"title":{"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"injectables/TeachersService.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"injectables/TeachersService.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"coverage.html":{}}}],["injectables",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"injectables/TeachersService.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"overview.html":{}}}],["injectmodel",{"_index":406,"title":{},"body":{"injectables/CoursesService.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel('node",{"_index":1022,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["inspired",{"_index":1282,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1288,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1290,"title":{},"body":{"index.html":{}}}],["institite",{"_index":674,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["institite.nodename",{"_index":680,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["instititename",{"_index":754,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["institute",{"_index":1003,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["institute._id",{"_index":1042,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["institute.parentnode",{"_index":1034,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["institutions",{"_index":1006,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["interests",{"_index":522,"title":{},"body":{"classes/CreateUserDTO.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Activity.html":{},"interfaces/Course.html":{},"interfaces/Node.html":{},"interfaces/Topic.html":{},"interfaces/User.html":{}},"body":{"interfaces/Activity.html":{},"interfaces/Course.html":{},"interfaces/Node.html":{},"interfaces/Topic.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/Course.html":{},"interfaces/Node.html":{},"interfaces/Topic.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interfaces/activity.interface",{"_index":881,"title":{},"body":{"classes/TopicDTO.html":{}}}],["interfaces/course.interface",{"_index":405,"title":{},"body":{"injectables/CoursesService.html":{}}}],["interfaces/node.interface",{"_index":1019,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["interfaces/topic.interface",{"_index":497,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["interfaces/user.interface",{"_index":1158,"title":{},"body":{"injectables/UsersService.html":{}}}],["interpolation",{"_index":797,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["invalid",{"_index":87,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["invitation",{"_index":582,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["invite",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{}}}],["invited",{"_index":602,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["invitekey",{"_index":319,"title":{},"body":{"interfaces/Course.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"miscellaneous/variables.html":{}}}],["invitekey'})@apiokresponse({description",{"_index":552,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["invitementor",{"_index":546,"title":{},"body":{"controllers/InviteUserController.html":{},"injectables/MailerEdu4uService.html":{}}}],["invitementor(@res",{"_index":608,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["invitementor(departmentname",{"_index":748,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["invitementor(res",{"_index":565,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["invitestudent",{"_index":547,"title":{},"body":{"controllers/InviteUserController.html":{},"injectables/MailerEdu4uService.html":{}}}],["invitestudent(@res",{"_index":614,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["invitestudent(departmentname",{"_index":751,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["invitestudent(res",{"_index":573,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["inviteteacher",{"_index":548,"title":{},"body":{"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/MailerEdu4uService.html":{}}}],["inviteteacher(@res",{"_index":598,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["inviteteacher(departmentname",{"_index":753,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["inviteteacher(inviteuserdto",{"_index":641,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["inviteteacher(res",{"_index":576,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["inviteuser",{"_index":638,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["inviteuser(invitekey",{"_index":643,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["inviteusercontroller",{"_index":540,"title":{"controllers/InviteUserController.html":{}},"body":{"controllers/InviteUserController.html":{},"modules/InviteUserModule.html":{},"coverage.html":{}}}],["inviteuserdto",{"_index":577,"title":{"classes/InviteUserDTO.html":{}},"body":{"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"injectables/InviteUserService.html":{},"coverage.html":{}}}],["inviteuserdto.email",{"_index":660,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["inviteusermodule",{"_index":217,"title":{"modules/InviteUserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InviteUserModule.html":{},"modules.html":{},"overview.html":{}}}],["inviteuserservice",{"_index":590,"title":{"injectables/InviteUserService.html":{}},"body":{"controllers/InviteUserController.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"coverage.html":{},"overview.html":{}}}],["isemail",{"_index":1085,"title":{},"body":{"classes/UserLoginDTO.html":{}}}],["isemail()@apiproperty({example",{"_index":1082,"title":{},"body":{"classes/UserLoginDTO.html":{}}}],["isnotempty",{"_index":1086,"title":{},"body":{"classes/UserLoginDTO.html":{}}}],["isnotempty()@apiproperty({example",{"_index":1079,"title":{},"body":{"classes/UserLoginDTO.html":{}}}],["isolduser",{"_index":684,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["isvalid",{"_index":1183,"title":{},"body":{"injectables/ValidateObjectId.html":{}}}],["join",{"_index":1330,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":140,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":272,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":131,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":717,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":270,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":273,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":263,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1338,"title":{},"body":{"index.html":{}}}],["key",{"_index":337,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{}}}],["laboratory",{"_index":338,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{}}}],["laboratoryworksnumber",{"_index":320,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":535,"title":{},"body":{"classes/CreateUserDTO.html":{},"index.html":{}}}],["lastname",{"_index":523,"title":{},"body":{"classes/CreateUserDTO.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["lectures",{"_index":339,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{}}}],["lecturesnumber",{"_index":321,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":1344,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1320,"title":{},"body":{"index.html":{}}}],["line",{"_index":162,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/MailerEdu4uService.html":{},"injectables/TeachersService.html":{},"injectables/UsersService.html":{}}}],["link",{"_index":741,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["links",{"_index":17,"title":{},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{}}}],["list",{"_index":916,"title":{},"body":{"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["local",{"_index":726,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":269,"title":{},"body":{"modules/AuthModule.html":{}}}],["localstrategy",{"_index":264,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":163,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":92,"title":{},"body":{"controllers/AppController.html":{}}}],["login(user",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginnewuser",{"_index":826,"title":{},"body":{"controllers/TeachersController.html":{}}}],["loginnewuser(res",{"_index":832,"title":{},"body":{"controllers/TeachersController.html":{}}}],["logout",{"_index":56,"title":{},"body":{"controllers/AppController.html":{}}}],["lspace",{"_index":788,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["mail",{"_index":743,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["mailer",{"_index":137,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{}}}],["maileredu4umodule",{"_index":218,"title":{"modules/MailerEdu4uModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules.html":{},"overview.html":{}}}],["maileredu4uservice",{"_index":136,"title":{"injectables/MailerEdu4uService.html":{}},"body":{"controllers/AppController.html":{},"injectables/InviteUserService.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"coverage.html":{},"overview.html":{}}}],["mailermodule",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["mailermodule.forroot",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["mailerservice",{"_index":151,"title":{},"body":{"controllers/AppController.html":{},"injectables/MailerEdu4uService.html":{}}}],["mailsubject",{"_index":762,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["mailtext",{"_index":759,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["mailto",{"_index":761,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["margin",{"_index":777,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["matching",{"_index":29,"title":{},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"injectables/TeachersService.html":{},"interfaces/Topic.html":{},"classes/TopicDTO.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":817,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["media",{"_index":810,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["mentor",{"_index":170,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/MailerEdu4uService.html":{}}}],["mentore",{"_index":568,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["mentors",{"_index":322,"title":{},"body":{"interfaces/Course.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"interfaces/Node.html":{},"miscellaneous/variables.html":{}}}],["mentors.push",{"_index":435,"title":{},"body":{"injectables/CoursesService.html":{}}}],["message",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/InviteUserController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["metadata",{"_index":1188,"title":{},"body":{"injectables/ValidateObjectId.html":{},"dependencies.html":{}}}],["methods",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["migrate",{"_index":1245,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["migration",{"_index":1304,"title":{},"body":{"index.html":{}}}],["migrations",{"_index":1298,"title":{},"body":{"index.html":{}}}],["min",{"_index":812,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["miscellaneous",{"_index":1267,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1319,"title":{},"body":{"index.html":{}}}],["mj",{"_index":805,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["mjml",{"_index":1247,"title":{},"body":{"dependencies.html":{}}}],["mobile",{"_index":820,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["mode",{"_index":798,"title":{},"body":{"injectables/MailerEdu4uService.html":{},"index.html":{}}}],["model",{"_index":404,"title":{},"body":{"injectables/CoursesService.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":204,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":206,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailerEdu4uService.html":{},"dependencies.html":{}}}],["mongo",{"_index":1300,"title":{},"body":{"index.html":{}}}],["mongodb",{"_index":26,"title":{},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{},"controllers/AppController.html":{},"interfaces/Course.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"interfaces/Topic.html":{},"classes/TopicDTO.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongodb+srv://alex:admin@cluster0.jczgn.mongodb.net/edu4u?retrywrites=true&w=majority",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":8,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/Course.html":{},"injectables/CoursesService.html":{},"interfaces/Node.html":{},"interfaces/Topic.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mongoose.schema",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.types.objectid.isvalid(value",{"_index":1189,"title":{},"body":{"injectables/ValidateObjectId.html":{}}}],["mongoosemodule",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":364,"title":{},"body":{"modules/CoursesModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forroot(url",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":1333,"title":{},"body":{"index.html":{}}}],["ms",{"_index":782,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["mso",{"_index":787,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["mysecret",{"_index":276,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["myśliwiec",{"_index":1339,"title":{},"body":{"index.html":{}}}],["name",{"_index":23,"title":{},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"interfaces/Topic.html":{},"classes/TopicDTO.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["name\":department.nodename",{"_index":1045,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["name\":institute.nodename",{"_index":1043,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["name\":university.nodename",{"_index":1041,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["name'})@apioperation({description",{"_index":553,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["nest",{"_index":1284,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1343,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailerEdu4uService.html":{},"dependencies.html":{}}}],["nestjs/cli",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":117,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":271,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":128,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":44,"title":{},"body":{"classes/ActivityDTO.html":{},"controllers/AppController.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"controllers/TeachersController.html":{},"classes/TopicDTO.html":{},"controllers/UniversitiesController.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjsx/crud",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":173,"title":{},"body":{"controllers/AppController.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/LocalStrategy.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new!'})@apiunauthorizedresponse({description",{"_index":836,"title":{},"body":{"controllers/TeachersController.html":{}}}],["newcourse",{"_index":463,"title":{},"body":{"injectables/CoursesService.html":{}}}],["newcourse.save",{"_index":465,"title":{},"body":{"injectables/CoursesService.html":{}}}],["newmentor",{"_index":610,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["newnode",{"_index":965,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["newnode.save",{"_index":1065,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["newrole",{"_index":644,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["newstudent",{"_index":615,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["newteacher",{"_index":599,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["newuser",{"_index":658,"title":{},"body":{"injectables/InviteUserService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["newuser.contactphone",{"_index":664,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["newuser.email",{"_index":659,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["newuser.firstname",{"_index":665,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["newuser.interests",{"_index":668,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["newuser.lastname",{"_index":666,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["newuser.password",{"_index":662,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["newuser.role",{"_index":661,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["newuser.save",{"_index":1172,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuser.title",{"_index":667,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["newuserpassword",{"_index":663,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["next",{"_index":161,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/TeachersService.html":{},"injectables/UsersService.html":{}}}],["node",{"_index":505,"title":{"interfaces/Node.html":{}},"body":{"classes/CreateNodeDTO.html":{},"classes/InviteUserDTO.html":{},"injectables/InviteUserService.html":{},"interfaces/Node.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["node._id",{"_index":1056,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["node.dto",{"_index":936,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["node.dto.ts",{"_index":503,"title":{},"body":{"classes/CreateNodeDTO.html":{},"coverage.html":{}}}],["node.dto.ts:11",{"_index":509,"title":{},"body":{"classes/CreateNodeDTO.html":{}}}],["node.dto.ts:17",{"_index":513,"title":{},"body":{"classes/CreateNodeDTO.html":{}}}],["node.dto.ts:23",{"_index":514,"title":{},"body":{"classes/CreateNodeDTO.html":{}}}],["node.dto.ts:29",{"_index":515,"title":{},"body":{"classes/CreateNodeDTO.html":{}}}],["node.dto.ts:35",{"_index":512,"title":{},"body":{"classes/CreateNodeDTO.html":{}}}],["node.dto.ts:41",{"_index":510,"title":{},"body":{"classes/CreateNodeDTO.html":{}}}],["node.dto.ts:47",{"_index":511,"title":{},"body":{"classes/CreateNodeDTO.html":{}}}],["node.js",{"_index":1273,"title":{},"body":{"index.html":{}}}],["node.nodename",{"_index":1057,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["node.teachers.push(user._id",{"_index":672,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["node[],allusers",{"_index":1053,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["nodeid",{"_index":627,"title":{},"body":{"classes/InviteUserDTO.html":{}}}],["nodemailer",{"_index":1251,"title":{},"body":{"dependencies.html":{}}}],["nodemodel",{"_index":1021,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["nodename",{"_index":507,"title":{},"body":{"classes/CreateNodeDTO.html":{},"interfaces/Node.html":{},"miscellaneous/variables.html":{}}}],["nodes",{"_index":921,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["nodes).map(node",{"_index":1055,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["nodes.map(department",{"_index":1028,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["nodes.map(element",{"_index":1048,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["nodeschema",{"_index":985,"title":{},"body":{"modules/UniversitiesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["none",{"_index":795,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["notfoundexception",{"_index":115,"title":{},"body":{"controllers/AppController.html":{},"injectables/InviteUserService.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["notfoundexception('incorrect",{"_index":972,"title":{},"body":{"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["notfoundexception('invalid",{"_index":652,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["notfoundexception('newnode",{"_index":967,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["notfoundexception('node",{"_index":656,"title":{},"body":{"injectables/InviteUserService.html":{},"controllers/UniversitiesController.html":{}}}],["notfoundexception('nodes",{"_index":961,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["notfoundexception('not",{"_index":702,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["notfoundexception('teacher",{"_index":869,"title":{},"body":{"injectables/TeachersService.html":{}}}],["notfoundexception('teachers",{"_index":952,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["notfoundexception('universities",{"_index":943,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["notfoundexception('user",{"_index":187,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["npm",{"_index":1289,"title":{},"body":{"index.html":{}}}],["nregistry",{"_index":606,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["nreturn",{"_index":623,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["nsend",{"_index":596,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["null",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UniversitiesService.html":{}}}],["number",{"_index":24,"title":{},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{},"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateUserDTO.html":{},"miscellaneous/variables.html":{}}}],["number',required",{"_index":498,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["nwaiting",{"_index":597,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["object",{"_index":145,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{},"injectables/ValidateObjectId.html":{},"coverage.html":{}}}],["objectid",{"_index":18,"title":{},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{},"controllers/AppController.html":{},"interfaces/Course.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"interfaces/Topic.html":{},"classes/TopicDTO.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"miscellaneous/variables.html":{}}}],["objectid(createuserdto._id",{"_index":853,"title":{},"body":{"controllers/TeachersController.html":{}}}],["objectid(id",{"_index":198,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{}}}],["objectid(invitekey",{"_index":612,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["objectid(inviteuserdto.nodeid",{"_index":653,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["objectid(req.user._id",{"_index":203,"title":{},"body":{"controllers/AppController.html":{}}}],["objectid(userid",{"_index":1123,"title":{},"body":{"controllers/UsersController.html":{}}}],["objectid):promise",{"_index":698,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["old",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["oldnode",{"_index":1066,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["oldnode.mentors",{"_index":1074,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["oldnode.parentnode",{"_index":1068,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["oldnode.teachers",{"_index":1071,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["open",{"_index":1321,"title":{},"body":{"index.html":{}}}],["optional",{"_index":75,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["out",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["outline",{"_index":794,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["outlook",{"_index":775,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["overview",{"_index":1348,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":348,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{}}}],["p",{"_index":800,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["package",{"_index":1215,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":776,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["param",{"_index":116,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["param('id",{"_index":196,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{}}}],["param('invitekey",{"_index":609,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["param('userid",{"_index":1122,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":74,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["parent",{"_index":341,"title":{},"body":{"interfaces/Course.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"interfaces/Node.html":{},"controllers/UniversitiesController.html":{}}}],["parentdepartment",{"_index":323,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["parentnode",{"_index":508,"title":{},"body":{"classes/CreateNodeDTO.html":{},"interfaces/Node.html":{},"injectables/UniversitiesService.html":{},"miscellaneous/variables.html":{}}}],["particular",{"_index":913,"title":{},"body":{"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["pass",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["passport",{"_index":714,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":268,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":707,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":715,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":73,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDTO.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"miscellaneous/variables.html":{}}}],["password'})@apinotfoundresponse({description",{"_index":67,"title":{},"body":{"controllers/AppController.html":{}}}],["passwordvalidation",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["patent",{"_index":924,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["payload",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":722,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":721,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["per",{"_index":815,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["phone",{"_index":529,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["pipes/validate",{"_index":144,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["pipetransform",{"_index":1185,"title":{},"body":{"injectables/ValidateObjectId.html":{}}}],["please",{"_index":1331,"title":{},"body":{"index.html":{}}}],["post",{"_index":111,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["post('/add",{"_index":851,"title":{},"body":{"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["post('/add')@apiforbiddenresponse({description",{"_index":1095,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('/add')@apiokresponse({description",{"_index":894,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["post('/add')@apioperation({description",{"_index":828,"title":{},"body":{"controllers/TeachersController.html":{}}}],["post('/auth/login",{"_index":153,"title":{},"body":{"controllers/AppController.html":{}}}],["post('/auth/logout",{"_index":179,"title":{},"body":{"controllers/AppController.html":{}}}],["post('/auth/logout')@apiokresponse({description",{"_index":101,"title":{},"body":{"controllers/AppController.html":{}}}],["post('/auth/password",{"_index":183,"title":{},"body":{"controllers/AppController.html":{}}}],["post('/auth/refresh",{"_index":107,"title":{},"body":{"controllers/AppController.html":{}}}],["post('/confirm/:id",{"_index":617,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["post('/confirm/:id')@apiforbiddenresponse({description",{"_index":559,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["post('/mentor/:invitekey",{"_index":604,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["post('/mentor/:invitekey')@apiforbiddenresponse({description",{"_index":566,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["post('/student/:invitekey",{"_index":613,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["post('/student/:invitekey')@apiforbiddenresponse({description",{"_index":574,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["post('/teacher",{"_index":594,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["post('/teacher')@useguards(jwtauthguard)@apibearerauth()@apiunauthorizedresponse({description",{"_index":578,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["practices",{"_index":343,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{}}}],["practicesnumber",{"_index":324,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":543,"title":{},"body":{"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["print",{"_index":1306,"title":{},"body":{"index.html":{}}}],["private",{"_index":150,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["process.env.db_uri",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.jwt_expires_in",{"_index":279,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.jwt_secret",{"_index":275,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["production",{"_index":1296,"title":{},"body":{"index.html":{}}}],["profile",{"_index":83,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UsersController.html":{}}}],["profile'})@apiforbiddenresponse({description",{"_index":95,"title":{},"body":{"controllers/AppController.html":{},"controllers/TeachersController.html":{}}}],["profile'})@apioperation({description",{"_index":569,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["profile'})@apiquery({name",{"_index":1099,"title":{},"body":{"controllers/UsersController.html":{}}}],["profile'})@apiunauthorizedresponse({description",{"_index":80,"title":{},"body":{"controllers/AppController.html":{}}}],["progressive",{"_index":1272,"title":{},"body":{"index.html":{}}}],["project",{"_index":1322,"title":{},"body":{"index.html":{}}}],["promise",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"injectables/InviteUserService.html":{},"injectables/LocalStrategy.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":12,"title":{},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{},"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"classes/InviteUserDTO.html":{},"interfaces/Node.html":{},"interfaces/Topic.html":{},"classes/TopicDTO.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{}}}],["providers",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":738,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["push",{"_index":689,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["put",{"_index":932,"title":{},"body":{"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["put('/edit",{"_index":968,"title":{},"body":{"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["put('/edit')@apiquery({name",{"_index":905,"title":{},"body":{"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["query",{"_index":933,"title":{},"body":{"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["query('id",{"_index":970,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["query('userid",{"_index":1126,"title":{},"body":{"controllers/UsersController.html":{}}}],["read",{"_index":1332,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":352,"title":{},"body":{"interfaces/Course.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/InviteUserDTO.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"classes/TopicDTO.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["reference",{"_index":65,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":1255,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["refresh(headers",{"_index":106,"title":{},"body":{"controllers/AppController.html":{}}}],["refresh(token",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["registry",{"_index":570,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["repository",{"_index":1287,"title":{},"body":{"index.html":{}}}],["req",{"_index":84,"title":{},"body":{"controllers/AppController.html":{}}}],["req.user['_doc",{"_index":178,"title":{},"body":{"controllers/AppController.html":{}}}],["req.user['_doc'].confirmedemail",{"_index":171,"title":{},"body":{"controllers/AppController.html":{}}}],["req.user['_doc'].role",{"_index":167,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":110,"title":{},"body":{"controllers/AppController.html":{}}}],["require('bcrypt').compare('newuserpassword",{"_index":870,"title":{},"body":{"injectables/TeachersService.html":{}}}],["require('bcrypt').compare(pass",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["require('bcrypt').hash(createuserdto.password",{"_index":1169,"title":{},"body":{"injectables/UsersService.html":{}}}],["required",{"_index":475,"title":{},"body":{"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{}}}],["res",{"_index":557,"title":{},"body":{"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["res.status(httpstatus.ok).json",{"_index":601,"title":{},"body":{"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["res.status(httpstatus.ok).json(node",{"_index":957,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["res.status(httpstatus.ok).json(nodes",{"_index":962,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["res.status(httpstatus.ok).json(result",{"_index":850,"title":{},"body":{"controllers/TeachersController.html":{}}}],["res.status(httpstatus.ok).json(teachers",{"_index":953,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["res.status(httpstatus.ok).json(tree",{"_index":944,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["res.status(httpstatus.ok).json(universities",{"_index":948,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["res.status(httpstatus.ok).json(user",{"_index":1124,"title":{},"body":{"controllers/UsersController.html":{}}}],["res.status(httpstatus.ok).json(users",{"_index":1119,"title":{},"body":{"controllers/UsersController.html":{}}}],["reset",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["result",{"_index":28,"title":{},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"injectables/TeachersService.html":{},"interfaces/Topic.html":{},"classes/TopicDTO.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":30,"title":{},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"injectables/TeachersService.html":{},"interfaces/Topic.html":{},"classes/TopicDTO.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":79,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["returned",{"_index":917,"title":{},"body":{"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["returned.'})@apibadrequestresponse({description",{"_index":910,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["returned.'})@apiforbiddenresponse({description",{"_index":1107,"title":{},"body":{"controllers/UsersController.html":{}}}],["returns",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["rimraf",{"_index":1257,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":166,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDTO.html":{},"controllers/TeachersController.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["role'})@apiokresponse({description",{"_index":829,"title":{},"body":{"controllers/TeachersController.html":{}}}],["rspace",{"_index":790,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["run",{"_index":1292,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1259,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":1277,"title":{},"body":{"index.html":{}}}],["schema",{"_index":365,"title":{},"body":{"modules/CoursesModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["schemas/course.schema",{"_index":363,"title":{},"body":{"modules/CoursesModule.html":{}}}],["schemas/node.schema",{"_index":986,"title":{},"body":{"modules/UniversitiesModule.html":{}}}],["schemas/user.schema",{"_index":1137,"title":{},"body":{"modules/UsersModule.html":{}}}],["screen",{"_index":811,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["secret",{"_index":274,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":720,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["self",{"_index":344,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{}}}],["selfeducationhours",{"_index":325,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["seminars",{"_index":346,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{}}}],["seminarsnumber",{"_index":326,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["send",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"injectables/MailerEdu4uService.html":{}}}],["sendmail",{"_index":739,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["sendmail(mailto",{"_index":757,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["sent",{"_index":70,"title":{},"body":{"controllers/AppController.html":{}}}],["server",{"_index":1278,"title":{},"body":{"index.html":{}}}],["service",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"injectables/InviteUserService.html":{},"injectables/TeachersService.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["side",{"_index":1279,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":277,"title":{},"body":{"modules/AuthModule.html":{}}}],["size",{"_index":779,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["smtp.gmail.com",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"injectables/TeachersService.html":{},"interfaces/Topic.html":{},"classes/TopicDTO.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"index.html":{}}}],["sponsors",{"_index":1325,"title":{},"body":{"index.html":{}}}],["src/.../app.module.ts",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../course.schema.ts",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1269,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../node.schema.ts",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controler.ts",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controler.ts:118",{"_index":91,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controler.ts:138",{"_index":82,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controler.ts:52",{"_index":100,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controler.ts:71",{"_index":105,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controler.ts:82",{"_index":108,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controler.ts:95",{"_index":72,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.module.ts",{"_index":265,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:20",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:39",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:50",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt",{"_index":586,"title":{},"body":{"controllers/InviteUserController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UniversitiesController.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":706,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:23",{"_index":711,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:9",{"_index":709,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local.strategy.ts",{"_index":723,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:21",{"_index":725,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/courses/courses.controller.ts",{"_index":1201,"title":{},"body":{"coverage.html":{}}}],["src/courses/courses.module",{"_index":635,"title":{},"body":{"modules/InviteUserModule.html":{}}}],["src/courses/courses.module.ts",{"_index":358,"title":{},"body":{"modules/CoursesModule.html":{}}}],["src/courses/courses.service.ts",{"_index":366,"title":{},"body":{"injectables/CoursesService.html":{},"coverage.html":{}}}],["src/courses/courses.service.ts:106",{"_index":390,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:117",{"_index":403,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:135",{"_index":395,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:146",{"_index":397,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:157",{"_index":380,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:178",{"_index":386,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:202",{"_index":383,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:21",{"_index":392,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:48",{"_index":399,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:77",{"_index":401,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/dto/activity.dto.ts",{"_index":34,"title":{},"body":{"classes/ActivityDTO.html":{},"coverage.html":{}}}],["src/courses/dto/activity.dto.ts:12",{"_index":38,"title":{},"body":{"classes/ActivityDTO.html":{}}}],["src/courses/dto/activity.dto.ts:18",{"_index":39,"title":{},"body":{"classes/ActivityDTO.html":{}}}],["src/courses/dto/activity.dto.ts:24",{"_index":40,"title":{},"body":{"classes/ActivityDTO.html":{}}}],["src/courses/dto/activity.dto.ts:30",{"_index":41,"title":{},"body":{"classes/ActivityDTO.html":{}}}],["src/courses/dto/activity.dto.ts:36",{"_index":42,"title":{},"body":{"classes/ActivityDTO.html":{}}}],["src/courses/dto/create",{"_index":472,"title":{},"body":{"classes/CreateCourseDTO.html":{},"coverage.html":{}}}],["src/courses/dto/topic.dto.ts",{"_index":876,"title":{},"body":{"classes/TopicDTO.html":{},"coverage.html":{}}}],["src/courses/dto/topic.dto.ts:13",{"_index":877,"title":{},"body":{"classes/TopicDTO.html":{}}}],["src/courses/dto/topic.dto.ts:19",{"_index":880,"title":{},"body":{"classes/TopicDTO.html":{}}}],["src/courses/dto/topic.dto.ts:25",{"_index":879,"title":{},"body":{"classes/TopicDTO.html":{}}}],["src/courses/dto/topic.dto.ts:31",{"_index":878,"title":{},"body":{"classes/TopicDTO.html":{}}}],["src/courses/interfaces/activity.interface.ts",{"_index":6,"title":{},"body":{"interfaces/Activity.html":{},"coverage.html":{}}}],["src/courses/interfaces/course.interface",{"_index":650,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["src/courses/interfaces/course.interface.ts",{"_index":311,"title":{},"body":{"interfaces/Course.html":{},"coverage.html":{}}}],["src/courses/interfaces/topic.interface.ts",{"_index":871,"title":{},"body":{"interfaces/Topic.html":{},"coverage.html":{}}}],["src/courses/schemas/course.schema.ts",{"_index":1206,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/invite",{"_index":541,"title":{},"body":{"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"coverage.html":{}}}],["src/mailer",{"_index":734,"title":{},"body":{"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1207,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/pipes/validate",{"_index":587,"title":{},"body":{"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"injectables/ValidateObjectId.html":{},"coverage.html":{}}}],["src/teachers/teachers.controller.ts",{"_index":824,"title":{},"body":{"controllers/TeachersController.html":{},"coverage.html":{}}}],["src/teachers/teachers.controller.ts:48",{"_index":839,"title":{},"body":{"controllers/TeachersController.html":{}}}],["src/teachers/teachers.controller.ts:65",{"_index":830,"title":{},"body":{"controllers/TeachersController.html":{}}}],["src/teachers/teachers.module.ts",{"_index":862,"title":{},"body":{"modules/TeachersModule.html":{}}}],["src/teachers/teachers.service.ts",{"_index":864,"title":{},"body":{"injectables/TeachersService.html":{},"coverage.html":{}}}],["src/teachers/teachers.service.ts:17",{"_index":867,"title":{},"body":{"injectables/TeachersService.html":{}}}],["src/universities/dto/create",{"_index":502,"title":{},"body":{"classes/CreateNodeDTO.html":{},"coverage.html":{}}}],["src/universities/interfaces/node.interface.ts",{"_index":822,"title":{},"body":{"interfaces/Node.html":{},"coverage.html":{}}}],["src/universities/schemas/node.schema.ts",{"_index":1210,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/universities/universities.controller.ts",{"_index":883,"title":{},"body":{"controllers/UniversitiesController.html":{},"coverage.html":{}}}],["src/universities/universities.controller.ts:112",{"_index":923,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["src/universities/universities.controller.ts:127",{"_index":896,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["src/universities/universities.controller.ts:149",{"_index":907,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["src/universities/universities.controller.ts:178",{"_index":902,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["src/universities/universities.controller.ts:50",{"_index":931,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["src/universities/universities.controller.ts:64",{"_index":918,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["src/universities/universities.controller.ts:78",{"_index":927,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["src/universities/universities.controller.ts:95",{"_index":911,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["src/universities/universities.module.ts",{"_index":983,"title":{},"body":{"modules/UniversitiesModule.html":{}}}],["src/universities/universities.service.ts",{"_index":987,"title":{},"body":{"injectables/UniversitiesService.html":{},"coverage.html":{}}}],["src/universities/universities.service.ts:112",{"_index":1005,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["src/universities/universities.service.ts:130",{"_index":1001,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["src/universities/universities.service.ts:147",{"_index":1015,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["src/universities/universities.service.ts:168",{"_index":993,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["src/universities/universities.service.ts:182",{"_index":997,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["src/universities/universities.service.ts:202",{"_index":995,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["src/universities/universities.service.ts:26",{"_index":1011,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["src/universities/universities.service.ts:37",{"_index":1009,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["src/universities/universities.service.ts:47",{"_index":1016,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["src/universities/universities.service.ts:80",{"_index":1013,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["src/universities/universities.service.ts:90",{"_index":1018,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["src/users/dto/create",{"_index":517,"title":{},"body":{"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"controllers/TeachersController.html":{},"coverage.html":{}}}],["src/users/dto/userilogin.dto.ts",{"_index":1077,"title":{},"body":{"classes/UserLoginDTO.html":{},"coverage.html":{}}}],["src/users/dto/userilogin.dto.ts:13",{"_index":1084,"title":{},"body":{"classes/UserLoginDTO.html":{}}}],["src/users/dto/userilogin.dto.ts:20",{"_index":1081,"title":{},"body":{"classes/UserLoginDTO.html":{}}}],["src/users/interfaces/user.interface",{"_index":764,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["src/users/interfaces/user.interface.ts",{"_index":1076,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":1213,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.controller.ts",{"_index":1090,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:118",{"_index":1100,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:31",{"_index":1113,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:47",{"_index":1110,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:63",{"_index":1096,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:83",{"_index":1104,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":267,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":1135,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":868,"title":{},"body":{"injectables/TeachersService.html":{},"injectables/UniversitiesService.html":{}}}],["src/users/users.service.ts",{"_index":1138,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:20",{"_index":1157,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:29",{"_index":1156,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:40",{"_index":1153,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:48",{"_index":1154,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:57",{"_index":1142,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:70",{"_index":1151,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:87",{"_index":1149,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:97",{"_index":1144,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":1293,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1295,"title":{},"body":{"index.html":{}}}],["start:proddatabase",{"_index":1297,"title":{},"body":{"index.html":{}}}],["started",{"_index":1271,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1286,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1194,"title":{},"body":{"coverage.html":{}}}],["statuscode",{"_index":103,"title":{},"body":{"controllers/AppController.html":{}}}],["statustest",{"_index":1308,"title":{},"body":{"index.html":{}}}],["stay",{"_index":1335,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":713,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":22,"title":{},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"injectables/InviteUserService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"interfaces/Topic.html":{},"classes/TopicDTO.html":{},"controllers/UniversitiesController.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"miscellaneous/variables.html":{}}}],["string})@apibadrequestresponse({description",{"_index":899,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["string})@apiforbiddenresponse({description",{"_index":1102,"title":{},"body":{"controllers/UsersController.html":{}}}],["string})@apiokresponse({description",{"_index":89,"title":{},"body":{"controllers/AppController.html":{}}}],["student",{"_index":169,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/MailerEdu4uService.html":{}}}],["students",{"_index":327,"title":{},"body":{"interfaces/Course.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["students.push",{"_index":445,"title":{},"body":{"injectables/CoursesService.html":{}}}],["sub",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":758,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["submit",{"_index":831,"title":{},"body":{"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["submitted",{"_index":895,"title":{},"body":{"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["successfully",{"_index":603,"title":{},"body":{"controllers/InviteUserController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["super",{"_index":716,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":1326,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1346,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1239,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":783,"title":{},"body":{"injectables/MailerEdu4uService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["table.mj",{"_index":818,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1214,"title":{},"body":{"coverage.html":{}}}],["td",{"_index":784,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["td.mj",{"_index":821,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["teacher",{"_index":347,"title":{},"body":{"interfaces/Course.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"injectables/UniversitiesService.html":{}}}],["teacher's",{"_index":583,"title":{},"body":{"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{}}}],["teacher.email",{"_index":849,"title":{},"body":{"controllers/TeachersController.html":{}}}],["teacher.firstname",{"_index":426,"title":{},"body":{"injectables/CoursesService.html":{}}}],["teacher.lastname",{"_index":427,"title":{},"body":{"injectables/CoursesService.html":{}}}],["teacher\\'s",{"_index":846,"title":{},"body":{"controllers/TeachersController.html":{}}}],["teacher_email",{"_index":848,"title":{},"body":{"controllers/TeachersController.html":{}}}],["teachername",{"_index":328,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["teacherowner",{"_index":329,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["teachers",{"_index":421,"title":{},"body":{"injectables/CoursesService.html":{},"classes/CreateNodeDTO.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["teachers).map(teacher",{"_index":1061,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["teachers.controller",{"_index":863,"title":{},"body":{"modules/TeachersModule.html":{}}}],["teachers.find",{"_index":423,"title":{},"body":{"injectables/CoursesService.html":{}}}],["teachers.service",{"_index":841,"title":{},"body":{"controllers/TeachersController.html":{},"modules/TeachersModule.html":{}}}],["teachers/teachers.module",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["teacherscontroller",{"_index":823,"title":{"controllers/TeachersController.html":{}},"body":{"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"coverage.html":{}}}],["teachersinfo",{"_index":1027,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["teachersinfo.push",{"_index":1039,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["teachersmodule",{"_index":219,"title":{"modules/TeachersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TeachersModule.html":{},"modules.html":{},"overview.html":{}}}],["teachersservice",{"_index":840,"title":{"injectables/TeachersService.html":{}},"body":{"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"injectables/TeachersService.html":{},"coverage.html":{},"overview.html":{}}}],["test",{"_index":1311,"title":{},"body":{"index.html":{}}}],["test:covapi",{"_index":1314,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1313,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1310,"title":{},"body":{"index.html":{}}}],["text",{"_index":744,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["thanks",{"_index":1324,"title":{},"body":{"index.html":{}}}],["this._getmailtext(firstline",{"_index":769,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["this.authservice.login(req.user['_doc'])).access_token",{"_index":177,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(user)).access_token",{"_index":199,"title":{},"body":{"controllers/AppController.html":{},"controllers/TeachersController.html":{}}}],["this.authservice.refresh(token",{"_index":181,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.validateuser(email",{"_index":728,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.checkinvitekey(invitekey",{"_index":683,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["this.coursemodel",{"_index":446,"title":{},"body":{"injectables/CoursesService.html":{}}}],["this.coursemodel(createcoursedto",{"_index":464,"title":{},"body":{"injectables/CoursesService.html":{}}}],["this.coursemodel.find().exec",{"_index":411,"title":{},"body":{"injectables/CoursesService.html":{}}}],["this.coursesservice.editcourse(course",{"_index":692,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["this.coursesservice.getcoursesinvitekey(invitekey",{"_index":699,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["this.finduserbyemail(email",{"_index":1178,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getcourses(id",{"_index":428,"title":{},"body":{"injectables/CoursesService.html":{}}}],["this.getdepartments(node[\"id",{"_index":1058,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["this.getinstitutions(element._id,allnodes,allusers",{"_index":1052,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["this.getnode(id",{"_index":1067,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["this.getteachers(node.teachers",{"_index":1059,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["this.getuser(id)).password",{"_index":1175,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.inviteuserservice.checkinvitekey(id",{"_index":625,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["this.inviteuserservice.inviteteacher(inviteuserdto",{"_index":600,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["this.inviteuserservice.inviteuser",{"_index":611,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["this.inviteuserservice.inviteuser(new",{"_index":616,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["this.jwtservice.decode(token",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.maileredu4uservice.invitementor(course.coursename",{"_index":693,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["this.maileredu4uservice.invitestudent(course.coursename",{"_index":696,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["this.maileredu4uservice.inviteteacher(node.nodename",{"_index":679,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["this.maileredu4uservice.sendmail",{"_index":678,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["this.mailerservice",{"_index":765,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["this.mailerservice.changepassword(user",{"_index":191,"title":{},"body":{"controllers/AppController.html":{}}}],["this.mailerservice.sendmail",{"_index":188,"title":{},"body":{"controllers/AppController.html":{}}}],["this.nodemodel",{"_index":1023,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["this.nodemodel(createnodedto",{"_index":1064,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["this.teachersservice.getnewteacher(id",{"_index":854,"title":{},"body":{"controllers/TeachersController.html":{}}}],["this.teachersservice.getnewteacher(new",{"_index":847,"title":{},"body":{"controllers/TeachersController.html":{}}}],["this.universitiesservice.addnode(createnodedto",{"_index":966,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["this.universitiesservice.deletenode(new",{"_index":978,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["this.universitiesservice.editnode",{"_index":974,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["this.universitiesservice.editnode(node._id",{"_index":673,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["this.universitiesservice.getnode(id",{"_index":654,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["this.universitiesservice.getnode(institite.parentnode",{"_index":677,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["this.universitiesservice.getnode(new",{"_index":956,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["this.universitiesservice.getnode(node.parentnode",{"_index":675,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["this.universitiesservice.getnodes(new",{"_index":960,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["this.universitiesservice.getnodes(null",{"_index":947,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["this.universitiesservice.getteachersinfo",{"_index":951,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["this.universitiesservice.gettree",{"_index":942,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["this.usermodel",{"_index":1162,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel(createuserdto",{"_index":1171,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find().exec",{"_index":1161,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find({\"role",{"_index":1166,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone({\"email",{"_index":1164,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.adduser(createuserdto",{"_index":687,"title":{},"body":{"injectables/InviteUserService.html":{},"controllers/UsersController.html":{}}}],["this.usersservice.adduser(newuser",{"_index":669,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["this.usersservice.checkemail(createuserdto.email",{"_index":1125,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.deleteuser(new",{"_index":1131,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.edituser",{"_index":858,"title":{},"body":{"controllers/TeachersController.html":{},"controllers/UsersController.html":{}}}],["this.usersservice.edituser(new",{"_index":621,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["this.usersservice.edituser(user._id",{"_index":670,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["this.usersservice.finduserbyemail(createuserdto.email",{"_index":685,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["this.usersservice.finduserbyemail(email",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.finduserbyemail(inviteuserdto.email",{"_index":657,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["this.usersservice.finduserbyemail(userlogindto.username",{"_index":185,"title":{},"body":{"controllers/AppController.html":{}}}],["this.usersservice.getteachers",{"_index":422,"title":{},"body":{"injectables/CoursesService.html":{}}}],["this.usersservice.getuser(id",{"_index":412,"title":{},"body":{"injectables/CoursesService.html":{},"injectables/TeachersService.html":{}}}],["this.usersservice.getuser(new",{"_index":197,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/UsersController.html":{}}}],["this.usersservice.getusers",{"_index":429,"title":{},"body":{"injectables/CoursesService.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{}}}],["throw",{"_index":172,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/LocalStrategy.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["title",{"_index":524,"title":{},"body":{"classes/CreateUserDTO.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["tocken",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["token",{"_index":94,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/InviteUserController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["topic",{"_index":349,"title":{"interfaces/Topic.html":{}},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"interfaces/Topic.html":{},"classes/TopicDTO.html":{},"coverage.html":{}}}],["topic._id",{"_index":459,"title":{},"body":{"injectables/CoursesService.html":{}}}],["topic.activities.foreach(function(activity",{"_index":461,"title":{},"body":{"injectables/CoursesService.html":{}}}],["topic.interface",{"_index":351,"title":{},"body":{"interfaces/Course.html":{}}}],["topicdto",{"_index":875,"title":{"classes/TopicDTO.html":{}},"body":{"classes/TopicDTO.html":{},"coverage.html":{}}}],["topicname",{"_index":873,"title":{},"body":{"interfaces/Topic.html":{},"classes/TopicDTO.html":{}}}],["topics",{"_index":330,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["total",{"_index":350,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{}}}],["touch",{"_index":1336,"title":{},"body":{"index.html":{}}}],["transform",{"_index":1180,"title":{},"body":{"injectables/ValidateObjectId.html":{}}}],["transform(value",{"_index":1181,"title":{},"body":{"injectables/ValidateObjectId.html":{}}}],["transformer",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["tree",{"_index":930,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["tree.push",{"_index":1049,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["true",{"_index":469,"title":{},"body":{"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["ts",{"_index":1263,"title":{},"body":{"dependencies.html":{}}}],["twitter",{"_index":1342,"title":{},"body":{"index.html":{}}}],["type",{"_index":19,"title":{},"body":{"interfaces/Activity.html":{},"classes/ActivityDTO.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"interfaces/Topic.html":{},"classes/TopicDTO.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"coverage.html":{}}}],["typeorm",{"_index":1265,"title":{},"body":{"dependencies.html":{}}}],["types/mongoose",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["types/node",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1285,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1261,"title":{},"body":{"dependencies.html":{}}}],["unapplied",{"_index":1299,"title":{},"body":{"index.html":{}}}],["unauthorized",{"_index":81,"title":{},"body":{"controllers/AppController.html":{}}}],["unauthorizedexception",{"_index":727,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unauthorizedexception(user.message",{"_index":730,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undo",{"_index":1302,"title":{},"body":{"index.html":{}}}],["unit",{"_index":1309,"title":{},"body":{"index.html":{}}}],["univer",{"_index":676,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["univer.nodename",{"_index":681,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["univername",{"_index":755,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["universiry",{"_index":1007,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["universities",{"_index":884,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["universities.controller",{"_index":984,"title":{},"body":{"modules/UniversitiesModule.html":{}}}],["universities.service",{"_index":935,"title":{},"body":{"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{}}}],["universities/universities.module",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{}}}],["universities/universities.service",{"_index":649,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["universitiescontroller",{"_index":882,"title":{"controllers/UniversitiesController.html":{}},"body":{"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"coverage.html":{}}}],["universitiesmodule",{"_index":220,"title":{"modules/UniversitiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/UniversitiesModule.html":{},"modules.html":{},"overview.html":{}}}],["universitiesservice",{"_index":648,"title":{"injectables/UniversitiesService.html":{}},"body":{"injectables/InviteUserService.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"coverage.html":{},"overview.html":{}}}],["university",{"_index":1033,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["university._id",{"_index":1040,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["up",{"_index":1301,"title":{},"body":{"index.html":{}}}],["update",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatecourseinvitekey",{"_index":377,"title":{},"body":{"injectables/CoursesService.html":{}}}],["updatecourseinvitekey(id",{"_index":402,"title":{},"body":{"injectables/CoursesService.html":{}}}],["updated",{"_index":906,"title":{},"body":{"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["url",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":112,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["useguards(authguard('local",{"_index":152,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(jwtauthguard",{"_index":200,"title":{},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@get('/profile')@apibearerauth()@apiokresponse({description",{"_index":78,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(undefined)@post('/auth/login')@apiokresponse({description",{"_index":93,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":63,"title":{"interfaces/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"injectables/InviteUserService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user(mentor",{"_index":646,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["user):string",{"_index":770,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["user._id",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CoursesService.html":{}}}],["user.confirmedemail",{"_index":620,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["user.controller",{"_index":634,"title":{},"body":{"modules/InviteUserModule.html":{}}}],["user.controller.ts",{"_index":542,"title":{},"body":{"controllers/InviteUserController.html":{},"coverage.html":{}}}],["user.controller.ts:114",{"_index":564,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["user.controller.ts:139",{"_index":555,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["user.controller.ts:50",{"_index":584,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["user.controller.ts:73",{"_index":572,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["user.controller.ts:95",{"_index":575,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["user.dto",{"_index":588,"title":{},"body":{"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"controllers/TeachersController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":518,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/InviteUserDTO.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":629,"title":{},"body":{"classes/InviteUserDTO.html":{}}}],["user.dto.ts:13",{"_index":525,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:17",{"_index":628,"title":{},"body":{"classes/InviteUserDTO.html":{}}}],["user.dto.ts:19",{"_index":531,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:25",{"_index":527,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:31",{"_index":537,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:37",{"_index":533,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:43",{"_index":536,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:51",{"_index":530,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:59",{"_index":539,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:67",{"_index":534,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:75",{"_index":538,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.email",{"_index":189,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/InviteUserService.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{}}}],["user.firstname",{"_index":419,"title":{},"body":{"injectables/CoursesService.html":{},"injectables/UniversitiesService.html":{}}}],["user.lastname",{"_index":420,"title":{},"body":{"injectables/CoursesService.html":{},"injectables/UniversitiesService.html":{}}}],["user.module",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["user.module.ts",{"_index":633,"title":{},"body":{"modules/InviteUserModule.html":{}}}],["user.password",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TeachersService.html":{}}}],["user.payload",{"_index":729,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["user.service",{"_index":591,"title":{},"body":{"controllers/InviteUserController.html":{},"modules/InviteUserModule.html":{}}}],["user.service.ts",{"_index":637,"title":{},"body":{"injectables/InviteUserService.html":{},"coverage.html":{}}}],["user.service.ts:111",{"_index":640,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["user.service.ts:25",{"_index":642,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["user.service.ts:71",{"_index":645,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["user.sub",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/dto/invite",{"_index":626,"title":{},"body":{"classes/InviteUserDTO.html":{},"coverage.html":{}}}],["user/invite",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"controllers/InviteUserController.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"coverage.html":{}}}],["user['email",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["userfirstname",{"_index":440,"title":{},"body":{"injectables/CoursesService.html":{}}}],["userid",{"_index":439,"title":{},"body":{"injectables/CoursesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["userlastname",{"_index":441,"title":{},"body":{"injectables/CoursesService.html":{}}}],["userlogindto",{"_index":59,"title":{"classes/UserLoginDTO.html":{}},"body":{"controllers/AppController.html":{},"classes/UserLoginDTO.html":{},"coverage.html":{}}}],["usermodel",{"_index":1160,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":1078,"title":{},"body":{"classes/UserLoginDTO.html":{}}}],["users",{"_index":393,"title":{},"body":{"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.find(u=>u._id.equals(mentor",{"_index":433,"title":{},"body":{"injectables/CoursesService.html":{}}}],["users.find(u=>u._id.equals(student",{"_index":444,"title":{},"body":{"injectables/CoursesService.html":{}}}],["users.service",{"_index":1114,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/dto/userilogin.dto",{"_index":142,"title":{},"body":{"controllers/AppController.html":{}}}],["users/interfaces/user.interface",{"_index":1020,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["users/users.controller",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.module",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{}}}],["users/users.service",{"_index":135,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{}}}],["userschema",{"_index":1136,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":226,"title":{"controllers/UsersController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["usersmodule",{"_index":221,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":134,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":903,"title":{},"body":{"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["valid",{"_index":580,"title":{},"body":{"controllers/InviteUserController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["validate",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/ValidateObjectId.html":{}}}],["validate(email",{"_index":724,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":710,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateobjectid",{"_index":143,"title":{"injectables/ValidateObjectId.html":{}},"body":{"controllers/AppController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{},"injectables/ValidateObjectId.html":{},"coverage.html":{}}}],["validateuser",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":1087,"title":{},"body":{"classes/UserLoginDTO.html":{},"dependencies.html":{}}}],["value",{"_index":1184,"title":{},"body":{"injectables/ValidateObjectId.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1196,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1354,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":763,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["waiting",{"_index":571,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["watch",{"_index":1294,"title":{},"body":{"index.html":{}}}],["webkit",{"_index":778,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["website",{"_index":1340,"title":{},"body":{"index.html":{}}}],["width",{"_index":816,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["width:100",{"_index":808,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["width:480px",{"_index":813,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["works",{"_index":334,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{}}}],["worksnumber",{"_index":331,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["wrong",{"_index":98,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/TeachersController.html":{}}}],["x._id.equals(department.parentnode))[0",{"_index":1031,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["x._id.equals(institute.parentnode))[0",{"_index":1035,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["x.parentnode.equals(id",{"_index":1054,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["you'd",{"_index":1329,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Activity.html":{"url":"interfaces/Activity.html","title":"interface - Activity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Activity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/interfaces/activity.interface.ts\n        \n\n            \n                Description\n            \n            \n                Activity mongoose Document\n\n            \n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        activityName\n                                \n                                \n                                        activityType\n                                \n                                \n                                        hours\n                                \n                                \n                                        links\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Activity id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        activityName\n                                    \n                                \n                                \n                                    \n                                        activityName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Activity Name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        activityType\n                                    \n                                \n                                \n                                    \n                                        activityType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Activity Type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hours\n                                    \n                                \n                                \n                                    \n                                        hours:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Activity hours\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                    \n                                \n                                \n                                    \n                                        links:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Activity links\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ObjectId } from 'mongodb';\nimport { Document } from 'mongoose';\n\n/**\n * Activity mongoose Document\n */\nexport interface Activity extends Document {\n    /**\n     * Activity id\n     */\n    _id: ObjectId;\n\n    /**\n     * Activity Name\n     */ \n    activityName: string;\n\n    /**\n     * Activity Type\n     */ \n    activityType: string;\n    \n    /**\n     * Activity hours\n     */ \n    hours: number;\n\n    /**\n     * Activity links\n     */ \n    links: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActivityDTO.html":{"url":"classes/ActivityDTO.html","title":"class - ActivityDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActivityDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/dto/activity.dto.ts\n        \n\n            \n                Description\n            \n            \n                ActivityDTO\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                activityName\n                            \n                            \n                                activityType\n                            \n                            \n                                hours\n                            \n                            \n                                links\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Activity id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/activity.dto.ts:12\n                            \n                        \n\n                \n                    \n                        Activity id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activityName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Activity Name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/activity.dto.ts:18\n                            \n                        \n\n                \n                    \n                        Activity Name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activityType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Activity Type'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/activity.dto.ts:24\n                            \n                        \n\n                \n                    \n                        Activity Type\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hours\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Activity hours'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/activity.dto.ts:30\n                            \n                        \n\n                \n                    \n                        Activity hours\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            links\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Activity links'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/activity.dto.ts:36\n                            \n                        \n\n                \n                    \n                        Activity links\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ObjectId } from 'mongodb';\n \n/**\n * ActivityDTO\n */\nexport class ActivityDTO {\n    /**\n     * Activity id\n     */\n    @ApiProperty({description: 'Activity id'})\n    _id: ObjectId;\n\n    /**\n     * Activity Name\n     */ \n    @ApiProperty({description: 'Activity Name'})\n    activityName: string;\n\n    /**\n     * Activity Type\n     */ \n    @ApiProperty({description: 'Activity Type'})\n    activityType: string;\n    \n    /**\n     * Activity hours\n     */ \n    @ApiProperty({description: 'Activity hours'})\n    hours: number;\n\n    /**\n     * Activity links\n     */ \n    @ApiProperty({description: 'Activity links'})\n    links: string[];\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controler.ts\n        \n\n\n            \n                Description\n            \n            \n                App Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                getProfileById\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                refresh\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(userLoginDto: UserLoginDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({description: 'Send message to user email with reference how to change password'})@ApiNotFoundResponse({description: 'User with this email doesn't exist!'})@ApiOkResponse({description: 'Message has been sent to user email'})@Post('/auth/password')\n                \n            \n\n            \n                \n                    Defined in src/app.controler.ts:95\n                \n            \n\n\n            \n                \n                    Send message to user email with reference how to change password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userLoginDto\n                                    \n                                                UserLoginDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('/profile')@ApiBearerAuth()@ApiOkResponse({description: 'Return user profile'})@ApiUnauthorizedResponse({description: 'User Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/app.controler.ts:138\n                \n            \n\n\n            \n                \n                    Get User profile\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfileById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfileById(req, id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/profile/:id')@ApiBadRequestResponse({description: 'Invalid id!'})@ApiParam({name: 'id', type: String})@ApiOkResponse({description: 'Return user profile and access_token'})@ApiUnauthorizedResponse({description: 'User Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/app.controler.ts:118\n                \n            \n\n\n            \n                \n                    Get User profile by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user id \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req, userLoginDto: UserLoginDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Post('/auth/login')@ApiOkResponse({description: 'Token and user profile'})@ApiForbiddenResponse({description: 'Email doesn't confirmed'})@ApiUnauthorizedResponse({description: 'User doesn't exist or Wrong credentials.'})\n                \n            \n\n            \n                \n                    Defined in src/app.controler.ts:52\n                \n            \n\n\n            \n                \n                    login User\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userLoginDto\n                                    \n                                                UserLoginDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/auth/logout')@ApiOkResponse({description: 'Always return statusCode: 200'})\n                \n            \n\n            \n                \n                    Defined in src/app.controler.ts:71\n                \n            \n\n\n            \n                \n                    logout User\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh(headers)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/auth/refresh')\n                \n            \n\n            \n                \n                    Defined in src/app.controler.ts:82\n                \n            \n\n\n            \n                \n                    Refresh token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headers\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, \n  Request, \n  Post, \n  UseGuards, \n  Get, \n  Headers, \n  Body, \n  ForbiddenException,\n  NotFoundException,\n  Param } from '@nestjs/common';\nimport { ApiTags,\n  ApiUnauthorizedResponse, \n  ApiOkResponse, \n  ApiForbiddenResponse, \n  ApiBearerAuth, \n  ApiNotFoundResponse,\n  ApiOperation,\n  ApiParam,\n  ApiBadRequestResponse} from '@nestjs/swagger'; \nimport { AuthGuard } from '@nestjs/passport';\nimport { AuthService } from './auth/auth.service';\nimport { JwtAuthGuard } from './auth/jwt-auth.guard';\nimport { UsersService } from './users/users.service';\nimport { MailerEdu4uService } from './mailer-edu4u/mailer-edu4u.service';\nimport { ObjectId } from 'mongodb'; \nimport {} from 'jwt-decode';\nimport { UserLoginDTO } from './users/dto/userilogin.dto';\nimport { ValidateObjectId } from './pipes/validate-object-id.pipes';\n\n/**\n * App Controller\n */\n@ApiTags('Login and Logout')\n@Controller()\nexport class AppController {\n  /**@ignore */\n  constructor(private authService: AuthService,\n              private usersService: UsersService,\n              private mailerService: MailerEdu4uService,) {}\n  \n  /**\n   * login User\n   * @param req \n   * @param userLoginDto \n   */\n  @UseGuards(AuthGuard('local'))\n  @Post('/auth/login')\n  @ApiOkResponse({description: 'Token and user profile'})\n  @ApiForbiddenResponse({description: 'Email doesn\\'t confirmed'})\n  @ApiUnauthorizedResponse({description: 'User doesn\\'t exist or Wrong credentials.'})\n  // eslint-disable-next-line\n  async login(@Request() req, @Body() userLoginDto: UserLoginDTO) {\n    if(req.user['_doc'].role){\n      const role = req.user['_doc'].role;\n      if((role == 'student' || role == 'mentor') && !req.user['_doc'].confirmedEmail ){\n        throw new ForbiddenException('Email doesn\\'t confirmed');\n      }\n    }\n    return {\n      access_token : (await this.authService.login(req.user['_doc'])).access_token,\n      profile: req.user['_doc']\n    };\n  }\n\n  /**\n   * logout User\n   * @param req \n   */\n  @Post('/auth/logout')\n  @ApiOkResponse({description: 'Always return statusCode: 200'})  \n  async logout() {\n    return {\n      statusCode: 200\n    }\n  }\n\n  /**\n   * Refresh token\n   * @param headers \n   */\n  @Post('/auth/refresh') \n  async refresh( @Headers() headers) { \n    const token = headers.authorization.replace('Bearer ','');\n    return this.authService.refresh(token);\n  }\n\n  /**\n   * Send message to user email with reference how to change password\n   * @param userLoginDto \n   */\n  @ApiOperation({description: 'Send message to user email with reference how to change password'})\n  @ApiNotFoundResponse({description: 'User with this email doesn\\'t exist!'})\n  @ApiOkResponse({description: 'Message has been sent to user email'})  \n  @Post('/auth/password') \n  async changePassword(@Body() userLoginDto: UserLoginDTO) { \n    const user = await this.usersService.findUserByEmail(userLoginDto.username);\n    if(!user){\n      throw new NotFoundException('User with this email doesn\\'t exist!');\n    }\n    this.mailerService.sendMail(\n      user.email, \n      'Запит на зміну паролю EDU4U', \n      this.mailerService.changePassword(user)); \n    return {\n      message: `Message has been sent to ${user.email}`\n    }\n  }\n\n  /**\n   * Get User profile by id\n   * @param id user id \n   */ \n  @Get('/profile/:id')\n  @ApiBadRequestResponse({description: 'Invalid id!'})\n  @ApiParam({name: 'id', type: String }) \n  @ApiOkResponse({description: 'Return user profile and access_token'})\n  @ApiUnauthorizedResponse({description: 'User Unauthorized'})\n  async getProfileById(@Request() req, @Param('id', new ValidateObjectId()) id) {\n    const user = await this.usersService.getUser(new ObjectId(id));\n    if(!user){\n      throw new NotFoundException('User doesn\\'t exist!');\n    } \n    return {\n      access_token: (await this.authService.login(user)).access_token,\n      profile: user\n    }\n  }\n   \n  /**\n   * Get User profile\n   * @param req \n   */\n  @UseGuards(JwtAuthGuard)\n  @Get('/profile')\n  @ApiBearerAuth()  \n  @ApiOkResponse({description: 'Return user profile'})\n  @ApiUnauthorizedResponse({description: 'User Unauthorized'})\n  async getProfile(@Request() req) {\n    return await this.usersService.getUser(new ObjectId(req.user._id));\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nInviteUserModule\n\nInviteUserModule\n\nAppModule -->\n\nInviteUserModule->AppModule\n\n\n\n\n\nMailerEdu4uModule\n\nMailerEdu4uModule\n\nAppModule -->\n\nMailerEdu4uModule->AppModule\n\n\n\n\n\nTeachersModule\n\nTeachersModule\n\nAppModule -->\n\nTeachersModule->AppModule\n\n\n\n\n\nUniversitiesModule\n\nUniversitiesModule\n\nAppModule -->\n\nUniversitiesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoursesModule\n                        \n                        \n                            InviteUserModule\n                        \n                        \n                            MailerEdu4uModule\n                        \n                        \n                            TeachersModule\n                        \n                        \n                            UniversitiesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './users/users.module';\nimport { UsersController } from './users/users.controller';\nimport { AppController } from './app.controler';\nimport { MongooseModule } from '@nestjs/mongoose'; \nimport { UniversitiesModule } from './universities/universities.module';\nimport { CoursesModule } from './courses/courses.module'; \nimport { MailerModule } from '@nestjs-modules/mailer';   \nimport { InviteUserModule } from './invite-user/invite-user.module';\nimport { MailerEdu4uModule } from './mailer-edu4u/mailer-edu4u.module';\nimport { TeachersModule } from './teachers/teachers.module';\n \n/**\n * DataBase url\n */\nconst url = process.env.DB_URI || \"mongodb+srv://alex:admin@cluster0.jczgn.mongodb.net/edu4u?retryWrites=true&w=majority\";\n\n@Module({\n  imports: [ \n    AuthModule,\n    UsersModule,\n    MongooseModule.forRoot(url),\n    UniversitiesModule,\n    CoursesModule,     \n    InviteUserModule,\n    MailerModule.forRoot({\n      transport: {\n        host: 'smtp.gmail.com',\n        auth: {\n          user: 'edu4u.user', \n          pass: 'edu4upassword' \n        },\n      },\n      defaults: {\n        from:'\"edu4u-user\" ',\n      }\n    }),\n    MailerEdu4uModule,\n    TeachersModule\n  ],\n  controllers: [\n    AppController,\n    UsersController\n  ],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    UsersModule, \n    PassportModule, \n    JwtModule.register({\n      secret: process.env.JWT_SECRET || \"MySecret\",\n      signOptions: { expiresIn: process.env.JWT_EXPIRES_IN || \"6h\"},\n    })\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Auth Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                refresh\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:39\n                \n            \n\n\n            \n                \n                    login user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        access_token\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh(token)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:50\n                \n            \n\n\n            \n                \n                    Update old token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        old tocken\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:20\n                \n            \n\n\n            \n                \n                    Validate User \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user email\n\n                                    \n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { UsersService } from '../users/users.service';\n \n\n/**\n * Auth Service\n */\n@Injectable()\nexport class AuthService {\n  /**@ignore */\n  constructor(private usersService: UsersService,\n    private jwtService: JwtService) {}\n\n  /**\n   * Validate User \n   * @param email user email\n   * @param pass user pass\n   */\n  async validateUser(email: string, pass: string): Promise {\n    const user = await this.usersService.findUserByEmail(email);\n    if (!user) {\n      return { message: \"User doesn't exist\", payload: null };\n    } \n    // eslint-disable-next-line\n    const passwordValidation = await require('bcrypt').compare(pass, user.password); \n    if (passwordValidation) {\n      const {...result } = user;\n      return { payload: result};\n    }\n    return { message: \"Wrong credentials\", payload: null };\n  }\n\n  /**\n   * login user\n   * @param user \n   * @returns access_token\n   */\n  async login(user: any) {\n    const payload = { email: user.email, sub: user._id };\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n\n  /**\n   * Update old token\n   * @param token old tocken\n   */\n  async refresh(token){\n    const user = this.jwtService.decode(token);\n    const payload = { email: user['email'], sub: user.sub};\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/interfaces/course.interface.ts\n        \n\n            \n                Description\n            \n            \n                Course mongoose Document\n\n            \n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        consultationsNumber\n                                \n                                \n                                        controlWorksNumber\n                                \n                                \n                                        courseDescription\n                                \n                                \n                                        courseName\n                                \n                                \n                                        createdDate\n                                \n                                \n                                        createdUser\n                                \n                                \n                                        hoursNumber\n                                \n                                \n                                        inviteKey\n                                \n                                \n                                        laboratoryWorksNumber\n                                \n                                \n                                        lecturesNumber\n                                \n                                \n                                        mentors\n                                \n                                \n                                        parentDepartment\n                                \n                                \n                                        practicesNumber\n                                \n                                \n                                        selfEducationHours\n                                \n                                \n                                        seminarsNumber\n                                \n                                \n                                        students\n                                \n                                \n                                        teacherName\n                                \n                                \n                                        teacherOwner\n                                \n                                \n                                        topics\n                                \n                                \n                                        worksNumber\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        consultationsNumber\n                                    \n                                \n                                \n                                    \n                                        consultationsNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course consultations number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        controlWorksNumber\n                                    \n                                \n                                \n                                    \n                                        controlWorksNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course control works number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        courseDescription\n                                    \n                                \n                                \n                                    \n                                        courseDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course Description\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        courseName\n                                    \n                                \n                                \n                                    \n                                        courseName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course Name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdDate\n                                    \n                                \n                                \n                                    \n                                        createdDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course created Date\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdUser\n                                    \n                                \n                                \n                                    \n                                        createdUser:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course created User id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hoursNumber\n                                    \n                                \n                                \n                                    \n                                        hoursNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course hours number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inviteKey\n                                    \n                                \n                                \n                                    \n                                        inviteKey:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Invite key\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        laboratoryWorksNumber\n                                    \n                                \n                                \n                                    \n                                        laboratoryWorksNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course laboratory works number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lecturesNumber\n                                    \n                                \n                                \n                                    \n                                        lecturesNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course lectures number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mentors\n                                    \n                                \n                                \n                                    \n                                        mentors:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course mentors id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentDepartment\n                                    \n                                \n                                \n                                    \n                                        parentDepartment:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course parent Department id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        practicesNumber\n                                    \n                                \n                                \n                                    \n                                        practicesNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course practices number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selfEducationHours\n                                    \n                                \n                                \n                                    \n                                        selfEducationHours:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course self education hours\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seminarsNumber\n                                    \n                                \n                                \n                                    \n                                        seminarsNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course seminars number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                    \n                                \n                                \n                                    \n                                        students:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course students id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teacherName\n                                    \n                                \n                                \n                                    \n                                        teacherName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course teacher owner name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teacherOwner\n                                    \n                                \n                                \n                                    \n                                        teacherOwner:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course teacher owner id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topics\n                                    \n                                \n                                \n                                    \n                                        topics:         Topic[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Topic[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course topics\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        worksNumber\n                                    \n                                \n                                \n                                    \n                                        worksNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course total works number\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ObjectId } from 'mongodb';\nimport { Document } from 'mongoose';\nimport { Topic } from './topic.interface';\n\n/**\n * Course mongoose Document\n */\nexport interface Course extends Document {\n    /**\n     * Course id\n     */\n    readonly _id: ObjectId;\n\n    /**\n     * Course Name\n     */\n    readonly courseName: string;\n\n    /**\n     * Course Description\n     */\n    readonly courseDescription: string;\n\n    /**\n     * Course parent Department id\n     */\n    parentDepartment: ObjectId;\n\n    /**\n     * Course teacher owner id\n     */ \n    readonly teacherOwner: ObjectId;\n\n    /**\n     * Course teacher owner name\n     */ \n    teacherName: string;\n\n    /**\n     * Course hours number\n     */\n    readonly hoursNumber: number;\n\n    /**\n     * Course lectures number\n     */\n    readonly lecturesNumber: number;\n\n    /**\n     * Course seminars number\n     */\n    readonly seminarsNumber: number;\n\n    /**\n     * Course practices number\n     */\n    readonly practicesNumber: number;\n\n    /**\n     * Course laboratory works number\n     */\n    readonly laboratoryWorksNumber: number;\n\n    /**\n     * Course self education hours\n     */\n    readonly selfEducationHours: number;\n\n    /**\n     * Course control works number\n     */\n    readonly controlWorksNumber: number;\n\n    /**\n     * Course consultations number\n     */\n    readonly consultationsNumber: number;\n\n    /**\n     * Course total works number\n     */ \n    readonly worksNumber: number;\n\n    /**\n     * Course students id\n     */\n    readonly students: Array;\n    \n    /**\n     * Course mentors id\n     */ \n    readonly mentors: Array;\n\n    /**\n     * Course created Date\n     */\n    createdDate: Date;\n\n    /**\n     * Course created User id\n     */\n    createdUser: ObjectId; \n\n    /**\n     * Invite key\n     */\n    inviteKey: ObjectId;   \n    \n    /**\n     * Course topics\n     */ \n    topics: Topic[]; \n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoursesModule.html":{"url":"modules/CoursesModule.html","title":"module - CoursesModule","body":"\n                   \n\n\n\n\n    Modules\n    CoursesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_imports\n\n\n\ncluster_CoursesModule_exports\n\n\n\ncluster_CoursesModule_providers\n\n\n\n\nUniversitiesModule\n\nUniversitiesModule\n\n\n\nCoursesModule\n\nCoursesModule\n\nCoursesModule -->\n\nUniversitiesModule->CoursesModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nCoursesModule -->\n\nUsersModule->CoursesModule\n\n\n\n\n\nCoursesService \n\nCoursesService \n\nCoursesService  -->\n\nCoursesModule->CoursesService \n\n\n\n\n\nCoursesService\n\nCoursesService\n\nCoursesModule -->\n\nCoursesService->CoursesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/courses/courses.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CoursesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CoursesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UniversitiesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CoursesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CoursesController } from './courses.controller';\nimport { CoursesService } from './courses.service';\nimport { UsersModule } from '../users/users.module';\nimport { UniversitiesModule } from '../universities/universities.module';\nimport { CourseSchema } from './schemas/course.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [  \n    MongooseModule.forFeature([{ name: 'Course', schema: CourseSchema }]),\n    UsersModule,\n    UniversitiesModule],\n  controllers: [CoursesController],\n  providers: [CoursesService],\n  exports: [CoursesService]\n})\nexport class CoursesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CoursesService.html":{"url":"injectables/CoursesService.html","title":"injectable - CoursesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CoursesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/courses.service.ts\n        \n\n            \n                Description\n            \n            \n                Courses Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addCourse\n                            \n                            \n                                    Async\n                                deleteCourse\n                            \n                            \n                                    Async\n                                editCourse\n                            \n                            \n                                    Async\n                                getCourse\n                            \n                            \n                                    Async\n                                getCourses\n                            \n                            \n                                    Async\n                                getCoursesDepartmentId\n                            \n                            \n                                    Async\n                                getCoursesInviteKey\n                            \n                            \n                                    Async\n                                getMentors\n                            \n                            \n                                    Async\n                                getStudents\n                            \n                            \n                                    Async\n                                updateCourseInviteKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addCourse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCourse(createCourseDTO: CreateCourseDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/courses/courses.service.ts:157\n                \n            \n\n\n            \n                \n                    Add new course\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCourseDTO\n                                    \n                                                CreateCourseDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteCourse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCourse(id: ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/courses/courses.service.ts:202\n                \n            \n\n\n            \n                \n                    Delete course\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        course id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editCourse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editCourse(createCourseDTO: CreateCourseDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/courses/courses.service.ts:178\n                \n            \n\n\n            \n                \n                    Edit course data \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCourseDTO\n                                    \n                                                CreateCourseDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCourse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCourse(id: ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/courses/courses.service.ts:106\n                \n            \n\n\n            \n                \n                    Get course by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Course id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCourses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCourses(id: ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/courses/courses.service.ts:21\n                \n            \n\n\n            \n                \n                    Get all users courses\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCoursesDepartmentId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCoursesDepartmentId(id: ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/courses/courses.service.ts:135\n                \n            \n\n\n            \n                \n                    Get courses by parent department id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        parent department id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCoursesInviteKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCoursesInviteKey(inviteKey: ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/courses/courses.service.ts:146\n                \n            \n\n\n            \n                \n                    Get courses by inviteKey\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inviteKey\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        inviteKey\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getMentors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMentors(id: ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/courses/courses.service.ts:48\n                \n            \n\n\n            \n                \n                    Get all mentors \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User Id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getStudents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudents(id: ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/courses/courses.service.ts:77\n                \n            \n\n\n            \n                \n                    Get all students \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User Id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateCourseInviteKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCourseInviteKey(id: ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/courses/courses.service.ts:117\n                \n            \n\n\n            \n                \n                    Get course by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Course id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { Course } from './interfaces/course.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ObjectId } from 'mongodb';\nimport { CreateCourseDTO } from './dto/create-course.dto';\nimport { UsersService } from '../users/users.service';\n\n/**\n * Courses Service\n */\n@Injectable()\nexport class CoursesService { \n  /**@ignore */\n  constructor(@InjectModel('Course') private readonly courseModel: Model,\n              private usersService: UsersService, ) { }\n    \n  /**\n     * Get all users courses\n     */\n  async getCourses(id: ObjectId) : Promise {\n    let courses = await this.courseModel.find().exec();\n    const user = \n      await this.usersService.getUser(id);\n    if(user.role != 'admin'){\n      courses = courses.filter(course => course.teacherOwner.equals(user._id));\n      courses.forEach(function(course){\n        course.teacherName = user.firstName +' '+ user.lastName;\n      });\n    } \n    else{\n      const teachers = await this.usersService.getTeachers();\n      courses.forEach(function(course){\n        const teacher = teachers.find(\n          teacher => course.teacherOwner.equals(teacher._id));\n        if(teacher) {\n          course.teacherName = teacher.firstName +' '+ teacher.lastName;\n        } \n      });\n    }\n    return courses;\n  }\n\n  /**\n   * Get all mentors \n   * @param id User Id\n   */\n  async getMentors(id: ObjectId) {\n    const courses = await this.getCourses(id);\n    const users = await this.usersService.getUsers();\n    const mentors = [];\n    courses.map(course =>{\n      if(course.mentors){\n        course.mentors.map(mentor=>{\n          const user = users.find(u=>u._id.equals(mentor))\n          if(user){\n            mentors.push(\n              {\n                courseId : course._id,\n                courseName : course.courseName,\n                userId : user._id,\n                userFirstName : user.firstName,\n                userLastName : user.lastName,\n              }\n            );\n          }\n        })\n      }\n    });\n    return mentors;\n  }\n\n  /**\n   * Get all students \n   * @param id User Id\n   */\n  async getStudents(id: ObjectId) {\n    const courses = await this.getCourses(id);\n    const users = await this.usersService.getUsers();\n    const students = [];\n    courses.map(course =>{\n      if(course.students){\n        course.students.map(student=>{\n          const user = users.find(u=>u._id.equals(student))\n          if(user){\n            students.push(\n              {\n                courseId : course._id,\n                courseName : course.courseName,\n                userId : user._id,\n                userFirstName : user.firstName,\n                userLastName : user.lastName,\n              }\n            );\n          }\n        })\n      }\n    });\n    return students;\n  }\n\n  /**\n     * Get course by id\n     * @param id Course id\n     */\n  async getCourse(id: ObjectId): Promise { \n    const course = await this.courseModel\n      .findOne(id)\n      .exec(); \n    return course;\n  }\n  \n  /**\n     * Get course by id\n     * @param id Course id\n     */\n  async updateCourseInviteKey(id: ObjectId): Promise { \n    const course = await this.courseModel\n      .findOne(id)\n      .exec();\n    if(!course){\n      return;\n    }\n    course.inviteKey = new ObjectId();\n    const editedCourse= await this.courseModel\n      .findByIdAndUpdate(course.id, course)\n      .exec();\n    return editedCourse; \n  }\n    \n  /**\n     * Get courses by parent department id\n     * @param id parent department id\n     */\n  async getCoursesDepartmentId(id: ObjectId): Promise {\n    const courses = await this.courseModel\n      .find({\"parentDepartment\" : id})\n      .exec();\n    return courses;\n  }\n\n  /**\n     * Get courses by inviteKey\n     * @param inviteKey inviteKey\n     */\n  async getCoursesInviteKey(inviteKey: ObjectId): Promise {\n    const courses = await this.courseModel\n      .find({\"inviteKey\" : inviteKey})\n      .exec();\n    return courses;\n  }\n\n  /**\n     * Add new course\n     * @param createCourseDTO \n     */\n  async addCourse(createCourseDTO: CreateCourseDTO): Promise {\n    createCourseDTO._id = new ObjectId();\n    createCourseDTO.inviteKey = new ObjectId();\n    if(createCourseDTO.topics){\n      createCourseDTO.topics.forEach(function(topic){\n        topic._id = new ObjectId();\n        if(topic.activities){\n          topic.activities.forEach(function(activity){\n            activity._id = new ObjectId();\n          });\n        }         \n      });\n    }\n    const newCourse = await new this.courseModel(createCourseDTO);\n    return newCourse.save();\n  }\n\n  /**\n     * Edit course data \n     * @param createCourseDTO \n     */\n  async editCourse(createCourseDTO: CreateCourseDTO) : Promise {\n    if(createCourseDTO.topics){\n      createCourseDTO.topics.forEach(function(topic){\n        if(!topic._id){\n          topic._id = new ObjectId();\n        }\n        if(topic.activities){\n          topic.activities.forEach(function(activity){\n            if(!activity._id){\n              activity._id = new ObjectId();\n            }\n          });\n        }         \n      });\n    }\n    const editedCourse= await this.courseModel\n      .findByIdAndUpdate(createCourseDTO._id, createCourseDTO, { new: true });\n    return editedCourse;\n  }\n\n  /**\n     * Delete course\n     * @param id course id\n     */\n  async deleteCourse(id: ObjectId): Promise {\n    const deletedCourse = await this.courseModel\n      .findByIdAndRemove(id);\n    return deletedCourse;\n  }    \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCourseDTO.html":{"url":"classes/CreateCourseDTO.html","title":"class - CreateCourseDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCourseDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/dto/create-course.dto.ts\n        \n\n            \n                Description\n            \n            \n                CreateCourseDTO\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                    Readonly\n                                consultationsNumber\n                            \n                            \n                                    Readonly\n                                controlWorksNumber\n                            \n                            \n                                    Readonly\n                                courseDescription\n                            \n                            \n                                    Readonly\n                                courseName\n                            \n                            \n                                createdDate\n                            \n                            \n                                createdUser\n                            \n                            \n                                    Readonly\n                                hoursNumber\n                            \n                            \n                                inviteKey\n                            \n                            \n                                    Readonly\n                                laboratoryWorksNumber\n                            \n                            \n                                    Readonly\n                                lecturesNumber\n                            \n                            \n                                    Readonly\n                                mentors\n                            \n                            \n                                parentDepartment\n                            \n                            \n                                    Readonly\n                                practicesNumber\n                            \n                            \n                                    Readonly\n                                selfEducationHours\n                            \n                            \n                                    Readonly\n                                seminarsNumber\n                            \n                            \n                                    Readonly\n                                students\n                            \n                            \n                                teacherName\n                            \n                            \n                                teacherOwner\n                            \n                            \n                                topics\n                            \n                            \n                                    Readonly\n                                worksNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:12\n                            \n                        \n\n                \n                    \n                        Course id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            consultationsNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course consultations number', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:89\n                            \n                        \n\n                \n                    \n                        Course consultations number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            controlWorksNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course control works number', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:83\n                            \n                        \n\n                \n                    \n                        Course control works number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            courseDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course Description'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:24\n                            \n                        \n\n                \n                    \n                        Course Description\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            courseName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course Name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:18\n                            \n                        \n\n                \n                    \n                        Course Name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course created Date'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:113\n                            \n                        \n\n                \n                    \n                        Course created Date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course created User id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:119\n                            \n                        \n\n                \n                    \n                        Course created User id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            hoursNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course hours number', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:47\n                            \n                        \n\n                \n                    \n                        Course hours number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inviteKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Invite key'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:125\n                            \n                        \n\n                \n                    \n                        Invite key\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            laboratoryWorksNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course laboratory works number', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:71\n                            \n                        \n\n                \n                    \n                        Course laboratory works number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lecturesNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course lectures number', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:53\n                            \n                        \n\n                \n                    \n                        Course lectures number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            mentors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course mentors id', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:107\n                            \n                        \n\n                \n                    \n                        Course mentors id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentDepartment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course parent Department id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:30\n                            \n                        \n\n                \n                    \n                        Course parent Department id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            practicesNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course practices number', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:65\n                            \n                        \n\n                \n                    \n                        Course practices number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            selfEducationHours\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course self education hours', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:77\n                            \n                        \n\n                \n                    \n                        Course self education hours\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            seminarsNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course seminars number', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:59\n                            \n                        \n\n                \n                    \n                        Course seminars number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            students\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course students id', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:101\n                            \n                        \n\n                \n                    \n                        Course students id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teacherName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course teacher owner Name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:42\n                            \n                        \n\n                \n                    \n                        Course teacher owner Name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teacherOwner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course teacher owner id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:36\n                            \n                        \n\n                \n                    \n                        Course teacher owner id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            topics\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Topic[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course topics'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:131\n                            \n                        \n\n                \n                    \n                        Course topics\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            worksNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course total works number', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:95\n                            \n                        \n\n                \n                    \n                        Course total works number\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ObjectId } from 'mongodb';\nimport { Topic } from '../interfaces/topic.interface';\n \n/**\n * CreateCourseDTO\n */\nexport class CreateCourseDTO {\n    /**\n     * Course id\n     */\n    _id: ObjectId;\n\n    /**\n     * Course Name\n     */\n    @ApiProperty({description: 'Course Name'})\n    readonly courseName: string;\n\n    /**\n     * Course Description\n     */\n    @ApiProperty({description: 'Course Description'})\n    readonly courseDescription: string;\n\n    /**\n     * Course parent Department id\n     */\n    @ApiProperty({description: 'Course parent Department id'})\n    parentDepartment: ObjectId;\n\n    /**\n     * Course teacher owner id\n     */\n    @ApiProperty({description: 'Course teacher owner id'})\n    teacherOwner: ObjectId;\n\n    /**\n     * Course teacher owner Name\n     */\n    @ApiProperty({description: 'Course teacher owner Name'})\n    teacherName: string;\n    /**\n     * Course hours number\n     */\n    @ApiProperty({description: 'Course hours number',required: false})\n    readonly hoursNumber: number;\n\n    /**\n     * Course lectures number\n     */\n    @ApiProperty({description: 'Course lectures number',required: false})\n    readonly lecturesNumber: number;\n\n    /**\n     * Course seminars number\n     */\n    @ApiProperty({description: 'Course seminars number',required: false})\n    readonly seminarsNumber: number;\n\n    /**\n     * Course practices number\n     */\n    @ApiProperty({description: 'Course practices number',required: false})\n    readonly practicesNumber: number;\n\n    /**\n     * Course laboratory works number\n     */\n    @ApiProperty({description: 'Course laboratory works number',required: false})\n    readonly laboratoryWorksNumber: number;\n\n    /**\n     * Course self education hours\n     */\n    @ApiProperty({description: 'Course self education hours',required: false})\n    readonly selfEducationHours: number;\n\n    /**\n     * Course control works number\n     */\n    @ApiProperty({description: 'Course control works number',required: false})\n    readonly controlWorksNumber: number;\n\n    /**\n     * Course consultations number\n     */\n    @ApiProperty({description: 'Course consultations number',required: false})\n    readonly consultationsNumber: number;\n\n    /**\n     * Course total works number\n     */\n    @ApiProperty({description: 'Course total works number',required: false})\n    readonly worksNumber: number;\n\n    /**\n     * Course students id\n     */\n    @ApiProperty({description: 'Course students id',required: false})\n    readonly students: Array;\n\n    /**\n     * Course mentors id\n     */\n    @ApiProperty({description: 'Course mentors id',required: false})\n    readonly mentors: Array;\n\n    /**\n     * Course created Date\n     */\n    @ApiProperty({description: 'Course created Date'})\n    createdDate: Date;\n\n    /**\n     * Course created User id\n     */\n    @ApiProperty({description: 'Course created User id'})\n    createdUser: ObjectId; \n\n    /**\n     * Invite key\n     */\n    @ApiProperty({description: 'Invite key'})\n    inviteKey: ObjectId; \n\n    /**\n     * Course topics\n     */\n    @ApiProperty({description: 'Course topics'})\n    topics: Topic[]; \n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNodeDTO.html":{"url":"classes/CreateNodeDTO.html","title":"class - CreateNodeDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNodeDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/universities/dto/create-node.dto.ts\n        \n\n            \n                Description\n            \n            \n                Create Node DTO\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdDate\n                            \n                            \n                                createdUser\n                            \n                            \n                                mentors\n                            \n                            \n                                    Readonly\n                                nodeName\n                            \n                            \n                                parentNode\n                            \n                            \n                                teachers\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                        \n                            \n                                    Defined in src/universities/dto/create-node.dto.ts:11\n                            \n                        \n\n                \n                    \n                        Node id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Node created Date'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/universities/dto/create-node.dto.ts:41\n                            \n                        \n\n                \n                    \n                        Node created Date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Node created User id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/universities/dto/create-node.dto.ts:47\n                            \n                        \n\n                \n                    \n                        Node created User id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mentors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Array of the mentors id', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/universities/dto/create-node.dto.ts:35\n                            \n                        \n\n                \n                    \n                        Array of the mentors id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            nodeName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Node Name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/universities/dto/create-node.dto.ts:17\n                            \n                        \n\n                \n                    \n                        Node Name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentNode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Parent Node id', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/universities/dto/create-node.dto.ts:23\n                            \n                        \n\n                \n                    \n                        Parent Node id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teachers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Array of the teachers id', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/universities/dto/create-node.dto.ts:29\n                            \n                        \n\n                \n                    \n                        Array of the teachers id\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ObjectId } from 'mongodb';\n\n/**\n * Create Node DTO\n */\nexport class CreateNodeDTO {\n    /**\n     * Node id\n     */\n    _id: ObjectId;\n\n    /**\n     * Node Name\n     */\n    @ApiProperty({description: 'Node Name'})\n    readonly nodeName: string;\n\n    /**\n     * Parent Node id\n     */\n    @ApiProperty({description: 'Parent Node id' ,required: false})\n    parentNode: ObjectId;\n\n    /**\n     * Array of the teachers id\n     */\n    @ApiProperty({description: 'Array of the teachers id',required: false})\n    teachers: Array;\n\n    /**\n     * Array of the mentors id\n     */\n    @ApiProperty({description: 'Array of the mentors id',required: false})\n    mentors: Array;\n\n    /**\n     * Node created Date\n     */\n    @ApiProperty({description: 'Node created Date'})\n    createdDate: Date;\n\n    /**\n     * Node created User id\n     */\n    @ApiProperty({description: 'Node created User id'})\n    createdUser: ObjectId; \n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDTO.html":{"url":"classes/CreateUserDTO.html","title":"class - CreateUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n            \n                Description\n            \n            \n                CreateUserDTO\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                confirmedEmail\n                            \n                            \n                                contactPhone\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                interests\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'User id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:13\n                            \n                        \n\n                \n                    \n                        User id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmedEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Is confirmed Email'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:25\n                            \n                        \n\n                \n                    \n                        Is confirmed Email\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contactPhone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'User Contact phone number', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:51\n                            \n                        \n\n                \n                    \n                        User Contact phone number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'User email'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:19\n                            \n                        \n\n                \n                    \n                        User email\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'User First Name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:37\n                            \n                        \n\n                \n                    \n                        User First Name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interests\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'User Interests', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:67\n                            \n                        \n\n                \n                    \n                        User Interests\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'User Last Name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:43\n                            \n                        \n\n                \n                    \n                        User Last Name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'User password'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:31\n                            \n                        \n\n                \n                    \n                        User password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'User Role', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:75\n                            \n                        \n\n                \n                    \n                        User Role\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'User Title', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:59\n                            \n                        \n\n                \n                    \n                        User Title\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ObjectId } from 'mongodb'; \n \n/**\n * CreateUserDTO\n */\nexport class CreateUserDTO{\n\n    /**\n     * User id\n     */\n    @ApiProperty({description: 'User id'})\n    _id : ObjectId;\n\n    /**\n     * User email\n     */\n    @ApiProperty({description: 'User email'})\n    email: string;\n\n    /**\n     * Is confirmed Email\n     */\n    @ApiProperty({description: 'Is confirmed Email'})\n    confirmedEmail: boolean;\n\n    /**\n     * User password\n     */\n    @ApiProperty({description: 'User password'})\n    password: string;\n    \n    /**\n     * User First Name\n     */\n    @ApiProperty({description: 'User First Name'})\n    firstName: string;\n\n    /**\n     * User Last Name\n     */\n    @ApiProperty({description: 'User Last Name'})\n     lastName: string;\n\n    /**\n     * User Contact phone number\n     */\n    @ApiProperty({description: 'User Contact phone number', \n      required: false \n    })\n    contactPhone: string;\n\n    /**\n     * User Title\n     */\n    @ApiProperty({description: 'User Title',\n      required: false \n    })\n    title: string;\n\n    /**\n     * User Interests\n     */\n    @ApiProperty({description: 'User Interests',\n      required: false        \n    })\n    interests: string;\n\n    /**\n     * User Role\n     */\n    @ApiProperty({description: 'User Role',\n      required: false        \n    })\n    role: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/InviteUserController.html":{"url":"controllers/InviteUserController.html","title":"controller - InviteUserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  InviteUserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/invite-user/invite-user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                invite\n            \n\n            \n                Description\n            \n            \n                Invite Users\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkInviteKey\n                            \n                            \n                                    Async\n                                confirmEmail\n                            \n                            \n                                    Async\n                                inviteMentor\n                            \n                            \n                                    Async\n                                inviteStudent\n                            \n                            \n                                    Async\n                                inviteTeacher\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkInviteKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkInviteKey(res, inviteKey)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/check/:inviteKey')@ApiNotFoundResponse({description: 'Not found course with this inviteKey'})@ApiOkResponse({description: 'Course id and course name'})@ApiOperation({description: Check invite key \n        \nReturn course id and course name\n       })@ApiBadRequestResponse({description: 'Invalid id!'})@ApiParam({name: 'inviteKey', type: String})\n                \n            \n\n            \n                \n                    Defined in src/invite-user/invite-user.controller.ts:139\n                \n            \n\n\n            \n                \n                    Check cpurse invite key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inviteKey\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    confirmEmail(res, id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/confirm/:id')@ApiForbiddenResponse({description: 'User with this key is not exists'})@ApiOkResponse({description: 'Email confirmed'})@ApiOperation({description: 'Confirm user or mentor Email'})@ApiBadRequestResponse({description: 'Invalid id!'})@ApiParam({name: 'id', type: String})\n                \n            \n\n            \n                \n                    Defined in src/invite-user/invite-user.controller.ts:114\n                \n            \n\n\n            \n                \n                    Confirm Email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user Id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            inviteMentor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    inviteMentor(res, createUserDTO: CreateUserDTO, inviteKey)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/mentor/:inviteKey')@ApiForbiddenResponse({description: ' User with this email already exists'})@ApiOkResponse({description: 'New mentore profile'})@ApiOperation({description: Invite mentor\n        \nRegistry new mentor to the course\n        \nWaiting for the invite key and new user profile\n       })@ApiBadRequestResponse({description: 'Invalid id!'})@ApiParam({name: 'inviteKey', type: String})\n                \n            \n\n            \n                \n                    Defined in src/invite-user/invite-user.controller.ts:73\n                \n            \n\n\n            \n                \n                    Invite Mentor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createUserDTO\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inviteKey\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            inviteStudent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    inviteStudent(res, createUserDTO: CreateUserDTO, inviteKey)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/student/:inviteKey')@ApiForbiddenResponse({description: 'User with this email already exists'})@ApiOkResponse({description: 'New student profile'})@ApiOperation({description: Invite student\n        \nRegistry new student to the course\n        \nWaiting for the invite key and new user profile\n       })@ApiBadRequestResponse({description: 'Invalid id!'})@ApiParam({name: 'inviteKey', type: String})\n                \n            \n\n            \n                \n                    Defined in src/invite-user/invite-user.controller.ts:95\n                \n            \n\n\n            \n                \n                    Invite Student\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createUserDTO\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inviteKey\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            inviteTeacher\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    inviteTeacher(res, inviteUserDTO: InviteUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/teacher')@UseGuards(JwtAuthGuard)@ApiBearerAuth()@ApiUnauthorizedResponse({description: 'Access Token is not valid or has expired'})@ApiOkResponse({description: 'New teacher profile'})@ApiOperation({description: Invite teacher\n        \nSend invitation to new teacher\n        \nWaiting for the department id and the teacher's email})\n                \n            \n\n            \n                \n                    Defined in src/invite-user/invite-user.controller.ts:50\n                \n            \n\n\n            \n                \n                    Invite Teacher\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inviteUserDTO\n                                    \n                                                InviteUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, \n  Controller, \n  ForbiddenException, \n  Get, \n  HttpStatus, \n  Param, \n  Post, \n  Res, \n  UseGuards } from '@nestjs/common';\nimport { ApiBadRequestResponse, ApiBearerAuth, \n  ApiForbiddenResponse, \n  ApiNotFoundResponse, \n  ApiOkResponse, \n  ApiOperation, \n  ApiParam, \n  ApiTags, \n  ApiUnauthorizedResponse } from '@nestjs/swagger';\nimport { ObjectId } from 'mongodb';\nimport { JwtAuthGuard } from 'src/auth/jwt-auth.guard';\nimport { ValidateObjectId } from 'src/pipes/validate-object-id.pipes';\nimport { CreateUserDTO } from 'src/users/dto/create-user.dto';\nimport { InviteUserDTO } from './dto/invite-user.dto';\nimport { InviteUserService} from './invite-user.service';\nimport { UsersService } from '../users/users.service';\n\n/**\n * Invite Users\n */\n\n@Controller('invite')\n@ApiTags('Invite Users')\nexport class InviteUserController {\n  /**@ignore */\n  constructor(private inviteUserService: InviteUserService,\n              private usersService: UsersService) { } \n\n    /**\n     * Invite Teacher\n     * @param res \n     * @param inviteUserDTO \n     */\n    @Post('/teacher')\n    @UseGuards(JwtAuthGuard)\n    @ApiBearerAuth()\n    @ApiUnauthorizedResponse({description: 'Access Token is not valid or has expired'})\n    @ApiOkResponse({description: 'New teacher profile'})\n    @ApiOperation({description: `Invite teacher\n        \\nSend invitation to new teacher\n        \\nWaiting for the department id and the teacher's email`})\n  async inviteTeacher(@Res() res, @Body() inviteUserDTO: InviteUserDTO) {\n    const newTeacher = \n      await this.inviteUserService.inviteTeacher(inviteUserDTO);\n    return res.status(HttpStatus.OK).json({\n      message: 'Teacher has been invited successfully!',\n      user: newTeacher,\n    });\n  }\n    \n    /**\n     * Invite Mentor\n     * @param res \n     * @param createUserDTO \n     */\n    @Post('/mentor/:inviteKey')\n    @ApiForbiddenResponse({description:' User with this email already exists'})\n    @ApiOkResponse({description: 'New mentore profile'})\n    @ApiOperation({description: `Invite mentor\n        \\nRegistry new mentor to the course\n        \\nWaiting for the invite key and new user profile\n       `})\n    @ApiBadRequestResponse({description:'Invalid id!'})\n    @ApiParam({name: 'inviteKey', type: String})\n    async inviteMentor(@Res() res, @Body() createUserDTO: CreateUserDTO, @Param('inviteKey', new ValidateObjectId()) inviteKey) {\n      const newMentor = await this.inviteUserService.inviteUser( new ObjectId(inviteKey), createUserDTO, 'mentor');\n      return res.status(HttpStatus.OK).json({\n        message: 'Mentor has been invited successfully!',\n        user: newMentor,\n      });\n    }\n\n    /**\n     * Invite Student\n     * @param res \n     * @param createUserDTO \n     */\n    @Post('/student/:inviteKey')    \n    @ApiForbiddenResponse({description: 'User with this email already exists'})\n    @ApiOkResponse({description: 'New student profile'})\n    @ApiOperation({description: `Invite student\n        \\nRegistry new student to the course\n        \\nWaiting for the invite key and new user profile\n       `})\n    @ApiBadRequestResponse({description:'Invalid id!'})\n    @ApiParam({name: 'inviteKey', type: String})\n    async inviteStudent(@Res() res, @Body() createUserDTO: CreateUserDTO, @Param('inviteKey', new ValidateObjectId()) inviteKey) {\n      const newStudent= await this.inviteUserService.inviteUser(new ObjectId(inviteKey), createUserDTO, 'student');\n      return res.status(HttpStatus.OK).json({\n        message: 'Student has been invited successfully!',\n        user: newStudent,\n      });\n    }\n\n    /**\n     * Confirm Email\n     * @param res \n     * @param id user Id\n     */\n    @Post('/confirm/:id')    \n    @ApiForbiddenResponse({description: 'User with this key is not exists'})\n    @ApiOkResponse({description: 'Email confirmed'})\n    @ApiOperation({description: 'Confirm user or mentor Email'})\n    @ApiBadRequestResponse({description:'Invalid id!'})\n    @ApiParam({name: 'id', type: String})\n    async confirmEmail(@Res() res, @Param('id', new ValidateObjectId()) id) {\n      const user = await this.usersService.getUser(new ObjectId(id));\n      if(!user){\n        throw new ForbiddenException('User with this key is not exists');\n      }\n      user.confirmedEmail = true;\n      await this.usersService.editUser(new ObjectId(id), user);\n      return res.status(HttpStatus.OK).json({\n        message: 'Email has been confirmed successfully!'\n      });\n    }\n\n    /**\n     * Check cpurse invite key\n     * @param res \n     * @param inviteKey \n     */\n    @Get('/check/:inviteKey')    \n    @ApiNotFoundResponse({description: 'Not found course with this inviteKey'})\n    @ApiOkResponse({description: 'Course id and course name'})\n    @ApiOperation({description: `Check invite key \n        \\nReturn course id and course name\n       `})\n    @ApiBadRequestResponse({description:'Invalid id!'})\n    @ApiParam({name: 'inviteKey', type: String})\n    async checkInviteKey(@Res() res, \n      @Param('inviteKey', new ValidateObjectId()) inviteKey) {\n      const id = new ObjectId(inviteKey);\n      const course = await this.inviteUserService.checkInviteKey(id);\n      return res.status(HttpStatus.OK).json({\n        id: course._id,\n        courseName: course.courseName});\n    }\n   \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InviteUserDTO.html":{"url":"classes/InviteUserDTO.html","title":"class - InviteUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InviteUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/invite-user/dto/invite-user.dto.ts\n        \n\n            \n                Description\n            \n            \n                Invite User DTO\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                nodeId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'User email'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/invite-user/dto/invite-user.dto.ts:17\n                            \n                        \n\n                \n                    \n                        User email\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            nodeId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Node Id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/invite-user/dto/invite-user.dto.ts:11\n                            \n                        \n\n                \n                    \n                        Node Id\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'; \n\n/**\n * Invite User DTO\n */\nexport class InviteUserDTO {\n    /**\n     * Node Id\n     */\n    @ApiProperty({description: 'Node Id'})\n    readonly nodeId: string;\n\n    /**\n     * User email\n     */\n    @ApiProperty({description: 'User email'})\n    readonly email: string;   \n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InviteUserModule.html":{"url":"modules/InviteUserModule.html","title":"module - InviteUserModule","body":"\n                   \n\n\n\n\n    Modules\n    InviteUserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InviteUserModule\n\n\n\ncluster_InviteUserModule_imports\n\n\n\ncluster_InviteUserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nInviteUserModule\n\nInviteUserModule\n\nInviteUserModule -->\n\nAuthModule->InviteUserModule\n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nInviteUserModule -->\n\nCoursesModule->InviteUserModule\n\n\n\n\n\nMailerEdu4uModule\n\nMailerEdu4uModule\n\nInviteUserModule -->\n\nMailerEdu4uModule->InviteUserModule\n\n\n\n\n\nUniversitiesModule\n\nUniversitiesModule\n\nInviteUserModule -->\n\nUniversitiesModule->InviteUserModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nInviteUserModule -->\n\nUsersModule->InviteUserModule\n\n\n\n\n\nInviteUserService\n\nInviteUserService\n\nInviteUserModule -->\n\nInviteUserService->InviteUserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/invite-user/invite-user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InviteUserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            InviteUserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoursesModule\n                        \n                        \n                            MailerEdu4uModule\n                        \n                        \n                            UniversitiesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { InviteUserService } from './invite-user.service';\nimport { InviteUserController } from './invite-user.controller';\nimport { UsersModule } from '../users/users.module';\nimport { UniversitiesModule } from '../universities/universities.module';\nimport { MailerEdu4uModule } from '../mailer-edu4u/mailer-edu4u.module';\nimport { AuthModule } from '../auth/auth.module';\nimport { CoursesModule } from 'src/courses/courses.module';\n\n@Module({\n  imports:[UsersModule, \n    MailerEdu4uModule,\n    UniversitiesModule,\n    AuthModule,\n    CoursesModule,\n  ],\n  providers: [InviteUserService],\n  controllers: [InviteUserController]\n})\nexport class InviteUserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InviteUserService.html":{"url":"injectables/InviteUserService.html","title":"injectable - InviteUserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InviteUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/invite-user/invite-user.service.ts\n        \n\n            \n                Description\n            \n            \n                Invite User Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkInviteKey\n                            \n                            \n                                    Async\n                                inviteTeacher\n                            \n                            \n                                    Async\n                                inviteUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkInviteKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkInviteKey(inviteKey: ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/invite-user/invite-user.service.ts:111\n                \n            \n\n\n            \n                \n                    Check Invite Key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inviteKey\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        invite Key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            inviteTeacher\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    inviteTeacher(inviteUserDTO: InviteUserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/invite-user/invite-user.service.ts:25\n                \n            \n\n\n            \n                \n                    Invite Teacher\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inviteUserDTO\n                                    \n                                                InviteUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        invite User DTO\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            inviteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    inviteUser(inviteKey: ObjectId, createUserDTO: CreateUserDTO, newRole: string)\n                \n            \n\n\n            \n                \n                    Defined in src/invite-user/invite-user.service.ts:71\n                \n            \n\n\n            \n                \n                    Invite User(Mentor or Student)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inviteKey\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createUserDTO\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newRole\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, NotFoundException } from '@nestjs/common';\nimport { InviteUserDTO } from './dto/invite-user.dto';\nimport { UsersService } from '../users/users.service';\nimport { CoursesService} from '../courses/courses.service'\nimport { UniversitiesService } from '../universities/universities.service';\nimport { MailerEdu4uService } from '../mailer-edu4u/mailer-edu4u.service';\nimport { CreateUserDTO } from 'src/users/dto/create-user.dto';\nimport { ObjectId } from 'mongodb'; \nimport { Course } from 'src/courses/interfaces/course.interface'; \n\n/**\n * Invite User Service\n */\n@Injectable()\nexport class InviteUserService {\n  /**@ignore */\n  constructor(private usersService: UsersService, \n                private universitiesService: UniversitiesService,\n                private mailerEdu4uService: MailerEdu4uService, \n                private coursesService: CoursesService) { }\n  /**\n  * Invite Teacher\n  * @param inviteUserDTO invite User DTO\n  */\n  async inviteTeacher(inviteUserDTO: InviteUserDTO) {\n    if(!inviteUserDTO){\n      throw new NotFoundException('Invalid inviteUserDTO');\n    }\n    const id = new ObjectId(inviteUserDTO.nodeId);\n    const node = await this.universitiesService.getNode(id);\n    if(!node){\n      throw new NotFoundException('Node not found');\n    }\n    let user = await this.usersService.findUserByEmail(inviteUserDTO.email);\n    if(!user){\n      const newUser = new CreateUserDTO;\n      newUser.email = inviteUserDTO.email;\n      newUser.role = 'teacher';\n      newUser.password = 'newUserPassword';\n      newUser.contactPhone = '';\n      newUser.firstName = '';\n      newUser.lastName = '';\n      newUser.title = '';\n      newUser.interests = '';\n      user = await this.usersService.addUser(newUser);\n    }\n    if(user.role != 'teacher'){ \n      user = await this.usersService.editUser(user._id, user);\n    }          \n    if(!node.teachers.includes(user._id))\n      node.teachers.push(user._id);\n    this.universitiesService.editNode(node._id, node);\n    const institite = \n      await this.universitiesService.getNode(node.parentNode);\n    const univer = \n      await this.universitiesService.getNode(institite.parentNode); \n    this.mailerEdu4uService.sendMail(\n      user.email, \n      'Реєстрація викладача EDU4U', \n      this.mailerEdu4uService.inviteTeacher(node.nodeName, \n        institite.nodeName, \n        univer.nodeName, \n        user ));\n    return user;\n  }\n\n  /**\n  * Invite User(Mentor or Student)\n  * @param inviteUserDTO invite User DTO\n  */\n  async inviteUser(inviteKey: ObjectId, \n    createUserDTO: CreateUserDTO, \n    newRole: string) {\n    if(!createUserDTO){\n      throw new NotFoundException('Invalid createUserDTO');\n    }\n    const course = await this.checkInviteKey(inviteKey); \n    let isOldUser = true;\n    let user = await this.usersService.findUserByEmail(createUserDTO.email);\n    if(!user){\n      createUserDTO.role = newRole;\n      user = await this.usersService.addUser(createUserDTO);\n      isOldUser = false;\n    } \n    if(newRole == 'mentor'){\n      //push new mentor if not exists\n      (!course.mentors.includes(user._id)) && course.mentors.push(user._id);\n      await this.coursesService.editCourse(course); \n      this.mailerEdu4uService.sendMail(\n        user.email, \n        'Реєстрація ментора EDU4U', \n        this.mailerEdu4uService.inviteMentor(course.courseName, user));\n    }\n    else if (!course.students.includes(user._id)) {\n      //push new student if not exists\n      (!course.students.includes(user._id)) && course.students.push(user._id);\n      await this.coursesService.editCourse(course);      \n      this.mailerEdu4uService.sendMail(\n        user.email, \n        'Реєстрація студента EDU4U', \n        this.mailerEdu4uService.inviteStudent(course.courseName, user));\n    }\n    if(isOldUser)\n      throw new ForbiddenException('User with this email already exists');\n  }\n\n  /**\n   * Check Invite Key\n   * @param inviteKey invite Key\n   */\n  async checkInviteKey(inviteKey: ObjectId):Promise {\n    const courses = await this.coursesService.getCoursesInviteKey(inviteKey); \n    if(courses.length == 0 ){\n      throw new NotFoundException('Not found course with this inviteKey');\n    }\n    return courses[0];      \n  }\n\n  \n     \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n            \n                Description\n            \n            \n                JwtAuthGuard extends AuthGuard\n\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n/**\n * JwtAuthGuard extends AuthGuard\n */\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n            \n                Description\n            \n            \n                JwtStrategy extends PassportStrategy\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            ignore \n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:23\n                \n            \n\n\n            \n                \n                    validate payload\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\n\n/**\n * JwtStrategy extends PassportStrategy\n */\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  /**ignore */\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET || \"MySecret\",\n    });\n  }\n\n  /**\n   * validate payload\n   * @param payload \n   */\n  async validate(payload: any) {\n    return { _id: payload.sub, email: payload.email };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n            \n                Description\n            \n            \n                LocalStrategy extends PassportStrategy\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:21\n                \n            \n\n\n            \n                \n                    Validate user email and password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n/**\n * LocalStrategy extends PassportStrategy\n */\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  /**@ignore */\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  /**\n   * Validate user email and password\n   * @param email \n   * @param password \n   */\n  async validate(email: string, password: string): Promise { \n    const user = await this.authService.validateUser(email, password);\n    if (!user.payload) {\n      throw new UnauthorizedException(user.message);\n    }\n    return user.payload;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailerEdu4uModule.html":{"url":"modules/MailerEdu4uModule.html","title":"module - MailerEdu4uModule","body":"\n                   \n\n\n\n\n    Modules\n    MailerEdu4uModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailerEdu4uModule\n\n\n\ncluster_MailerEdu4uModule_exports\n\n\n\ncluster_MailerEdu4uModule_providers\n\n\n\n\nMailerEdu4uService \n\nMailerEdu4uService \n\n\n\nMailerEdu4uModule\n\nMailerEdu4uModule\n\nMailerEdu4uService  -->\n\nMailerEdu4uModule->MailerEdu4uService \n\n\n\n\n\nMailerEdu4uService\n\nMailerEdu4uService\n\nMailerEdu4uModule -->\n\nMailerEdu4uService->MailerEdu4uModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mailer-edu4u/mailer-edu4u.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailerEdu4uService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailerEdu4uService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailerEdu4uService } from './mailer-edu4u.service';\n\n@Module({\n  providers: [MailerEdu4uService],\n  exports: [MailerEdu4uService]\n})\nexport class MailerEdu4uModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailerEdu4uService.html":{"url":"injectables/MailerEdu4uService.html","title":"injectable - MailerEdu4uService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailerEdu4uService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mailer-edu4u/mailer-edu4u.service.ts\n        \n\n            \n                Description\n            \n            \n                Mailer class\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _getMailText\n                            \n                            \n                                changePassword\n                            \n                            \n                                inviteMentor\n                            \n                            \n                                inviteStudent\n                            \n                            \n                                inviteTeacher\n                            \n                            \n                                    Public\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            _getMailText\n                        \n                        \n                    \n                \n            \n            \n                \n_getMailText(firstLine: string, body: string, link: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mailer-edu4u/mailer-edu4u.service.ts:99\n                \n            \n\n\n            \n                \n                    Get Mail Text\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    firstLine\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \nchangePassword(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/mailer-edu4u/mailer-edu4u.service.ts:86\n                \n            \n\n\n            \n                \n                    Change Password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            inviteMentor\n                        \n                        \n                    \n                \n            \n            \n                \ninviteMentor(departmentName: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/mailer-edu4u/mailer-edu4u.service.ts:70\n                \n            \n\n\n            \n                \n                    Invite Mentor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    departmentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            inviteStudent\n                        \n                        \n                    \n                \n            \n            \n                \ninviteStudent(departmentName: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/mailer-edu4u/mailer-edu4u.service.ts:54\n                \n            \n\n\n            \n                \n                    Invite Student\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    departmentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            inviteTeacher\n                        \n                        \n                    \n                \n            \n            \n                \ninviteTeacher(departmentName: string, instititeName: string, univerName: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/mailer-edu4u/mailer-edu4u.service.ts:35\n                \n            \n\n\n            \n                \n                    Invite Teacher\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    departmentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    instititeName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    univerName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            sendMail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMail(mailTo: string, subject: string, mailText: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mailer-edu4u/mailer-edu4u.service.ts:18\n                \n            \n\n\n            \n                \n                    Send Mail\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    mailTo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        sendMail\n\n                                    \n                                \n                                \n                                    subject\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mailsubject\n\n                                    \n                                \n                                \n                                    mailText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mail Text\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailerService } from '@nestjs-modules/mailer';\nimport { Injectable } from '@nestjs/common';\nimport { User } from 'src/users/interfaces/user.interface';\n\n/**\n * Mailer class\n */\n@Injectable()\nexport class MailerEdu4uService {\n  /**@ignore */\n  constructor(private readonly mailerService: MailerService) {}\n  /**\n     * Send Mail\n     * @param mailTo sendMail\n     * @param subject mailsubject\n     * @param mailText mail Text\n     */\n  public sendMail(mailTo: string, subject: string, mailText: string): void {\n    this.mailerService\n      .sendMail({\n        to: mailTo,\n        from: 'edu4u.user@gmail.com', \n        subject: subject, \n        html: mailText\n      });\n  }\n\n  /**\n   * Invite Teacher\n   * @param departmentName \n   * @param instititeName \n   * @param univerName \n   * @param user \n   */\n  inviteTeacher(departmentName: string, \n    instititeName: string, \n    univerName: string, \n    user: User ):string { \n    const firstLine = 'Вас було зареєстровано в системі';\n    const body = `як викладача \n                        ${departmentName} \n                                    \n                        ${instititeName}\n                        \n                        ${univerName}\n                         Перейдіть за посиланням для продовження реєстрації.`;\n    const link = `https://edu4u.gitlab.io/edu4u/#/registration/teacher/${user._id}`;\n    return this._getMailText(firstLine, body, link);\n  }\n  /**\n   * Invite Student\n   * @param user \n   */\n  inviteStudent(departmentName: string, \n    user: User):string { \n    const firstLine = 'Вас було зареєстровано в системі';\n    const body = `як студента \n                        курсу\n                        \n                        ${departmentName} \n                        Перейдіть за посиланням для підтвердження поштової скриньки.`;\n    const link = `https://edu4u.gitlab.io/edu4u/#/confirmation/student/${user._id}`;\n    return this._getMailText(firstLine, body, link);\n  }\n\n  /**\n   * Invite Mentor\n   * @param user \n   */\n  inviteMentor(departmentName: string, \n    user: User):string { \n    const firstLine = 'Вас було зареєстровано в системі';\n    const body = `як Ментора \n                    курсу\n                    \n                    ${departmentName} \n                    Перейдіть за посиланням для підтвердження поштової скриньки.`;\n    const link = `https://edu4u.gitlab.io/edu4u/#/confirmation/mentor/${user._id}`;\n    return this._getMailText(firstLine, body, link);\n  }\n\n  /**\n   * Change Password\n   * @param user \n   */\n  changePassword(user: User):string { \n    const firstLine = 'Прийшов запит на зміну паролю  для Вашого облікового запису в системі';\n    const body = 'Перейдіть за посиланням для зміни паролю.';\n    const link = `https://edu4u.gitlab.io/edu4u/#/changepassword/${user._id}`;\n    return this._getMailText(firstLine, body, link);\n  }\n\n  /**\n  * Get Mail Text\n  * @param firstLine \n  * @param body \n  * @param link \n  */\n  _getMailText(firstLine: string, body: string, link: string ):string {\n    const htmlOutput = `\n        \n        \n        \n        \n           \n          \n          \n          \n          \n          \n          \n            #outlook a {\n              padding: 0;\n            }\n        \n            body {\n              margin: 0;\n              padding: 0;\n              -webkit-text-size-adjust: 100%;\n              -ms-text-size-adjust: 100%;\n            }\n        \n            table,\n            td {\n              border-collapse: collapse;\n              mso-table-lspace: 0pt;\n              mso-table-rspace: 0pt;\n            }\n        \n            img {\n              border: 0;\n              height: auto;\n              line-height: 100%;\n              outline: none;\n              text-decoration: none;\n              -ms-interpolation-mode: bicubic;\n            }\n        \n            p {\n              display: block;\n              margin: 13px 0;\n            }\n          \n          \n                \n                \n                  \n                  96\n                \n                \n                \n          \n                \n                  .mj-outlook-group-fix { width:100% !important; }\n                \n                \n          \n            @media only screen and (min-width:480px) {\n              .mj-column-per-100 {\n                width: 100% !important;\n                max-width: 100%;\n              }\n            }\n          \n          \n            @media only screen and (max-width:480px) {\n              table.mj-full-width-mobile {\n                width: 100% !important;\n              }\n              td.mj-full-width-mobile {\n                width: auto !important;\n              }\n            }\n          \n        \n        \n        \n          \n            \n              \n                \n                  \n              \n            \n              \n                \n                  \n                    \n                      \n                          \n                        \n                \n              \n                    \n                  \n                      \n                        \n                          \n                            \n                              \n                                \n                                  \n                                      \n                                  \n                                \n                              \n                            \n                          \n                          \n                            \n                              Доброго дня\n                            \n                          \n                          \n                            \n                               ${firstLine} EDU4U \n                  ${body}\n                            \n                          \n                          \n                            \n                              \n                                \n                                  \n                                    \n                                    Перейти за посиланням  \n                                  \n                                \n                              \n                            \n                          \n                        \n                      \n                      \n                    \n                  \n                \n              \n                          \n                        \n                    \n                  \n                \n              \n            \n            \n                  \n                \n              \n              \n              \n                \n                  \n              \n            \n              \n                \n                  \n                    \n                      \n                          \n                        \n                \n              \n                    \n                  \n                      \n                        \n                          \n                            \n                              З повагою адміністрація EDU4U\n                            \n                          \n                        \n                      \n                      \n                    \n                  \n                \n              \n                          \n                        \n                    \n                  \n                \n              \n            \n            \n                  \n                \n              \n              \n          \n        \n        \n        \n                \n        `;\n    return htmlOutput;\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Node.html":{"url":"interfaces/Node.html","title":"interface - Node","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Node\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/universities/interfaces/node.interface.ts\n        \n\n            \n                Description\n            \n            \n                Node mongoose Document\n\n            \n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        createdDate\n                                \n                                \n                                        createdUser\n                                \n                                \n                                        mentors\n                                \n                                \n                                        nodeName\n                                \n                                \n                                        parentNode\n                                \n                                \n                                        teachers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Node id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdDate\n                                    \n                                \n                                \n                                    \n                                        createdDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Node created Date\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdUser\n                                    \n                                \n                                \n                                    \n                                        createdUser:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Node created User\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mentors\n                                    \n                                \n                                \n                                    \n                                        mentors:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Node mentors\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodeName\n                                    \n                                \n                                \n                                    \n                                        nodeName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Node Name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentNode\n                                    \n                                \n                                \n                                    \n                                        parentNode:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    parent Node id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teachers\n                                    \n                                \n                                \n                                    \n                                        teachers:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Node teachers\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ObjectId } from 'mongodb';\nimport { Document } from 'mongoose';\n\n/**\n * Node mongoose Document\n */\nexport interface Node extends Document {\n    /**\n     * Node id\n     */\n    readonly _id: ObjectId;\n\n    /**\n     * Node Name\n     */\n    readonly nodeName: string;\n\n    /**\n     * parent Node id\n     */\n    readonly parentNode: ObjectId;\n\n    /**\n     * Node teachers\n     */\n    readonly teachers: Array;\n\n    /**\n     * Node mentors\n     */\n    readonly mentors: Array;\n\n    /**\n     * Node created Date\n     */\n    readonly createdDate: Date;\n\n    /**\n     * Node created User\n     */\n    readonly createdUser: ObjectId; \n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeachersController.html":{"url":"controllers/TeachersController.html","title":"controller - TeachersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeachersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teachers/teachers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                teachers\n            \n\n            \n                Description\n            \n            \n                Teachers Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                            \n                                    Async\n                                loginNewUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser(res, createUserDTO: CreateUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/add')@ApiOperation({description: 'Add new user with teacher role'})@ApiOkResponse({description: 'New teacher profile'})@ApiForbiddenResponse({description: 'User with this email already exists'})\n                \n            \n\n            \n                \n                    Defined in src/teachers/teachers.controller.ts:65\n                \n            \n\n\n            \n                \n                    Submit a new teacher\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createUserDTO\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loginNewUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginNewUser(res, id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/newteacher/:id')@ApiOperation({description: 'Get new teacher's email by invite id'})@ApiOkResponse({description: 'New teacher email'})@ApiForbiddenResponse({description: 'Teacher doesn't new!'})@ApiUnauthorizedResponse({description: 'Teacher doesn't exist!'})@ApiNotFoundResponse({description: 'Teacher doesn't exist!'})@ApiBadRequestResponse({description: 'Invalid id!'})@ApiParam({name: 'id', type: String})\n                \n            \n\n            \n                \n                    Defined in src/teachers/teachers.controller.ts:48\n                \n            \n\n\n            \n                \n                    Get new teacher by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, \n  Controller, \n  ForbiddenException, \n  Get, \n  HttpStatus, \n  Param, \n  Post, \n  Res } from '@nestjs/common';\nimport { ApiBadRequestResponse, ApiForbiddenResponse, \n  ApiNotFoundResponse, \n  ApiOkResponse, \n  ApiOperation, \n  ApiParam, \n  ApiTags, \n  ApiUnauthorizedResponse } from '@nestjs/swagger';\nimport { ValidateObjectId } from 'src/pipes/validate-object-id.pipes';\nimport { TeachersService} from './teachers.service'\nimport { UsersService } from '../users/users.service';\nimport { AuthService} from '../auth/auth.service';\nimport { CreateUserDTO } from 'src/users/dto/create-user.dto';\nimport { ObjectId } from 'mongodb';\n\n\n/**\n * Teachers Controller\n */\n@ApiTags('Teachers')\n@Controller('teachers')\nexport class TeachersController {\n  /**@ignore */\n  constructor(private teachersService: TeachersService,\n        private usersService: UsersService,\n        private authService: AuthService) { }  \n\n    /**\n     * Get new teacher by id\n     * @param res \n     * @param id \n     */\n    @Get('/newteacher/:id')\n    @ApiOperation({description:'Get new teacher\\'s email by invite id'})\n    @ApiOkResponse({description: 'New teacher email'})\n    @ApiForbiddenResponse({description: 'Teacher doesn\\'t new!'})\n    @ApiUnauthorizedResponse({description: 'Teacher doesn\\'t exist!'})\n    @ApiNotFoundResponse({description: 'Teacher doesn\\'t exist!'})\n    @ApiBadRequestResponse({description:'Invalid id!'})\n    @ApiParam({name: 'id', type: String})\n  async loginNewUser(\n          @Res() res, @Param('id', new ValidateObjectId()) id) {\n    const teacher = \n        await this.teachersService.getNewTeacher(new ObjectId(id));   \n    const result = { 'teacher_email' : teacher.email};\n    return res.status(HttpStatus.OK).json(result);     \n  }    \n\n    /**\n     * Submit a new teacher\n     * @param res \n     * @param createUserDTO \n     */    \n    @Post('/add')\n    @ApiOperation({description: 'Add new user with teacher role'})\n    @ApiOkResponse({description: 'New teacher profile'})\n    @ApiForbiddenResponse({description: 'User with this email already exists'})\n    async addUser(@Res() res, @Body() createUserDTO: CreateUserDTO) {\n      const id = new ObjectId(createUserDTO._id);\n      const teacher = await this.teachersService.getNewTeacher(id); \n      if(teacher.email != createUserDTO.email){\n        throw new ForbiddenException('Teacher has wrong email!');\n      }\n      createUserDTO.role = 'teacher';\n      const user =\n       await this.usersService.editUser(\n         new ObjectId(createUserDTO._id), createUserDTO); \n      return res.status(HttpStatus.OK).json( {\n        access_token : (await this.authService.login(user)).access_token,\n        profile: user\n      });        \n    } \n\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeachersModule.html":{"url":"modules/TeachersModule.html","title":"module - TeachersModule","body":"\n                   \n\n\n\n\n    Modules\n    TeachersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeachersModule\n\n\n\ncluster_TeachersModule_imports\n\n\n\ncluster_TeachersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nTeachersModule\n\nTeachersModule\n\nTeachersModule -->\n\nAuthModule->TeachersModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nTeachersModule -->\n\nUsersModule->TeachersModule\n\n\n\n\n\nTeachersService\n\nTeachersService\n\nTeachersModule -->\n\nTeachersService->TeachersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/teachers/teachers.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TeachersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TeachersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TeachersController } from './teachers.controller';\nimport { TeachersService } from './teachers.service';\nimport { UsersModule } from '../users/users.module';\nimport { AuthModule } from '../auth/auth.module';\n\n@Module({\n  imports: [UsersModule,\n    AuthModule],\n  controllers: [TeachersController],\n  providers: [TeachersService]\n})\nexport class TeachersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeachersService.html":{"url":"injectables/TeachersService.html","title":"injectable - TeachersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeachersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teachers/teachers.service.ts\n        \n\n            \n                Description\n            \n            \n                Teachers Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getNewTeacher\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNewTeacher\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewTeacher(id: ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/teachers/teachers.service.ts:17\n                \n            \n\n\n            \n                \n                    Get New Teacher\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Teacher id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, NotFoundException } from '@nestjs/common';\nimport { ObjectId } from 'mongodb';\nimport { UsersService } from 'src/users/users.service';\n\n/**\n * Teachers Service\n */\n@Injectable()\nexport class TeachersService {\n  /**@ignore */\n  constructor( private usersService: UsersService ) { } \n\n  /**\n     * Get New Teacher\n     * @param id  Teacher id\n     */\n  async getNewTeacher(id: ObjectId) {\n    const user = await this.usersService.getUser(id);\n    if (!user) {\n      throw new NotFoundException('Teacher doesn\\'t exist!');\n    }\n    // eslint-disable-next-line\n    if (!(await require('bcrypt').compare('newUserPassword', user.password))) {\n      throw new ForbiddenException('Teacher doesn\\'t new!');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Topic.html":{"url":"interfaces/Topic.html","title":"interface - Topic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Topic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/interfaces/topic.interface.ts\n        \n\n            \n                Description\n            \n            \n                Topic mongoose Document\n\n            \n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        activities\n                                \n                                \n                                        description\n                                \n                                \n                                        topicName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Topic id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        activities\n                                    \n                                \n                                \n                                    \n                                        activities:         ActivityDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActivityDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Topic activities\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Topic Description\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topicName\n                                    \n                                \n                                \n                                    \n                                        topicName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Topic Name\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ObjectId } from 'mongodb';\nimport { Document } from 'mongoose';\nimport { ActivityDTO } from '../dto/activity.dto';\n\n/**\n * Topic mongoose Document\n */\nexport interface Topic extends Document {\n    /**\n     * Topic id\n     */\n    _id: ObjectId;\n\n    /**\n     * Topic Name\n     */ \n    topicName: string;\n\n    /**\n     * Topic Description\n     */ \n    description: string;\n\n    /**\n     * Topic activities\n     */ \n    activities: ActivityDTO[]; \n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TopicDTO.html":{"url":"classes/TopicDTO.html","title":"class - TopicDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TopicDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/dto/topic.dto.ts\n        \n\n            \n                Description\n            \n            \n                TopicDTO\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                activities\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                topicName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Topic id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/topic.dto.ts:13\n                            \n                        \n\n                \n                    \n                        Topic id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Activity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Topic activities'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/topic.dto.ts:31\n                            \n                        \n\n                \n                    \n                        Topic activities\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Topic Description'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/topic.dto.ts:25\n                            \n                        \n\n                \n                    \n                        Topic Description\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            topicName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Topic Name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/topic.dto.ts:19\n                            \n                        \n\n                \n                    \n                        Topic Name\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ObjectId } from 'mongodb';\nimport { Activity } from '../interfaces/activity.interface';\n\n/**\n * TopicDTO\n */\nexport class TopicDTO {\n    /**\n     * Topic id\n     */\n    @ApiProperty({description: 'Topic id'})\n    _id: ObjectId;\n\n    /**\n     * Topic Name\n     */ \n    @ApiProperty({description: 'Topic Name'})\n    readonly topicName: string;\n\n    /**\n     * Topic Description\n     */ \n    @ApiProperty({description: 'Topic Description'})\n    readonly description: string;\n\n    /**\n     * Topic activities\n     */ \n    @ApiProperty({description: 'Topic activities'})\n    activities: Activity[]; \n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UniversitiesController.html":{"url":"controllers/UniversitiesController.html","title":"controller - UniversitiesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UniversitiesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/universities/universities.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                universities\n            \n\n            \n                Description\n            \n            \n                Universities Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNode\n                            \n                            \n                                    Async\n                                deleteNode\n                            \n                            \n                                    Async\n                                editNode\n                            \n                            \n                                    Async\n                                getNode\n                            \n                            \n                                    Async\n                                getNodes\n                            \n                            \n                                    Async\n                                getNodesPatentID\n                            \n                            \n                                    Async\n                                getTeachersInfo\n                            \n                            \n                                    Async\n                                getTree\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNode(res, createNodeDTO: CreateNodeDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/add')@ApiOkResponse({description: 'Node has been submitted successfully!'})\n                \n            \n\n            \n                \n                    Defined in src/universities/universities.controller.ts:127\n                \n            \n\n\n            \n                \n                    Submit a node\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createNodeDTO\n                                    \n                                                CreateNodeDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteNode(res, id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/delete')@ApiQuery({name: 'id', type: String})@ApiBadRequestResponse({description: 'Invalid id!'})@ApiOkResponse({description: 'Node has been deleted!'})\n                \n            \n\n            \n                \n                    Defined in src/universities/universities.controller.ts:178\n                \n            \n\n\n            \n                \n                    Delete a node using id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editNode(res, id, createNodeDTO: CreateNodeDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/edit')@ApiQuery({name: 'id', type: String})@ApiBadRequestResponse({description: 'Invalid id!'})@ApiOkResponse({description: 'Node has been successfully updated!'})\n                \n            \n\n            \n                \n                    Defined in src/universities/universities.controller.ts:149\n                \n            \n\n\n            \n                \n                    Edit a node\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createNodeDTO\n                                    \n                                                CreateNodeDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNode(res, id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOkResponse({description: 'The node has been successfully returned.'})@ApiBadRequestResponse({description: 'Invalid id!'})@ApiParam({name: 'id', type: String})\n                \n            \n\n            \n                \n                    Defined in src/universities/universities.controller.ts:95\n                \n            \n\n\n            \n                \n                    Fetch a particular node using id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNodes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodes(res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/universities')@ApiOkResponse({description: 'The universities list has been successfully returned.'})\n                \n            \n\n            \n                \n                    Defined in src/universities/universities.controller.ts:64\n                \n            \n\n\n            \n                \n                    Fetch all universities\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNodesPatentID\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodesPatentID(res, id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('nodes/:id')@ApiOkResponse({description: 'The nodes has been successfully returned by parent id'})@ApiBadRequestResponse({description: 'Invalid id!'})@ApiParam({name: 'id', type: String})\n                \n            \n\n            \n                \n                    Defined in src/universities/universities.controller.ts:112\n                \n            \n\n\n            \n                \n                    Fetch nodes using patent ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTeachersInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTeachersInfo(res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/teachers')@ApiOkResponse({description: 'The teachers list has been successfully returned.'})\n                \n            \n\n            \n                \n                    Defined in src/universities/universities.controller.ts:78\n                \n            \n\n\n            \n                \n                    Fetch all teachers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTree\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTree(res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/tree')@ApiOkResponse({description: 'The tree of universities list has been successfully returned.'})\n                \n            \n\n            \n                \n                    Defined in src/universities/universities.controller.ts:50\n                \n            \n\n\n            \n                \n                    Fetch all tree of universities\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, \n  UseGuards, \n  Get, \n  Res, \n  Param, \n  Post, \n  Body, \n  Put, \n  Query, \n  Delete, \n  NotFoundException, \n  HttpStatus } from '@nestjs/common';\nimport { ApiTags, \n  ApiBearerAuth, \n  ApiUnauthorizedResponse, \n  ApiOkResponse, \n  ApiForbiddenResponse, \n  ApiNotFoundResponse, \n  ApiBadRequestResponse, \n  ApiParam, \n  ApiQuery } from '@nestjs/swagger';\nimport { JwtAuthGuard } from 'src/auth/jwt-auth.guard';\nimport { ValidateObjectId } from 'src/pipes/validate-object-id.pipes';\nimport { UniversitiesService } from './universities.service';\nimport { CreateNodeDTO } from './dto/create-node.dto';\nimport { UsersService} from '../users/users.service'; \nimport { ObjectId } from 'mongodb';\n\n/**\n * Universities Controller\n */\n@UseGuards(JwtAuthGuard)\n@Controller('universities')\n@ApiTags('Universities')\n@ApiBearerAuth()\n@ApiUnauthorizedResponse({description: 'Access Token is not valid or has expired'})\n@ApiForbiddenResponse({description: 'Forbidden.'})\n@ApiNotFoundResponse({description: 'Node doesn\\'t exist.'})\nexport class UniversitiesController {\n  /**@ignore */\n  constructor(private universitiesService: UniversitiesService,\n                  private usersService: UsersService ) { }  \n    \n    /**\n     * Fetch all tree of universities\n     * @param res \n     */\n    @Get('/tree')\n    @ApiOkResponse({description: 'The tree of universities list has been successfully returned.'})\n  async getTree(@Res() res) {      \n    const tree = await this.universitiesService.getTree();\n    if (!tree) {\n      throw new NotFoundException('Universities doesn\\'t exist!');\n    }\n    return res.status(HttpStatus.OK).json(tree);\n  }\n\n    /**\n     * Fetch all universities\n     * @param res \n     */\n    @Get('/universities')\n    @ApiOkResponse({description: 'The universities list has been successfully returned.'})\n    async getNodes(@Res() res) {\n      const Universities = await this.universitiesService.getNodes(null);\n      if (!Universities) {\n        throw new NotFoundException('Universities doesn\\'t exist!');\n      }\n      return res.status(HttpStatus.OK).json(Universities);\n    }\n\n    /**\n     * Fetch all teachers\n     * @param res \n     */\n    @Get('/teachers')\n    @ApiOkResponse({description: 'The teachers list has been successfully returned.'})\n    async getTeachersInfo(@Res() res) {\n      const teachers = await this.universitiesService.getTeachersInfo();\n      if (!teachers) {\n        throw new NotFoundException('Teachers doesn\\'t exist!');\n      }\n      return res.status(HttpStatus.OK).json(teachers);\n    }\n       \n    /**\n     * Fetch a particular node using id\n     * @param res \n     * @param id \n     */\n    @Get('/:id')\n    @ApiOkResponse({description: 'The node has been successfully returned.'})    \n    @ApiBadRequestResponse({description: 'Invalid id!'})\n    @ApiParam({ name: 'id', type: String })\n    async getNode(@Res() res, @Param('id', new ValidateObjectId()) id) {\n      const node = await this.universitiesService.getNode(new ObjectId(id));\n      if (!node) {\n        throw new NotFoundException('Node doesn\\'t exist!');\n      }\n      return res.status(HttpStatus.OK).json(node);\n    }\n    \n    /**\n     * Fetch nodes using patent ID\n     * @param res \n     * @param id \n     */\n    @Get('nodes/:id')\n    @ApiOkResponse({description: 'The nodes has been successfully returned by parent id'})\n    @ApiBadRequestResponse({description: 'Invalid id!'})\n    @ApiParam({name: 'id', type: String })\n    async getNodesPatentID(@Res() res, @Param('id', new ValidateObjectId()) id) {\n      const nodes = await this.universitiesService.getNodes(new ObjectId(id));\n      if (!nodes) {\n        throw new NotFoundException('nodes doesn\\'t exist!');\n      }\n      return res.status(HttpStatus.OK).json(nodes);\n    }\n\n    /**\n     * Submit a node\n     * @param res \n     * @param createNodeDTO \n     */\n    @Post('/add') \n    @ApiOkResponse({description: 'Node has been submitted successfully!'})\n    async addNode(@Res() res, @Body() createNodeDTO: CreateNodeDTO) { \n      createNodeDTO.createdDate = new Date;\n      const newNode = await this.universitiesService.addNode(createNodeDTO);\n      if (!newNode) {\n        throw new NotFoundException('newNode doesn\\'t exist!');\n      }\n      return res.status(HttpStatus.OK).json({\n        message: 'Node has been submitted successfully!',\n        node: newNode,\n      });\n    }   \n\n    /**\n     * Edit a node\n     * @param res \n     * @param id \n     * @param createNodeDTO \n     */\n    @Put('/edit')\n    @ApiQuery({name: 'id', type: String}) \n    @ApiBadRequestResponse({description: 'Invalid id!'})\n    @ApiOkResponse({description: 'Node has been successfully updated!'})\n    async editNode(\n      @Res() res,\n      @Query('id', new ValidateObjectId()) id,\n      @Body() createNodeDTO: CreateNodeDTO,\n    ) {\n      if (id != createNodeDTO._id) {\n        throw new NotFoundException('Incorrect node id');\n      }\n      const editedNode= \n        await this.universitiesService.editNode(\n          new ObjectId(id), createNodeDTO);\n      if (!editedNode) {\n        throw new NotFoundException('Node doesn\\'t exist!');\n      }\n      return res.status(HttpStatus.OK).json({\n        message: 'Node has been successfully updated!',\n        node: editedNode,\n      });\n    }\n    \n    /**\n     * Delete a node using id\n     * @param res \n     * @param id \n     */\n    @Delete('/delete')\n    @ApiQuery({name: 'id', type: String})\n    @ApiBadRequestResponse({description: 'Invalid id!'})\n    @ApiOkResponse({description: 'Node has been deleted!'})\n    async deleteNode(@Res() res, @Query('id', new ValidateObjectId()) id) {\n      const deletedNode = \n        await this.universitiesService.deleteNode(new ObjectId(id));\n      if (!deletedNode) {\n        throw new NotFoundException('Node doesn\\'t exist!');\n      }\n      return res.status(HttpStatus.OK).json({\n        message: 'Node has been deleted!',\n        node: deletedNode,\n      });\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UniversitiesModule.html":{"url":"modules/UniversitiesModule.html","title":"module - UniversitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    UniversitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UniversitiesModule\n\n\n\ncluster_UniversitiesModule_imports\n\n\n\ncluster_UniversitiesModule_exports\n\n\n\ncluster_UniversitiesModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nUniversitiesModule\n\nUniversitiesModule\n\nUniversitiesModule -->\n\nUsersModule->UniversitiesModule\n\n\n\n\n\nUniversitiesService \n\nUniversitiesService \n\nUniversitiesService  -->\n\nUniversitiesModule->UniversitiesService \n\n\n\n\n\nUniversitiesService\n\nUniversitiesService\n\nUniversitiesModule -->\n\nUniversitiesService->UniversitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/universities/universities.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UniversitiesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UniversitiesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UniversitiesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UniversitiesController } from './universities.controller';\nimport { UniversitiesService } from './universities.service';\nimport { NodeSchema } from './schemas/node.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {UsersModule} from '../users/users.module';\n\n@Module({\n  imports: [  \n    MongooseModule.forFeature([{ name: 'Node', schema: NodeSchema }]),\n    UsersModule],\n  controllers: [UniversitiesController],\n  providers: [UniversitiesService],\n  exports: [UniversitiesService]\n})\nexport class UniversitiesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UniversitiesService.html":{"url":"injectables/UniversitiesService.html","title":"injectable - UniversitiesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UniversitiesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/universities/universities.service.ts\n        \n\n            \n                Description\n            \n            \n                Universities Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNode\n                            \n                            \n                                    Async\n                                deleteNode\n                            \n                            \n                                    Async\n                                editNode\n                            \n                            \n                                getDepartments\n                            \n                            \n                                getInstitutions\n                            \n                            \n                                    Async\n                                getNode\n                            \n                            \n                                    Async\n                                getNodes\n                            \n                            \n                                    Async\n                                getTeacherNode\n                            \n                            \n                                getTeachers\n                            \n                            \n                                    Async\n                                getTeachersInfo\n                            \n                            \n                                    Async\n                                getTree\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNode(createNodeDTO: CreateNodeDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/universities/universities.service.ts:168\n                \n            \n\n\n            \n                \n                    Add new Node\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createNodeDTO\n                                    \n                                                CreateNodeDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteNode(id: ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/universities/universities.service.ts:202\n                \n            \n\n\n            \n                \n                    Delete Node by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editNode(id: ObjectId, createNodeDTO: CreateNodeDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/universities/universities.service.ts:182\n                \n            \n\n\n            \n                \n                    Edit Node by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createNodeDTO\n                                    \n                                                CreateNodeDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDepartments\n                        \n                        \n                    \n                \n            \n            \n                \ngetDepartments(id: ObjectId, allNodes: Node[], allUsers: User[])\n                \n            \n\n\n            \n                \n                    Defined in src/universities/universities.service.ts:130\n                \n            \n\n\n            \n                \n                    get Departments\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Institute id\n\n                                    \n                                \n                                \n                                    allNodes\n                                    \n                                                Node[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        all nodes\n\n                                    \n                                \n                                \n                                    allUsers\n                                    \n                                                User[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        all nodes\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInstitutions\n                        \n                        \n                    \n                \n            \n            \n                \ngetInstitutions(id: ObjectId, allNodes: Node[], allUsers: User[])\n                \n            \n\n\n            \n                \n                    Defined in src/universities/universities.service.ts:112\n                \n            \n\n\n            \n                \n                    get Institutions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        universiry id\n\n                                    \n                                \n                                \n                                    allNodes\n                                    \n                                                Node[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        all nodes\n\n                                    \n                                \n                                \n                                    allUsers\n                                    \n                                                User[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        all users\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNode(id: ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/universities/universities.service.ts:37\n                \n            \n\n\n            \n                \n                    Get Node by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNodes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodes(id: ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/universities/universities.service.ts:26\n                \n            \n\n\n            \n                \n                    Get Nodes by parentNode id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTeacherNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTeacherNode(id: ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/universities/universities.service.ts:80\n                \n            \n\n\n            \n                \n                    Get nodes by teacher Id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeachers\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeachers(teachers: ObjectId[], allUsers: User[])\n                \n            \n\n\n            \n                \n                    Defined in src/universities/universities.service.ts:147\n                \n            \n\n\n            \n                \n                    get Teachers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teachers\n                                    \n                                            ObjectId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    allUsers\n                                    \n                                                User[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTeachersInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTeachersInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/universities/universities.service.ts:47\n                \n            \n\n\n            \n                \n                    Get informations about all teachers\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTree\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTree()\n                \n            \n\n\n            \n                \n                    Defined in src/universities/universities.service.ts:90\n                \n            \n\n\n            \n                \n                    Get all tree of all nodes\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Node } from './interfaces/node.interface';\nimport { User } from '../users/interfaces/user.interface';\nimport { ObjectId } from 'mongodb';\nimport { CreateNodeDTO } from './dto/create-node.dto';\nimport { UsersService } from 'src/users/users.service';\n\n/**\n * Universities Service\n */\n@Injectable()\nexport class UniversitiesService {\n \n  /**\n     * @ignore\n     * @param nodeModel \n     */\n  constructor( @InjectModel('Node') private readonly nodeModel: Model, private usersService: UsersService ) { }\n    \n  /**\n     * Get Nodes by parentNode id\n     * @param id \n     */\n  async getNodes(id: ObjectId) : Promise {\n    const nodes = await this.nodeModel\n      .find({\"parentNode\" : id})\n      .exec();\n    return nodes;\n  }\n\n  /**\n     * Get Node by id\n     * @param id \n     */\n  async getNode(id: ObjectId): Promise { \n    const node = await this.nodeModel\n      .findOne(id)\n      .exec(); \n    return node;\n  }\n\n  /**\n     * Get informations about all teachers\n     */\n  async getTeachersInfo(): Promise {\n    const allUsers = await this.usersService.getUsers();\n    const allNodes = await this.nodeModel\n      .find({}) \n      .exec();\n    const nodes = allNodes.filter(x=>x.teachers.length > 0);\n    const teachersInfo =[];\n    nodes.map(department => {\n      const institute = \n            allNodes.filter(x=>\n              department.parentNode && x._id.equals(department.parentNode))[0];\n      if(institute){    \n        const university = \n            allNodes.filter(x=>\n              institute.parentNode && x._id.equals(institute.parentNode))[0];\n        if(university){\n          department.teachers.map(async teacher =>{\n            const user = await allUsers.filter(x=>x._id.equals(teacher))[0];\n            if(user){ \n              teachersInfo.push( {\n                \"teacher\" : { \"id\" : teacher, \"firstName\": user.firstName, \"lastName\": user.lastName},\n                \"university\" : {\"id\": university._id , \"name\":university.nodeName},  \n                \"institute\" : {\"id\": institute._id , \"name\":institute.nodeName},\n                \"department\" : {\"id\": department._id , \"name\":department.nodeName},\n                \"courses\" : 0\n              }\n              )}})}}});\n    return teachersInfo;\n  }\n\n  /**\n     * Get nodes by teacher Id\n     */\n  async getTeacherNode(id: ObjectId): Promise {\n    const allNodes = await this.nodeModel\n      .find({}) \n      .exec();\n    return allNodes.filter(x=>x.teachers.includes(id));      \n  }\n\n  /**\n     * Get all tree of all nodes\n     */\n  async getTree() : Promise {\n    const allUsers = await this.usersService.getUsers();\n    const allNodes = await this.nodeModel\n      .find({}) \n      .exec();\n    const nodes = allNodes.filter(x=>x.parentNode === null);\n    const tree =[];\n    nodes.map(element => \n      tree.push( {\n        \"id\" : element._id,\n        \"name\" : element.nodeName,  \n        \"institutions\" : this.getInstitutions(element._id,allNodes,allUsers)                    \n      }));\n    return tree\n  }\n\n  /**\n     * get Institutions\n     * @param id universiry id\n     * @param allNodes all nodes\n     * @param allUsers all users\n     */\n  getInstitutions(id: ObjectId, allNodes: Node[],allUsers: User[]) {\n    const nodes = allNodes.filter(x=>x.parentNode && x.parentNode.equals(id));\n    const tree =[];\n    (nodes).map(node=>{\n      tree.push( {\n        \"id\" : node._id,\n        \"name\" : node.nodeName,\n        \"departments\": this.getDepartments(node[\"id\"], allNodes, allUsers)                              \n      })});      \n    return tree;\n  }\n  \n  /**\n     * get Departments\n     * @param id Institute id\n     * @param allNodes all nodes\n     * @param allUsers all nodes\n     */\n  getDepartments(id: ObjectId, allNodes: Node[], allUsers: User[]) {\n    const nodes = allNodes.filter(x=>x.parentNode && x.parentNode.equals(id));\n    const tree =[];\n    (nodes).map(node=>{\n      tree.push( {\n        \"id\" : node._id,\n        \"name\" : node.nodeName ,\n        \"teachers\" : this.getTeachers(node.teachers, allUsers)                     \n      })});  \n    return tree;\n  }\n  \n  /**\n     * get Teachers\n     * @param teachers \n     * @param allUsers \n     */\n  getTeachers(teachers: ObjectId[], allUsers: User[]) {\n    if(teachers.length == 0 )\n      return [];\n    const tree =[];\n    (teachers).map(teacher=>{      \n      const user = allUsers.filter(x=>x._id.equals(teacher))[0];\n      if(user){\n        tree.push( {\n          \"id\" : teacher,\n          \"name\" : user.lastName + \" \" + user.firstName,\n          \"email\" : user.email\n        })}          \n    }); \n    return tree;\n  }\n\n\n  /**\n     * Add new Node\n     * @param createNodeDTO \n     */\n  async addNode(createNodeDTO: CreateNodeDTO): Promise {\n    createNodeDTO._id = new ObjectId(); \n    if(!createNodeDTO.parentNode){\n      createNodeDTO.parentNode = null;\n    }\n    const newNode = await new this.nodeModel(createNodeDTO);\n    return newNode.save();\n  }\n\n  /**\n     * Edit Node by id\n     * @param id \n     * @param createNodeDTO \n     */\n  async editNode(id: ObjectId, createNodeDTO: CreateNodeDTO) : Promise {\n    const oldNode = await this.getNode(id);\n    if(!createNodeDTO.parentNode){\n      createNodeDTO.parentNode = oldNode.parentNode;\n    }\n    if(!createNodeDTO.teachers){\n      createNodeDTO.teachers = oldNode.teachers;\n    }\n    if(!createNodeDTO.mentors){\n      createNodeDTO.mentors = oldNode.mentors;\n    }\n    const editedNode = await this.nodeModel\n      .findByIdAndUpdate(id, createNodeDTO, { new: true });\n    return editedNode;\n  }\n\n  /**\n     * Delete Node by id\n     * @param id \n     */\n  async deleteNode(id: ObjectId): Promise {\n    const deletedNode = await this.nodeModel\n      .findByIdAndRemove(id);\n    return deletedNode;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/interfaces/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                User mongoose Document\n\n            \n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        confirmedEmail\n                                \n                                \n                                        contactPhone\n                                \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        interests\n                                \n                                \n                                        lastName\n                                \n                                \n                                        password\n                                \n                                \n                                        role\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmedEmail\n                                    \n                                \n                                \n                                    \n                                        confirmedEmail:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is confirmed Email\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contactPhone\n                                    \n                                \n                                \n                                    \n                                        contactPhone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User contactPhone\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User email\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User firstName\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interests\n                                    \n                                \n                                \n                                    \n                                        interests:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User interests\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User lastName\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User password\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User role\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User title\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ObjectId } from 'mongodb';\nimport { Document } from 'mongoose';\n\n/**\n * User mongoose Document\n */\nexport interface User extends Document {\n    /**\n     * User id\n     */\n    readonly _id: ObjectId;\n    /**\n     * User firstName\n     */\n    readonly firstName: string;\n    /**\n     * User lastName\n     */\n    readonly lastName: string;\n    /**\n     * User email\n     */\n    readonly email: string;\n    /**\n     * Is confirmed Email\n     */\n    confirmedEmail: boolean;\n    /**\n     * User password\n     */\n    readonly password: string;\n    /**\n     * User contactPhone\n     */\n    readonly contactPhone: string;\n    /**\n     * User title\n     */\n    readonly title: string;\n    /**\n     * User interests\n     */\n    readonly interests: string;\n    /**\n     * User role\n     */\n    readonly role: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDTO.html":{"url":"classes/UserLoginDTO.html","title":"class - UserLoginDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/userilogin.dto.ts\n        \n\n            \n                Description\n            \n            \n                UserLoginDTO\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({example: 'adminadmin4'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/userilogin.dto.ts:20\n                            \n                        \n\n                \n                    \n                        User password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@ApiProperty({example: 'admin@admin.com'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/userilogin.dto.ts:13\n                            \n                        \n\n                \n                    \n                        User email\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsEmail, IsNotEmpty } from 'class-validator';\n \n/**\n * UserLoginDTO\n */\nexport class UserLoginDTO {\n    /**\n     * User email\n     */\n    @IsEmail()\n    @ApiProperty({example:'admin@admin.com'})\n    username: string;\n\n    /**\n     * User password\n     */\n    @IsNotEmpty()\n    @ApiProperty({example:'adminadmin4'})\n    password: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n            \n                Description\n            \n            \n                Users Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                editUser\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser(res, createUserDTO: CreateUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/add')@ApiForbiddenResponse({description: 'User with this email already exists'})@ApiOkResponse({description: 'New user profile'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:63\n                \n            \n\n\n            \n                \n                    Submit a user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createUserDTO\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(res, userID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/delete')@ApiNotFoundResponse({description: 'User doesn't exist!'})@ApiBadRequestResponse({description: 'Invalid id!'})@ApiOkResponse({description: 'Deleted user profile'})@ApiQuery({name: 'userID', type: String})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:118\n                \n            \n\n\n            \n                \n                    Delete a user using ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(res, userID, createUserDTO: CreateUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/edit')@ApiQuery({name: 'userID', type: String})@ApiForbiddenResponse({description: 'User with this new email already exists'})@ApiBadRequestResponse({description: 'Invalid id!'})@ApiOkResponse({description: 'Updated user profile'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:83\n                \n            \n\n\n            \n                \n                    Edit a user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userID\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createUserDTO\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(res, userID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':userID')@ApiOkResponse({description: 'The user has been successfully returned.'})@ApiForbiddenResponse({description: 'Forbidden.'})@ApiNotFoundResponse({description: 'User doesn't exist.'})@ApiBadRequestResponse({description: 'Invalid id!'})@ApiParam({name: 'userID', type: String})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:47\n                \n            \n\n\n            \n                \n                    Fetch a particular user using ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers(res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/users')@ApiOkResponse({description: 'The users list has been successfully returned.'})@ApiForbiddenResponse({description: 'Forbidden.'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:31\n                \n            \n\n\n            \n                \n                    Fetch all users\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Res, HttpStatus, Param, NotFoundException, Post, Body, Put, Query, Delete ,UseGuards} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDTO } from './dto/create-user.dto';\nimport { ValidateObjectId } from '../pipes/validate-object-id.pipes';\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\nimport { ApiTags, ApiOkResponse, ApiForbiddenResponse, ApiBearerAuth, ApiParam, ApiQuery, ApiNotFoundResponse, ApiBadRequestResponse, ApiUnauthorizedResponse } from '@nestjs/swagger';\nimport { ObjectId } from 'mongodb';\n\n/**\n * Users Controller\n */\n@UseGuards(JwtAuthGuard)\n@Controller('users')\n@ApiTags('Users')\n@ApiBearerAuth()\n@ApiUnauthorizedResponse({description: 'Access Token is not valid or has expired'})\nexport class UsersController{\n  /**\n   * @ignore\n   * @param usersService \n   */\n  constructor(private usersService: UsersService) { }  \n    \n    /**\n     * Fetch all users\n     * @param res \n     */\n    @Get('/users')\n    @ApiOkResponse({description: 'The users list has been successfully returned.'})\n    @ApiForbiddenResponse({description: 'Forbidden.'})\n  async getUsers(@Res() res) {\n    const users = await this.usersService.getUsers();\n    return res.status(HttpStatus.OK).json(users);\n  }\n    \n    /**\n     * Fetch a particular user using ID\n     * @param res \n     * @param userID \n     */\n    @Get(':userID')\n    @ApiOkResponse({description: 'The user has been successfully returned.'})\n    @ApiForbiddenResponse({description: 'Forbidden.'})\n    @ApiNotFoundResponse({description: 'User doesn\\'t exist.'})\n    @ApiBadRequestResponse({description:'Invalid id!'})\n    @ApiParam({name: 'userID', type: String})\n    async getUser(@Res() res, @Param('userID', new ValidateObjectId()) userID) {\n      const user = await this.usersService.getUser(new ObjectId(userID));\n      if (!user) {\n        throw new NotFoundException('User doesn\\'t exist!');\n      }\n      return res.status(HttpStatus.OK).json(user);\n    }\n    \n    /**\n     * Submit a user\n     * @param res \n     * @param createUserDTO \n     */    \n    @Post('/add')\n    @ApiForbiddenResponse({description: 'User with this email already exists'})\n    @ApiOkResponse({description: 'New user profile'})\n    async addUser(@Res() res, @Body() createUserDTO: CreateUserDTO) {\n      await this.usersService.checkEmail(createUserDTO.email); \n      const newUser = await this.usersService.addUser(createUserDTO);\n      return res.status(HttpStatus.OK).json({\n        message: 'User has been submitted successfully!',\n        user: newUser,\n      });\n    }   \n\n    /**\n     * Edit a user\n     * @param res \n     * @param userID \n     * @param createUserDTO \n     */\n    @Put('/edit')\n    @ApiQuery({ name: 'userID', type: String })\n    @ApiForbiddenResponse({description: 'User with this new email already exists'})\n    @ApiBadRequestResponse({description: 'Invalid id!'})\n    @ApiOkResponse({description: 'Updated user profile'})\n    async editUser(\n      @Res() res,\n      @Query('userID', new ValidateObjectId()) userID,\n      @Body() createUserDTO: CreateUserDTO,\n    ) {\n      if (userID != createUserDTO._id) {\n        throw new NotFoundException('Incorrect user ID');\n      }\n      const user = await this.usersService.getUser(new ObjectId(userID));\n      if (user && user.email != createUserDTO.email) {\n        await this.usersService.checkEmail(createUserDTO.email);\n      }\n      const editedUser = \n            await this.usersService.editUser(\n              new ObjectId(userID), createUserDTO\n            );\n      if (!editedUser) {\n        throw new NotFoundException('User doesn\\'t exist!');\n      }\n      return res.status(HttpStatus.OK).json({\n        message: 'User has been successfully updated',\n        user: editedUser,\n      });\n    }\n    \n    /**\n     * Delete a user using ID\n     * @param res \n     * @param userID \n     */\n    @Delete('/delete')\n    @ApiNotFoundResponse({description: 'User doesn\\'t exist!'})\n    @ApiBadRequestResponse({description: 'Invalid id!'})\n    @ApiOkResponse({description: 'Deleted user profile'})\n    @ApiQuery({name: 'userID', type: String})\n    async deleteUser(@Res() res, @Query('userID', new ValidateObjectId()) userID) {\n      const deletedUser = \n        await this.usersService.deleteUser(new ObjectId(userID));\n      if (!deletedUser) {\n        throw new NotFoundException('User doesn\\'t exist!');\n      }\n      return res.status(HttpStatus.OK).json({\n        message: 'User has been deleted!',\n        user: deletedUser,\n      });\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserSchema } from './schemas/user.schema';\n\n@Module({\n  imports: [  \n    MongooseModule.forFeature([{ name: 'User', schema: UserSchema }]),],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n            \n                Description\n            \n            \n                Users Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                            \n                                    Async\n                                checkEmail\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                editUser\n                            \n                            \n                                    Async\n                                findUserByEmail\n                            \n                            \n                                    Async\n                                getTeachers\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser(createUserDTO: CreateUserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:57\n                \n            \n\n\n            \n                \n                    Add user to users table\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createUserDTO\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new user DTO\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:97\n                \n            \n\n\n            \n                \n                    Checking an address for its existence in the users table\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        email address\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:87\n                \n            \n\n\n            \n                \n                    Delete user from users table\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(id: ObjectId, createUserDTO: CreateUserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:70\n                \n            \n\n\n            \n                \n                    Edit user data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User id\n\n                                    \n                                \n                                \n                                    createUserDTO\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new user DTO\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findUserByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:40\n                \n            \n\n\n            \n                \n                    Find user by email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user email\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTeachers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTeachers()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:48\n                \n            \n\n\n            \n                \n                    Find all Teachers\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userID: ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:29\n                \n            \n\n\n            \n                \n                    Get user by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:20\n                \n            \n\n\n            \n                \n                    Get all users\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ForbiddenException } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User } from './interfaces/user.interface';\nimport { CreateUserDTO } from './dto/create-user.dto';\nimport { ObjectId } from 'mongodb';\n\n/**\n * Users Service\n */\n@Injectable()\nexport class UsersService {  \n  \n  /** @ignore */\n  constructor(@InjectModel('User') private readonly userModel: Model) { }\n \n  /**\n   * Get all users\n   */\n  async getUsers(): Promise {\n    const users = await this.userModel.find().exec();\n    return users;\n  }\n\n  /**\n   * Get user by ID\n   * @param {ObjectId} userID \n   */\n  async getUser(userID : ObjectId ): Promise { \n    const user = await this.userModel\n      .findOne(userID)\n      .exec(); \n    return user;\n  }\n  \n  /**\n   * Find user by email\n   * @param {string} email user email\n   */\n  async findUserByEmail(email: string): Promise { \n    const user = await this.userModel.findOne({\"email\" : email}).exec(); \n    return user;\n  }\n\n  /**\n   * Find all Teachers\n   */\n  async getTeachers(): Promise { \n    const user = await this.userModel.find({\"role\" : /^[a,t]/}).exec(); \n    return user;\n  }\n\n  /**\n   * Add user to users table\n   * @param createUserDTO new user DTO\n   */\n  async addUser(createUserDTO: CreateUserDTO): Promise {\n    createUserDTO._id = new ObjectId();\n    // eslint-disable-next-line\n    createUserDTO.password =  await require('bcrypt').hash(createUserDTO.password, 10);\n    const newUser = await new this.userModel(createUserDTO);\n    return newUser.save();\n  }\n  \n  /**\n   * Edit user data\n   * @param id User id\n   * @param createUserDTO new user DTO\n   */\n  async editUser(id: ObjectId, createUserDTO: CreateUserDTO): Promise {\n    if(!createUserDTO.password || createUserDTO.password.length == 0){\n      createUserDTO.password = (await this.getUser(id)).password;\n    }    \n    if(createUserDTO.password.length != 60){\n      // eslint-disable-next-line\n        createUserDTO.password =  await require('bcrypt').hash(createUserDTO.password, 10);\n    }\n    const editedUser = await this.userModel\n      .findByIdAndUpdate(id, createUserDTO, { new: true });\n    return editedUser;\n  }\n  \n  /**\n   * Delete user from users table\n   * @param id User id\n   */\n  async deleteUser(id: ObjectId): Promise {\n    const deletedUser = await this.userModel\n      .findByIdAndRemove(id);\n    return deletedUser;\n  }\n\n  /**\n   * Checking an address for its existence in the users table\n   * @param email email address\n   */\n  async checkEmail(email: string): Promise {\n    const user = await this.findUserByEmail(email);\n    if (user) {\n      throw new ForbiddenException('User with this email already exists');\n    }\n    return user;\n  }\n}  \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateObjectId.html":{"url":"injectables/ValidateObjectId.html","title":"injectable - ValidateObjectId","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateObjectId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pipes/validate-object-id.pipes.ts\n        \n\n            \n                Description\n            \n            \n                Validate mongoose ObjectId\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/pipes/validate-object-id.pipes.ts:14\n                \n            \n\n\n            \n                \n                    Get isValid ObjectId\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport * as mongoose from 'mongoose';\n\n/**\n * Validate mongoose ObjectId\n */\n@Injectable()\nexport class ValidateObjectId implements PipeTransform {\n  /**\n   * Get isValid ObjectId\n   * @param value \n   * @param metadata \n   */\n  async transform(value: string) {\n    const isValid = mongoose.Types.ObjectId.isValid(value);\n    if (!isValid) {\n      throw new BadRequestException('Invalid ID!');\n    }\n    return value;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controler.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            url\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/courses/courses.controller.ts\n            \n            controller\n            CoursesController\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/courses/courses.service.ts\n            \n            injectable\n            CoursesService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/courses/dto/activity.dto.ts\n            \n            class\n            ActivityDTO\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/courses/dto/create-course.dto.ts\n            \n            class\n            CreateCourseDTO\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/courses/dto/topic.dto.ts\n            \n            class\n            TopicDTO\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/courses/interfaces/activity.interface.ts\n            \n            interface\n            Activity\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/courses/interfaces/course.interface.ts\n            \n            interface\n            Course\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/courses/interfaces/topic.interface.ts\n            \n            interface\n            Topic\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/courses/schemas/course.schema.ts\n            \n            variable\n            CourseSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/invite-user/dto/invite-user.dto.ts\n            \n            class\n            InviteUserDTO\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/invite-user/invite-user.controller.ts\n            \n            controller\n            InviteUserController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/invite-user/invite-user.service.ts\n            \n            injectable\n            InviteUserService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/mailer-edu4u/mailer-edu4u.service.ts\n            \n            injectable\n            MailerEdu4uService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/pipes/validate-object-id.pipes.ts\n            \n            injectable\n            ValidateObjectId\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/teachers/teachers.controller.ts\n            \n            controller\n            TeachersController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/teachers/teachers.service.ts\n            \n            injectable\n            TeachersService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/universities/dto/create-node.dto.ts\n            \n            class\n            CreateNodeDTO\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/universities/interfaces/node.interface.ts\n            \n            interface\n            Node\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/universities/schemas/node.schema.ts\n            \n            variable\n            NodeSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/universities/universities.controller.ts\n            \n            controller\n            UniversitiesController\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/universities/universities.service.ts\n            \n            injectable\n            UniversitiesService\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDTO\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/users/dto/userilogin.dto.ts\n            \n            class\n            UserLoginDTO\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                100 %\n                (9/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^1.5.1\n        \n            @nestjs/cli : ^7.0.0\n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/jwt : ^7.1.0\n        \n            @nestjs/mongoose : ^7.0.2\n        \n            @nestjs/passport : ^7.1.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/swagger : ^4.5.12\n        \n            @nestjsx/crud : ^4.6.2\n        \n            @types/mongoose : ^5.7.36\n        \n            @types/node : ^13.9.1\n        \n            bcrypt : ^5.0.0\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.2\n        \n            dotenv : ^8.2.0\n        \n            fastify-swagger : ^3.3.0\n        \n            handlebars : ^4.7.6\n        \n            jwt-decode : ^3.0.0-beta.2\n        \n            migrate-mongoose : ^4.0.0\n        \n            mjml : ^4.6.3\n        \n            mongodb : ^3.5.9\n        \n            mongoose : ^5.10.0\n        \n            nodemailer : ^6.4.11\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            swagger-ui-express : ^4.1.4\n        \n            ts-node : ^8.6.2\n        \n            typeorm : ^0.2.25\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Bootstrap\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodDatabase migrations\n# run all unapplied database migrations\n$ migrate-mongo up\n\n# undo the last applied database migration\n$ migrate-mongo down\n\n# print the changelog of the database\n$ migrate-mongo statusTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covAPI documentation\nhttp://localhost:3001/api/  \nBackend documentation\n# Compodoc documentation\n$ npm run compodocSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoursesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InviteUserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailerEdu4uModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeachersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UniversitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_exports\n\n\n\ncluster_CoursesModule_providers\n\n\n\ncluster_InviteUserModule\n\n\n\ncluster_InviteUserModule_providers\n\n\n\ncluster_MailerEdu4uModule\n\n\n\ncluster_MailerEdu4uModule_exports\n\n\n\ncluster_MailerEdu4uModule_providers\n\n\n\ncluster_TeachersModule\n\n\n\ncluster_TeachersModule_providers\n\n\n\ncluster_UniversitiesModule\n\n\n\ncluster_UniversitiesModule_exports\n\n\n\ncluster_UniversitiesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nInviteUserModule\n\nInviteUserModule\n\nInviteUserModule -->\n\nAuthModule->InviteUserModule\n\n\n\n\n\nTeachersModule\n\nTeachersModule\n\nTeachersModule -->\n\nAuthModule->TeachersModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nInviteUserModule -->\n\nCoursesModule->InviteUserModule\n\n\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nCoursesService \n\nCoursesService \n\nCoursesService  -->\n\nCoursesModule->CoursesService \n\n\n\nAppModule -->\n\nInviteUserModule->AppModule\n\n\n\n\n\nMailerEdu4uModule\n\nMailerEdu4uModule\n\nInviteUserModule -->\n\nMailerEdu4uModule->InviteUserModule\n\n\n\nAppModule -->\n\nMailerEdu4uModule->AppModule\n\n\n\n\n\nMailerEdu4uService \n\nMailerEdu4uService \n\nMailerEdu4uService  -->\n\nMailerEdu4uModule->MailerEdu4uService \n\n\n\nAppModule -->\n\nTeachersModule->AppModule\n\n\n\n\n\nUniversitiesModule\n\nUniversitiesModule\n\nCoursesModule -->\n\nUniversitiesModule->CoursesModule\n\n\n\nInviteUserModule -->\n\nUniversitiesModule->InviteUserModule\n\n\n\nAppModule -->\n\nUniversitiesModule->AppModule\n\n\n\n\n\nUniversitiesService \n\nUniversitiesService \n\nUniversitiesService  -->\n\nUniversitiesModule->UniversitiesService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nCoursesModule -->\n\nUsersModule->CoursesModule\n\n\n\nInviteUserModule -->\n\nUsersModule->InviteUserModule\n\n\n\nTeachersModule -->\n\nUsersModule->TeachersModule\n\n\n\nUniversitiesModule -->\n\nUsersModule->UniversitiesModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCoursesService\n\nCoursesService\n\nCoursesModule -->\n\nCoursesService->CoursesModule\n\n\n\n\n\nInviteUserService\n\nInviteUserService\n\nInviteUserModule -->\n\nInviteUserService->InviteUserModule\n\n\n\n\n\nMailerEdu4uService\n\nMailerEdu4uService\n\nMailerEdu4uModule -->\n\nMailerEdu4uService->MailerEdu4uModule\n\n\n\n\n\nTeachersService\n\nTeachersService\n\nTeachersModule -->\n\nTeachersService->TeachersModule\n\n\n\n\n\nUniversitiesService\n\nUniversitiesService\n\nUniversitiesModule -->\n\nUniversitiesService->UniversitiesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CourseSchema   (src/.../course.schema.ts)\n                        \n                        \n                            NodeSchema   (src/.../node.schema.ts)\n                        \n                        \n                            url   (src/.../app.module.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/courses/schemas/course.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CourseSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n  _id: ObjectId,\n  courseName: String,\n  courseDescription: String,\n  parentDepartment: ObjectId,\n  teacherOwner: ObjectId,\n  teacherName: String,\n  hoursNumber: Number,\n  lecturesNumber: Number,\n  seminarsNumber: Number,\n  practicesNumber: Number,\n  laboratoryWorksNumber: Number,\n  selfEducationHours: Number,\n  controlWorksNumber: Number,\n  consultationsNumber: Number,\n  worksNumber: Number,\n  students: Array,\n  mentors: Array,\n  createdDate: Date,\n  createdDUser: ObjectId,\n  inviteKey: ObjectId,\n  topics: Array\n})\n                        \n                    \n\n                \n                    \n                        Course mongoose Schema\n\n                    \n                \n\n            \n        \n\n    src/universities/schemas/node.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NodeSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n  _id: ObjectId,\n  nodeName: String,\n  parentNode: ObjectId,\n  teachers: Array,\n  mentors: Array,\n  createdDate: Date,\n  createdDUser: String,\n})\n                        \n                    \n\n                \n                    \n                        Node mongoose Schema\n\n                    \n                \n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : process.env.DB_URI || \"mongodb+srv://alex:admin@cluster0.jczgn.mongodb.net/edu4u?retryWrites=true&w=majority\"\n                        \n                    \n\n                \n                    \n                        DataBase url\n\n                    \n                \n\n            \n        \n\n    src/users/schemas/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n  _id: ObjectId,\n  firstName: String,\n  lastName: String,\n  email: String,\n  confirmedEmail: Boolean,\n  password: String,\n  contactPhone: String,\n  title: String,\n  interests: String,\n  role: String,\n})\n                        \n                    \n\n                \n                    \n                        User mongoose Schema\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
