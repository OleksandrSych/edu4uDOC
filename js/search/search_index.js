var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.133,1,2.253]],["body/controllers/AppController.html",[0,1.758,1,2.729,2,1.02,3,0.173,4,0.148,5,0.148,6,2.402,7,0.375,8,3.455,9,0.343,10,1.124,11,1.894,12,4.086,13,4.426,14,5.545,15,4.689,16,2.841,17,2.011,18,0.026,19,2.841,20,1.79,21,1.102,22,2.841,23,4.086,24,1.021,25,2.841,26,4.689,27,1.44,28,0.815,29,1.44,30,6.202,31,1.44,32,2.841,33,4.067,34,2.841,35,0.018,36,3.087,37,2.841,38,2.841,39,2.113,40,2.098,41,3.04,42,3.455,43,2.841,44,0.408,45,2.841,46,2.841,47,4.086,48,4.786,49,4.786,50,2.841,51,2.841,52,4.086,53,2.841,54,5.545,55,0.379,56,2.841,57,1.582,58,1.725,59,2.098,60,1.459,61,1.582,62,1.589,63,1.725,64,1.582,65,0.375,66,2.402,67,1.582,68,1.806,69,2.113,70,1.351,71,2.402,72,1.725,73,2.841,74,1.725,75,1.725,76,2.481,77,1.725,78,1.725,79,1.02,80,2.841,81,1.607,82,1.725,83,1.351,84,1.351,85,2.113,86,2.402,87,2.841,88,0.173,89,0.077,90,0.835,91,1.17,92,2.841,93,2.841,94,2.841,95,4.047,96,2.402,97,2.113,98,3.455,99,2.402,100,2.841,101,2.113,102,1.372,103,2.841,104,2.841,105,2.841,106,2.841,107,1.725,108,2.841,109,2.841,110,1.725,111,2.841,112,2.841,113,2.113,114,2.841,115,0.015,116,0.011]],["title/modules/AppModule.html",[117,0.868,118,2.253]],["body/modules/AppModule.html",[1,3.548,2,1.681,3,0.211,4,0.18,5,0.18,18,0.026,21,0.788,35,0.013,55,0.41,65,0.455,88,0.211,89,0.093,115,0.017,116,0.013,117,1.367,118,4.579,119,1.326,120,1.326,121,1.525,122,1.525,123,1.326,124,2.069,125,1.525,126,2.917,127,2.917,128,3.154,129,3.73,130,3.73,131,3.42,132,3.73,133,3.42,134,2.715,135,2.069,136,1.525,137,1.525,138,2.566,139,3.548,140,2.404,141,2.566,142,2.304,143,3.45,144,3.45,145,2.304,146,1.641,147,2.917,148,3.45,149,3.45,150,3.482,151,2.566,152,3.45,153,3.45,154,2.095,155,2.095,156,3.45,157,2.095,158,1.921,159,2.917,160,3.45,161,2.566,162,3.482,163,2.917,164,2.917,165,3.45,166,3.45,167,3.45,168,3.45,169,3.45,170,2.917,171,3.45,172,2.917,173,3.45,174,3.45,175,3.45]],["title/modules/AuthModule.html",[117,0.868,128,1.732]],["body/modules/AuthModule.html",[3,0.244,4,0.209,5,0.209,18,0.026,35,0.015,55,0.398,65,0.528,67,2.226,68,3.011,88,0.244,89,0.108,115,0.019,116,0.015,117,1.471,119,1.537,120,1.537,121,1.768,122,1.768,123,1.537,124,2.527,125,2.527,128,3.515,134,2.83,135,2.282,136,1.768,137,1.768,140,2.651,176,3.382,177,3.999,178,3.382,179,3.382,180,3.888,181,3.888,182,3.999,183,3.382,184,3.999,185,5.162,186,3.999,187,3.999,188,2.975,189,3.999,190,3.999,191,3.999,192,3.382,193,3.382,194,3.999,195,3.999,196,3.999,197,3.999]],["title/injectables/AuthService.html",[68,1.491,198,0.568]],["body/injectables/AuthService.html",[3,0.192,4,0.164,5,0.164,7,0.667,9,0.379,10,1.208,11,1.867,13,4.631,15,3.712,18,0.026,20,1.694,21,1.126,24,0.987,27,1.392,28,0.787,29,1.392,31,1.507,35,0.019,36,3.049,39,2.338,40,1.614,41,2.338,42,2.657,44,0.63,55,0.309,62,1.507,65,0.415,68,1.94,81,1.699,82,1.908,88,0.192,89,0.085,90,1.291,91,1.294,101,4.074,102,1.474,115,0.016,116,0.012,170,3.712,172,5.047,188,2.338,198,0.739,199,1.128,200,2.657,201,2.444,202,4.39,203,4.39,204,3.142,205,4.39,206,3.142,207,4.39,208,5.476,209,4.39,210,4.39,211,1.251,212,3.142,213,2.932,214,2.004,215,2.666,216,5.059,217,2.057,218,1.75,219,2.099,220,1.495,221,3.142,222,2.666,223,4.872,224,4.39,225,4.39,226,3.142,227,2.657,228,1.75,229,2.099,230,4.39,231,3.142,232,4.39,233,3.142,234,3.142,235,3.142]],["title/interfaces/Course.html",[236,1.732,237,1.605]],["body/interfaces/Course.html",[3,0.175,4,0.15,5,0.15,7,0.379,9,0.347,18,0.026,21,0.693,28,0.641,35,0.011,44,0.942,55,0.175,88,0.175,115,0.015,116,0.011,211,1.352,236,1.475,237,3.303,238,1.918,239,2.428,240,2.128,241,4.143,242,2.293,243,1.959,244,2.502,245,3.913,246,3.913,247,3.913,248,3.194,249,3.513,250,3.913,251,3.913,252,3.913,253,3.913,254,3.913,255,3.913,256,3.913,257,4.311,258,1.68,259,4.672,260,3.482,261,3.482,262,4.448,263,3.382,264,3.513,265,4.448,266,3.482,267,3.482,268,2.293,269,2.501,270,3.482,271,3.482,272,3.482,273,3.482,274,2.924,275,2.701]],["title/controllers/CoursesController.html",[0,1.133,276,2.253]],["body/controllers/CoursesController.html",[0,1.313,2,0.729,3,0.124,4,0.106,5,0.106,7,0.268,9,0.245,10,0.873,11,1.871,17,1.954,18,0.026,20,1.495,24,0.992,27,1.399,28,0.9,29,1.399,31,1.399,35,0.008,36,1.13,40,2.612,44,0.83,55,0.325,57,1.13,58,1.232,59,2.007,60,1.042,61,3.588,62,1.67,64,1.13,65,0.268,70,0.965,72,1.232,74,2.373,75,1.232,76,1.927,77,2.373,78,1.232,79,0.729,83,0.965,84,0.965,88,0.124,89,0.055,90,0.597,91,0.836,97,1.51,102,1.708,110,1.232,115,0.012,116,0.008,211,1.114,214,1.066,217,1.708,222,2.373,237,3.098,258,1.861,269,2.684,276,2.12,277,1.716,278,1.232,279,4.454,280,2.12,281,2.684,282,3.305,283,2.684,284,2.684,285,2.361,286,1.51,287,3.805,288,2.12,289,2.03,290,2.12,291,2.03,292,1.716,293,1.716,294,2.03,295,2.176,296,3.783,297,2.03,298,1.51,299,1.716,300,1.942,301,2.12,302,2.12,303,2.03,304,1.767,305,2.03,306,1.716,307,3.673,308,2.684,309,2.684,310,2.684,311,2.361,312,2.361,313,2.03,314,3.783,315,2.361,316,2.03,317,2.03,318,3.288,319,2.03,320,3.174,321,2.03,322,1.716,323,2.03,324,2.361,325,2.03,326,1.51,327,1.51,328,1.232,329,2.176,330,1.716,331,1.232,332,1.232,333,1.51,334,2.908,335,2.463,336,1.232,337,1.13,338,1.356,339,1.13,340,1.716,341,2.03,342,2.03,343,1.356,344,1.356,345,1.356,346,2.03,347,1.51,348,2.908,349,1.716,350,2.03,351,2.03,352,1.716,353,2.361,354,3.909,355,2.361,356,2.03,357,1.51,358,2.03,359,1.716,360,1.954,361,3.909,362,2.03,363,2.03,364,2.03,365,2.03,366,1.716,367,2.03,368,2.03,369,1.51,370,2.684,371,2.03,372,2.373,373,1.51,374,1.51,375,2.03,376,2.684,377,1.716,378,1.51,379,3.305,380,2.03,381,1.51,382,1.51,383,2.03,384,3.305,385,2.03,386,1.51]],["title/modules/CoursesModule.html",[117,0.868,129,2.049]],["body/modules/CoursesModule.html",[2,1.964,3,0.268,4,0.229,5,0.229,18,0.026,28,0.682,35,0.016,55,0.393,65,0.578,88,0.268,89,0.118,115,0.02,116,0.016,117,1.535,119,1.684,120,1.684,121,1.937,122,1.937,123,1.684,124,2.636,125,2.636,129,4.038,135,2.418,136,1.937,137,1.937,140,2.25,145,2.926,146,2.084,237,2.084,276,3.983,329,3.84,330,3.705,387,3.705,388,3.705,389,3.705,390,4.381,391,4.381,392,4.069,393,4.381,394,3.259,395,2.926]],["title/injectables/CoursesService.html",[198,0.568,329,1.878]],["body/injectables/CoursesService.html",[3,0.166,4,0.142,5,0.142,7,0.719,9,0.328,10,1.088,11,1.957,18,0.026,20,1.672,24,1.109,27,1.499,28,0.848,29,1.499,31,1.564,35,0.01,44,0.67,55,0.347,62,1.564,65,0.358,83,1.881,84,1.291,88,0.166,89,0.073,90,0.798,102,1.909,115,0.015,116,0.01,146,1.291,198,0.665,199,0.975,201,2.201,215,3.876,217,1.909,220,1.291,237,3.15,240,1.2,258,1.86,268,2.853,269,3.112,275,1.118,279,4.635,281,3.344,282,3.344,283,3.344,284,3.344,287,3.946,295,2.201,300,1.829,304,2.201,329,2.201,339,1.511,340,2.295,370,2.295,377,2.295,379,3.344,384,3.344,396,2.295,397,3.954,398,5.124,399,3.954,400,2.714,401,2.941,402,3.954,403,2.714,404,3.954,405,2.714,406,3.344,407,3.954,408,2.714,409,2.714,410,2.401,411,2.714,412,2.714,413,2.941,414,2.714,415,2.019,416,2.714,417,2.714,418,2.714,419,5.124,420,2.295,421,2.941,422,2.714,423,2.714,424,2.714,425,2.714,426,2.019,427,2.019,428,2.019]],["title/classes/CreateCourseDTO.html",[89,0.091,287,2.049]],["body/classes/CreateCourseDTO.html",[3,0.134,4,0.115,5,0.115,7,0.29,9,0.266,17,2.375,18,0.026,21,0.776,24,1.219,28,0.718,35,0.008,44,0.897,55,0.134,79,0.79,88,0.134,89,0.059,115,0.013,116,0.008,211,1.101,237,3.32,243,1.607,244,1.956,245,3.06,246,3.06,247,3.06,248,2.498,249,2.747,250,3.06,251,3.06,252,3.06,253,3.06,254,3.06,255,3.06,256,3.06,257,4.071,258,1.701,259,4.575,260,3.902,261,3.902,262,4.776,263,3.192,264,3.772,265,4.628,266,3.902,267,3.902,268,2.569,269,2.802,270,3.902,271,3.902,272,3.902,273,3.902,274,2.052,275,2.829,287,2.802,429,1.225,430,5.333,431,1.86,432,2.2,433,4.465,434,4.309,435,4.308,436,2.2,437,2.2,438,2.2,439,2.2,440,2.2,441,2.2,442,2.2,443,2.2,444,2.2,445,2.2,446,2.2,447,2.2,448,2.2,449,1.336,450,5.473,451,2.2,452,1.86]],["title/classes/CreateNodeDTO.html",[89,0.091,453,2.049]],["body/classes/CreateNodeDTO.html",[3,0.198,4,0.169,5,0.169,7,0.428,9,0.391,17,2.316,18,0.026,21,0.934,24,1.206,28,0.864,35,0.012,44,0.887,55,0.198,79,1.164,88,0.198,89,0.087,115,0.017,116,0.012,211,1.263,243,2.134,244,2.447,248,3.124,249,3.436,258,1.858,263,3.66,264,4.206,268,3.09,274,4.004,275,2.118,429,1.805,433,4.404,434,4.129,435,4.026,449,1.969,452,3.793,453,2.724,454,5.326,455,2.742,456,4.486,457,2.633,458,2.996,459,4.597,460,3.826,461,3.436,462,3.173,463,3.242,464,3.242,465,3.242,466,3.242,467,3.242,468,3.242,469,3.242]],["title/classes/CreateUserDTO.html",[89,0.091,470,1.732]],["body/classes/CreateUserDTO.html",[3,0.181,4,0.155,5,0.155,7,0.391,9,0.358,17,2.408,18,0.026,21,1.177,24,1.223,28,0.958,35,0.011,44,0.899,55,0.181,79,1.065,88,0.181,89,0.08,115,0.016,116,0.011,211,1.398,214,2.023,228,3.355,243,2.004,244,2.331,258,1.468,259,3.564,429,1.651,433,4.497,434,4.581,435,4.113,449,1.8,470,2.74,471,4.244,472,2.205,473,3.646,474,3.273,475,4.482,476,3.273,477,4.024,478,4.482,479,2.965,480,5.337,481,5.337,482,2.965,483,2.965,484,5.337,485,2.965,486,2.965,487,4.513,488,2.965,489,2.965,490,2.965,491,2.965]],["title/controllers/InviteUserController.html",[0,1.133,492,2.253]],["body/controllers/InviteUserController.html",[0,1.309,2,1.399,3,0.238,4,0.203,5,0.203,7,0.514,9,0.47,10,1.397,11,1.66,17,1.498,18,0.026,20,1.146,21,0.656,24,0.76,27,1.072,28,0.607,29,1.072,31,1.072,35,0.014,36,2.17,44,0.559,55,0.379,57,2.17,58,2.366,59,2.606,61,3.33,62,1.397,64,2.17,65,0.514,70,1.854,72,2.366,76,3.082,79,1.399,88,0.238,89,0.105,90,1.146,91,1.605,102,1.309,110,2.366,115,0.019,116,0.014,154,3.861,155,3.082,217,1.309,222,2.366,278,2.366,307,2.603,328,2.366,331,2.366,332,2.366,343,2.603,344,2.603,345,2.603,372,2.366,410,3.428,492,3.39,493,3.082,494,3.295,495,4.292,496,3.897,497,3.987,498,5.076,499,3.897,500,4.292,501,3.295,502,2.366,503,3.143,504,3.295,505,3.897,506,3.897,507,3.897,508,5.076,509,3.897,510,2.366,511,3.897]],["title/classes/InviteUserDTO.html",[89,0.091,497,2.049]],["body/classes/InviteUserDTO.html",[3,0.235,4,0.2,5,0.2,7,0.507,9,0.464,17,2.285,18,0.026,21,1.124,24,1.16,35,0.014,44,0.854,55,0.235,79,1.379,88,0.235,89,0.104,115,0.019,116,0.014,154,3.053,211,1.371,214,2.167,243,2.391,258,1.636,275,2.726,429,2.138,433,4.372,449,2.332,457,2.285,458,3.358,472,2.856,477,4.31,493,3.748,497,3.053,512,5.219,513,5.605,514,5.605,515,3.84,516,5.947,517,5.947,518,3.84,519,3.84,520,3.84]],["title/modules/InviteUserModule.html",[117,0.868,130,2.049]],["body/modules/InviteUserModule.html",[2,1.896,3,0.253,4,0.216,5,0.216,18,0.026,35,0.015,55,0.401,65,0.547,88,0.253,89,0.112,115,0.02,116,0.015,117,1.496,119,1.592,120,1.592,121,1.832,122,1.832,123,1.592,124,2.569,125,1.832,128,3.319,130,4.193,131,3.598,133,3.598,134,2.794,135,2.334,136,1.832,137,1.832,140,2.128,141,3.082,142,2.768,147,3.504,154,3.207,155,2.516,157,2.516,158,2.307,159,3.504,492,3.882,493,2.516,503,3.598,504,3.504,521,3.504,522,4.144,523,3.504,524,4.144,525,4.144,526,4.144]],["title/injectables/InviteUserService.html",[198,0.568,503,1.878]],["body/injectables/InviteUserService.html",[3,0.144,4,0.123,5,0.123,7,0.47,9,0.284,10,0.979,11,1.261,18,0.027,20,1.046,21,1.097,24,0.694,27,0.979,28,0.554,29,0.979,31,0.979,35,0.009,44,0.511,55,0.352,59,1.209,60,1.209,62,1.485,65,0.311,68,1.896,69,1.752,81,1.44,82,1.43,88,0.144,89,0.064,90,0.693,91,0.97,102,1.813,107,3.117,115,0.013,116,0.009,154,3.278,155,2.605,157,1.43,158,1.311,198,0.599,199,0.846,201,1.981,211,1.281,217,0.791,220,2.04,229,1.573,300,1.44,360,1.573,457,1.368,458,2.377,470,1.827,471,1.573,493,2.605,495,3.009,497,3.714,500,3.009,501,1.992,502,2.161,503,1.981,510,2.161,527,1.992,528,3.559,529,3.559,530,5.133,531,5.133,532,4.78,533,2.355,534,3.009,535,4.34,536,4.29,537,3.559,538,2.355,539,2.203,540,2.355,541,2.388,542,1.992,543,2.355,544,2.355,545,2.355,546,2.355,547,2.355,548,1.992,549,2.355,550,2.355,551,2.355,552,1.752,553,2.355,554,2.355,555,2.355,556,2.355,557,2.355,558,2.355,559,2.355,560,2.355,561,2.355,562,2.355,563,2.355,564,2.355,565,2.355,566,2.355,567,2.355,568,2.355,569,2.355,570,2.355,571,2.355,572,2.355,573,2.355,574,2.355,575,2.355,576,2.355,577,4.29,578,2.355,579,2.355,580,2.355,581,3.559,582,3.559,583,3.559,584,3.818,585,3.559,586,2.355,587,3.559,588,3.559,589,4.739,590,3.559,591,3.191,592,2.355,593,3.559,594,3.559,595,3.559,596,2.355,597,3.559,598,2.355,599,2.355,600,3.559,601,3.559,602,2.355,603,2.355,604,3.559,605,2.355,606,2.355,607,1.992,608,2.355,609,2.355,610,2.355,611,2.355,612,2.355,613,2.355,614,3.559,615,2.355,616,2.355,617,2.355,618,4.78,619,3.559,620,3.559,621,2.355,622,3.559,623,2.355,624,2.355,625,5.398,626,3.559,627,2.355,628,3.559,629,3.559,630,2.355]],["title/injectables/JwtAuthGuard.html",[70,1.605,198,0.568]],["body/injectables/JwtAuthGuard.html",[3,0.305,4,0.26,5,0.26,7,0.658,18,0.026,35,0.019,55,0.362,65,0.658,66,5.338,67,2.778,70,3.106,88,0.305,89,0.135,115,0.022,116,0.019,198,0.996,199,1.791,242,3.514,328,3.03,631,4.219,632,4.989]],["title/injectables/JwtStrategy.html",[180,2.049,198,0.568]],["body/injectables/JwtStrategy.html",[3,0.258,4,0.22,5,0.22,7,0.557,9,0.509,10,1.47,11,1.724,18,0.026,20,1.241,24,1.042,27,1.161,28,0.657,29,1.161,31,1.161,35,0.016,44,0.606,55,0.358,62,1.161,65,0.557,67,2.349,85,3.139,88,0.258,89,0.114,90,1.571,115,0.02,116,0.016,180,3.742,192,3.568,193,3.568,198,0.899,199,1.515,213,4.115,214,1.417,223,5.21,242,3.264,244,2.007,435,2.818,633,3.568,634,4.957,635,4.361,636,4.22,637,5.342,638,4.22,639,4.22,640,3.568,641,2.818,642,3.568,643,3.568,644,4.22,645,4.22,646,4.22,647,4.22,648,4.22,649,4.22]],["title/injectables/LocalStrategy.html",[181,2.049,198,0.568]],["body/injectables/LocalStrategy.html",[3,0.248,4,0.212,5,0.212,7,0.536,9,0.49,10,1.434,11,1.693,18,0.026,20,1.194,21,0.969,24,0.792,27,1.117,28,0.632,29,1.117,31,1.117,35,0.015,44,0.583,55,0.371,62,1.434,65,0.536,67,2.261,68,2.545,88,0.248,89,0.11,90,1.194,91,1.672,102,1.364,115,0.019,116,0.015,181,3.689,183,3.434,198,0.877,199,1.458,211,1.347,213,4.057,214,2.04,215,3.166,217,1.364,228,3.64,242,3.206,300,1.364,360,1.795,634,4.869,640,3.434,641,2.712,642,3.434,643,3.434,650,3.434,651,5.213,652,4.061,653,3.434,654,4.061,655,4.061,656,5.213,657,4.061]],["title/modules/MailerEdu4uModule.html",[117,0.868,131,1.878]],["body/modules/MailerEdu4uModule.html",[3,0.284,4,0.243,5,0.243,18,0.026,35,0.017,55,0.346,65,0.613,88,0.284,89,0.125,115,0.021,116,0.017,117,1.576,119,1.786,120,1.786,121,2.054,122,2.054,123,1.786,124,2.706,125,2.706,131,3.749,135,2.508,136,2.054,137,2.054,157,2.822,158,2.588,541,3.869,542,3.93,658,3.93,659,3.93,660,3.93,661,3.457,662,4.648]],["title/injectables/MailerEdu4uService.html",[198,0.568,541,1.878]],["body/injectables/MailerEdu4uService.html",[3,0.247,4,0.211,5,0.211,7,0.686,9,0.488,10,1.43,18,0.026,24,0.789,27,1.112,28,0.629,29,1.112,31,1.112,35,0.015,44,0.58,55,0.317,62,1.581,65,0.533,88,0.247,89,0.155,90,1.189,91,1.665,115,0.019,116,0.015,150,3.008,151,3.008,157,3.157,158,2.894,198,0.875,199,1.452,211,1.4,275,1.665,534,5.128,535,4.396,541,2.894,661,3.867,663,3.419,664,5.746,665,6.274,666,5.198,667,6.422,668,6.274,669,4.043,670,5.198,671,5.746,672,5.198,673,5.198,674,5.746,675,4.043,676,4.043,677,4.043,678,4.043]],["title/interfaces/Node.html",[236,1.732,457,1.296]],["body/interfaces/Node.html",[3,0.228,4,0.195,5,0.195,7,0.492,9,0.45,18,0.026,21,0.83,28,0.768,35,0.014,44,0.92,55,0.228,88,0.228,115,0.018,116,0.014,211,1.413,236,1.916,238,2.492,240,2.443,241,4.549,242,2.746,243,2.346,244,2.797,248,3.571,249,3.927,258,1.618,263,3.713,264,3.927,268,2.746,274,3.815,275,2.638,457,2.656,459,4.673,460,4.374,461,3.927,462,3.226,679,3.155]],["title/controllers/TeachersController.html",[0,1.133,680,2.253]],["body/controllers/TeachersController.html",[0,1.664,2,1.086,3,0.185,4,0.158,5,0.158,7,0.399,9,0.365,10,1.175,11,1.733,17,1.642,18,0.026,20,1.256,21,0.833,24,0.834,26,2.556,27,1.175,28,0.771,29,1.175,31,1.175,35,0.02,39,3.178,40,2.544,41,2.249,44,0.711,55,0.37,57,1.683,59,2.194,60,1.552,61,3.446,62,1.563,63,1.836,64,1.683,65,0.399,68,2.19,69,2.249,74,1.836,75,1.836,77,2.594,78,1.836,79,1.086,81,1.664,82,1.836,88,0.185,89,0.082,90,0.889,91,1.245,95,2.556,96,2.556,98,2.556,99,3.612,101,2.249,102,1.808,107,2.594,115,0.016,116,0.011,211,0.633,214,1.808,217,1.435,220,2.032,258,1.703,278,1.836,280,2.853,286,2.249,288,2.019,290,2.853,300,2.113,301,2.853,302,2.853,331,1.836,332,1.836,335,2.194,336,1.836,337,1.683,338,2.019,357,2.249,360,1.336,369,2.249,372,1.836,462,2.544,470,3.232,471,2.019,502,1.836,510,4.04,680,2.853,681,2.556,682,4.954,683,2.556,684,3.023,685,3.023,686,3.023,687,3.023,688,3.023,689,3.023,690,3.023,691,3.023,692,2.758,693,2.556,694,3.023,695,3.023,696,3.023,697,3.023,698,3.023,699,3.023,700,3.023,701,3.023,702,2.556,703,3.023,704,3.023,705,2.556,706,2.556,707,3.023,708,3.023,709,3.023]],["title/modules/TeachersModule.html",[117,0.868,132,2.049]],["body/modules/TeachersModule.html",[2,1.964,3,0.268,4,0.229,5,0.229,18,0.026,35,0.016,55,0.393,65,0.578,88,0.268,89,0.118,115,0.02,116,0.016,117,1.535,119,1.684,120,1.684,121,1.937,122,1.937,123,1.684,124,2.636,125,1.937,128,3.366,132,4.145,134,2.898,135,2.418,136,1.937,137,1.937,140,2.809,141,3.259,142,2.926,680,3.983,692,3.65,693,3.705,710,3.705,711,4.381,712,3.705,713,4.381,714,4.381]],["title/injectables/TeachersService.html",[198,0.568,692,1.878]],["body/injectables/TeachersService.html",[3,0.252,4,0.215,5,0.215,7,0.695,9,0.498,10,1.449,11,1.705,18,0.026,20,1.213,21,0.976,24,0.805,27,1.135,28,0.642,29,1.135,31,1.135,35,0.015,40,2.118,44,0.592,55,0.322,60,2.118,62,1.135,63,2.505,65,0.544,81,1.948,88,0.252,89,0.111,90,1.213,102,1.768,113,3.068,115,0.02,116,0.015,198,0.886,199,1.481,201,2.932,217,1.768,218,2.932,219,2.755,220,1.962,227,3.488,258,1.681,300,2.12,360,2.328,462,2.704,510,3.71,635,3.068,692,2.932,706,3.488,715,3.068,716,5.266,717,5.266,718,4.125,719,3.488,720,4.125,721,4.125,722,4.125]],["title/controllers/UniversitiesController.html",[0,1.133,723,2.253]],["body/controllers/UniversitiesController.html",[0,1.209,2,0.643,3,0.109,4,0.093,5,0.093,7,0.236,9,0.216,10,0.791,11,1.898,17,2.022,18,0.026,20,1.547,24,1.027,27,1.448,28,0.902,29,1.448,31,1.448,35,0.007,36,0.996,40,2.787,44,0.8,55,0.321,57,0.996,58,1.087,59,1.848,60,0.919,61,3.624,62,1.663,64,0.996,65,0.236,70,0.851,72,1.087,74,2.186,75,1.087,76,1.745,77,2.186,78,1.087,79,0.643,81,0.601,82,1.087,83,0.851,84,0.851,88,0.109,89,0.048,90,0.526,91,0.737,102,1.767,107,1.087,110,1.087,115,0.011,116,0.007,211,1.102,217,1.7,220,0.851,222,2.186,258,1.841,268,1.6,278,1.087,288,1.919,290,1.919,295,2.004,296,3.583,298,1.331,300,1.978,304,1.6,306,1.513,307,3.872,311,2.137,312,2.137,314,4.143,315,2.137,318,4.038,324,3.583,326,1.331,327,1.331,328,1.087,331,1.087,332,1.087,333,1.331,334,2.677,335,2.317,336,1.087,337,0.996,338,1.195,339,0.996,343,1.195,344,1.195,345,1.195,347,2.677,348,1.331,352,1.513,353,2.137,355,2.137,357,2.137,359,1.513,360,2.4,372,2.186,373,1.331,374,1.331,376,2.429,378,1.331,381,1.331,382,1.331,386,1.331,453,3.709,457,2.408,462,2.115,539,1.848,548,3.043,723,1.919,724,1.513,725,5.11,726,2.429,727,2.429,728,3.043,729,2.429,730,2.429,731,2.873,732,2.429,733,2.429,734,1.79,735,1.79,736,1.79,737,1.79,738,1.79,739,1.79,740,1.79,741,1.79,742,1.79,743,1.79,744,1.79,745,1.79,746,1.79,747,1.79,748,1.79,749,4.073,750,1.79,751,1.79,752,2.873,753,1.79,754,1.79,755,1.79,756,1.79,757,1.79,758,4.073,759,1.79,760,1.513,761,1.513,762,1.79,763,1.79,764,1.79,765,1.79,766,1.79,767,1.79,768,1.79,769,2.873,770,1.79,771,1.79,772,1.79,773,1.79,774,1.79,775,1.79,776,1.79,777,1.79,778,1.79,779,1.79,780,1.79,781,1.79,782,1.79,783,1.79,784,1.79,785,1.79,786,1.79,787,1.79,788,1.79,789,3.043,790,1.79,791,1.79,792,1.513,793,3.043,794,1.79,795,1.79,796,3.043,797,1.79]],["title/modules/UniversitiesModule.html",[117,0.868,133,1.878]],["body/modules/UniversitiesModule.html",[2,1.927,3,0.26,4,0.222,5,0.222,18,0.026,28,0.661,35,0.016,55,0.397,65,0.561,88,0.26,89,0.115,115,0.02,116,0.016,117,1.513,119,1.633,120,1.633,121,1.878,122,1.878,123,1.633,124,2.599,125,2.599,133,3.755,134,2.875,135,2.372,136,1.878,137,1.878,140,2.755,142,2.838,145,2.838,146,2.021,394,3.161,395,2.838,457,1.633,539,3.528,723,3.928,760,3.593,798,3.593,799,4.249,800,3.593,801,3.593,802,4.249,803,4.249,804,3.991,805,4.249]],["title/injectables/UniversitiesService.html",[198,0.568,539,1.732]],["body/injectables/UniversitiesService.html",[3,0.108,4,0.092,5,0.092,7,0.47,9,0.213,10,0.78,11,1.862,18,0.027,20,1.666,21,0.477,24,1.081,27,1.439,28,0.898,29,1.439,31,1.525,35,0.007,44,0.511,55,0.307,62,1.656,65,0.232,81,1.195,83,1.349,84,0.837,88,0.108,89,0.047,90,0.518,102,1.902,107,3.732,115,0.011,116,0.007,146,0.837,198,0.477,199,0.632,201,1.579,211,0.746,214,0.591,215,3.611,217,1.605,220,1.349,229,1.176,240,0.778,258,1.842,269,1.069,275,0.725,279,1.31,295,1.579,300,1.502,304,1.579,339,0.98,366,3.01,401,2.109,410,1.722,413,2.109,415,1.31,420,1.489,421,3.036,426,1.31,427,1.31,428,1.31,453,3.611,457,2.177,461,1.894,462,2.581,474,1.176,476,1.176,510,2.478,539,1.456,584,2.648,635,1.31,719,1.489,725,2.398,726,2.398,727,2.398,728,2.398,729,2.398,730,2.398,732,3.451,733,3.451,749,5.146,758,4.686,761,1.489,789,1.489,792,1.489,793,2.398,796,2.398,806,1.489,807,2.835,808,2.835,809,2.835,810,2.835,811,1.761,812,2.835,813,1.761,814,2.835,815,1.761,816,2.835,817,5.541,818,6.02,819,1.761,820,4.081,821,2.835,822,1.761,823,3.56,824,2.835,825,2.835,826,1.761,827,2.835,828,1.761,829,2.835,830,1.761,831,1.761,832,2.835,833,1.761,834,1.761,835,2.835,836,1.761,837,4.781,838,1.761,839,2.398,840,2.398,841,1.761,842,2.835,843,1.761,844,2.835,845,1.761,846,1.761,847,2.835,848,1.761,849,1.761,850,1.761,851,2.835,852,2.835,853,2.835,854,1.761,855,2.835,856,2.835,857,1.761,858,1.761,859,1.761,860,1.761,861,1.761,862,1.761,863,3.56,864,1.761,865,4.081,866,1.761,867,1.761,868,1.761,869,1.761,870,2.835,871,2.835,872,2.835,873,1.761,874,1.761,875,1.761,876,1.761,877,2.835,878,2.835,879,1.761,880,1.761,881,1.761,882,1.761,883,1.761,884,1.761,885,1.761,886,1.761,887,1.761,888,1.761,889,1.761]],["title/interfaces/User.html",[21,0.568,236,1.732]],["body/interfaces/User.html",[3,0.216,4,0.184,5,0.184,7,0.466,9,0.426,18,0.026,21,1.168,35,0.013,44,0.934,55,0.216,88,0.216,115,0.018,116,0.013,211,1.467,214,2.076,228,3.443,236,1.812,238,2.357,240,2.376,241,4.465,242,2.647,243,2.261,244,2.735,258,1.308,275,2.681,473,4.6,474,4.13,475,4.6,476,4.13,477,4.13,478,4.6,890,2.985]],["title/classes/UserLoginDTO.html",[33,2.253,89,0.091]],["body/classes/UserLoginDTO.html",[3,0.273,4,0.234,5,0.234,7,0.591,9,0.541,17,2.13,18,0.026,21,1.059,24,1.082,33,4.204,35,0.017,44,0.796,55,0.339,79,1.608,88,0.273,89,0.15,115,0.021,116,0.017,211,1.319,214,1.862,228,3.601,243,2.637,429,2.493,449,2.719,891,3.786,892,6.022,893,4.477,894,4.477,895,4.477,896,4.477,897,4.477,898,4.477,899,5.544,900,5.544,901,3.786,902,4.477,903,4.477]],["title/controllers/UsersController.html",[0,1.133,139,2.253]],["body/controllers/UsersController.html",[0,1.367,2,0.777,3,0.132,4,0.113,5,0.113,7,0.285,9,0.261,10,0.918,11,1.849,17,1.899,18,0.026,20,1.453,21,1.119,24,0.964,27,1.36,28,0.874,29,1.36,31,1.36,35,0.008,36,1.205,40,2.537,44,0.806,55,0.332,57,1.205,58,1.314,59,2.09,60,1.111,61,3.557,62,1.673,63,1.314,64,1.205,65,0.285,70,1.029,71,1.83,72,1.314,74,2.026,75,1.314,76,2.026,77,2.026,78,1.314,79,0.777,81,1.536,83,1.029,84,1.029,88,0.132,89,0.058,90,0.636,91,0.891,97,1.609,102,1.887,110,1.314,113,2.481,115,0.012,116,0.008,139,2.228,211,1.035,214,1.536,217,1.753,222,2.472,229,1.445,258,1.437,278,1.314,280,2.228,285,2.481,286,1.609,288,1.445,290,2.228,292,1.83,293,1.83,295,2.266,296,3.403,298,1.609,299,1.83,300,1.936,301,3.055,302,3.055,304,1.857,307,3.487,308,2.821,309,1.83,310,1.83,311,1.609,312,1.609,314,3.403,315,2.481,318,2.481,322,1.83,324,2.481,326,1.609,327,1.609,331,1.314,332,1.314,333,1.609,334,3.028,335,2.349,337,1.205,338,1.445,339,1.205,343,1.445,344,1.445,345,1.445,347,1.609,348,2.481,349,1.83,353,1.609,355,1.609,360,2.022,369,1.609,372,2.472,373,1.609,374,1.609,378,1.609,381,1.609,382,1.609,386,1.609,410,3.411,470,3.256,502,1.314,552,2.481,683,1.83,702,2.821,705,1.83,839,1.83,904,1.83,905,2.821,906,3.442,907,2.821,908,2.164,909,2.164,910,5.473,911,2.164,912,2.164,913,2.164,914,2.164,915,2.164,916,2.164,917,2.164,918,2.164,919,1.83,920,2.164,921,2.164,922,2.164,923,2.164,924,2.164,925,2.164,926,3.336,927,2.164,928,2.164,929,3.336,930,4.071,931,2.164,932,3.336,933,2.164,934,3.336,935,1.83,936,3.442,937,2.164,938,2.164,939,3.442,940,2.164]],["title/modules/UsersModule.html",[117,0.868,134,1.491]],["body/modules/UsersModule.html",[3,0.273,4,0.234,5,0.234,18,0.026,21,0.753,28,0.697,35,0.017,55,0.384,65,0.591,81,2.323,88,0.273,89,0.121,115,0.021,116,0.017,117,1.55,119,1.721,120,1.721,121,1.979,122,1.979,123,1.721,124,2.662,125,2.662,134,2.953,135,2.451,136,1.979,137,1.979,140,2.299,145,2.991,146,2.13,394,3.331,395,2.991,919,3.786,941,3.786,942,3.786,943,3.786,944,4.477,945,4.124,946,4.477]],["title/injectables/UsersService.html",[81,1.133,198,0.568]],["body/injectables/UsersService.html",[3,0.143,4,0.122,5,0.122,7,0.71,9,0.282,10,0.974,11,1.944,18,0.026,20,1.583,21,1.136,24,1.091,27,1.481,28,0.838,29,1.481,31,1.538,35,0.009,44,0.734,55,0.352,62,1.538,63,1.419,65,0.308,81,1.188,83,2.031,84,1.112,88,0.143,89,0.063,90,1.04,102,2.018,115,0.013,116,0.009,146,1.112,198,0.595,199,0.839,201,1.97,211,1.171,214,2.05,215,3.758,217,1.933,218,1.301,219,1.561,220,1.112,240,1.033,258,1.653,275,0.962,280,2.363,285,3.542,295,1.97,300,1.933,301,1.561,302,1.561,304,1.97,339,1.301,360,1.033,401,2.632,406,2.992,410,3.758,413,2.632,415,1.739,421,1.739,426,1.739,427,1.739,428,1.739,458,3.18,470,3.247,502,1.419,552,1.739,584,1.739,591,4.003,641,1.561,840,2.992,905,2.992,906,2.992,907,2.992,910,2.992,935,1.976,936,2.992,939,2.992,947,1.976,948,3.538,949,3.538,950,3.538,951,2.337,952,3.538,953,2.337,954,3.538,955,4.762,956,3.538,957,3.538,958,2.337,959,3.538,960,2.337,961,3.538,962,2.337,963,3.538,964,2.337,965,2.337,966,2.337,967,2.337,968,1.976,969,2.337,970,2.337,971,2.337,972,2.337,973,4.27,974,2.337,975,2.337,976,2.337,977,4.27,978,3.538,979,3.538,980,2.337,981,2.337,982,2.337,983,2.337,984,2.337,985,2.337,986,2.337,987,2.337,988,2.337]],["title/injectables/ValidateObjectId.html",[198,0.568,335,1.732]],["body/injectables/ValidateObjectId.html",[3,0.26,4,0.222,5,0.222,7,0.561,9,0.513,10,1.476,11,1.729,18,0.026,20,1.249,24,0.829,27,1.169,28,0.661,29,1.169,31,1.169,35,0.016,44,0.61,55,0.328,62,1.476,65,0.561,83,2.938,88,0.26,89,0.115,115,0.02,116,0.016,198,0.903,199,1.526,211,1.232,213,3.584,217,1.427,240,2.73,258,1.169,300,1.427,335,2.755,336,3.258,337,2.987,360,1.878,989,3.593,990,5.366,991,5.366,992,5.223,993,6.177,994,4.249,995,6.177,996,4.973,997,5.366,998,4.249,999,4.249,1000,4.249,1001,4.249]],["title/coverage.html",[1002,3.43]],["body/coverage.html",[0,2.05,1,2.257,5,0.176,6,2.858,18,0.026,21,0.569,33,2.257,35,0.013,44,0.485,68,1.494,70,1.608,81,1.135,89,0.16,115,0.017,116,0.013,123,1.299,138,2.514,139,2.257,155,2.803,158,1.882,162,2.514,180,2.052,181,2.052,198,1.108,200,2.858,218,1.882,236,2.699,237,1.608,239,2.858,276,2.257,277,2.858,287,2.052,300,1.135,328,2.052,329,1.882,335,1.736,336,2.052,337,1.882,392,2.514,396,2.858,430,2.858,431,2.858,453,2.052,454,2.858,455,2.858,457,1.299,470,1.736,471,2.257,472,3.434,492,2.257,493,3.192,494,2.858,497,2.052,503,1.882,512,2.858,527,2.858,539,1.736,541,1.882,589,5.933,591,2.514,631,2.858,633,2.858,650,2.858,661,2.514,663,2.858,679,2.858,680,2.257,681,2.858,692,1.882,715,3.434,723,2.257,724,2.858,804,2.514,806,2.858,890,2.858,891,2.858,904,2.858,945,2.514,947,2.858,989,2.858,1002,2.514,1003,2.858,1004,3.38,1005,3.38,1006,4.616,1007,5.914,1008,6.248,1009,3.38,1010,5.649,1011,5.914,1012,4.616,1013,4.616,1014,2.858,1015,2.858,1016,3.38,1017,5.257,1018,2.858,1019,3.38,1020,3.38,1021,4.616,1022,2.858,1023,3.38,1024,3.38]],["title/dependencies.html",[120,1.56,1025,2.815]],["body/dependencies.html",[18,0.026,35,0.015,65,0.541,67,2.281,79,1.471,84,1.949,85,3.9,86,3.465,89,0.141,115,0.019,116,0.015,120,1.575,146,1.949,150,3.048,151,3.048,188,3.048,218,2.281,240,2.318,457,1.575,641,3.862,653,3.465,901,3.465,968,3.465,992,3.465,1026,4.097,1027,4.097,1028,6.095,1029,4.097,1030,5.243,1031,4.097,1032,4.097,1033,5.243,1034,4.097,1035,4.097,1036,4.097,1037,4.097,1038,4.097,1039,4.097,1040,4.097,1041,4.097,1042,4.097,1043,4.097,1044,4.097,1045,4.097,1046,4.097,1047,4.097,1048,5.243,1049,4.097,1050,4.097,1051,4.097,1052,4.097,1053,3.465,1054,5.243,1055,4.097,1056,4.097,1057,4.097,1058,4.097,1059,4.097,1060,4.097,1061,4.097,1062,4.097,1063,4.097,1064,4.097,1065,4.097,1066,4.097,1067,4.097,1068,4.097,1069,4.097,1070,4.097,1071,4.097,1072,4.097,1073,4.097,1074,4.097]],["title/miscellaneous/functions.html",[1075,1.88,1076,3.433]],["body/miscellaneous/functions.html",[9,0.646,18,0.023,35,0.02,115,0.023,116,0.02,123,2.566,1015,4.527,1075,3.575,1076,4.527,1077,5.353]],["title/index.html",[9,0.34,1078,2.815,1079,2.815]],["body/index.html",[4,0.205,7,0.517,8,3.316,18,0.026,35,0.015,115,0.019,116,0.015,161,4.212,487,3.316,607,4.31,1002,2.918,1003,4.788,1053,4.788,1080,3.922,1081,3.922,1082,5.097,1083,3.922,1084,3.922,1085,3.922,1086,3.922,1087,3.922,1088,3.922,1089,3.922,1090,3.922,1091,3.922,1092,5.663,1093,3.922,1094,3.922,1095,3.922,1096,3.922,1097,6.575,1098,3.922,1099,3.922,1100,6.575,1101,3.922,1102,3.922,1103,3.922,1104,3.922,1105,3.922,1106,5.097,1107,3.922,1108,5.663,1109,3.922,1110,3.922,1111,3.922,1112,3.922,1113,3.922,1114,3.922,1115,3.922,1116,3.922,1117,3.922,1118,5.097,1119,5.097,1120,3.922,1121,3.922,1122,3.922,1123,3.922,1124,3.922,1125,3.922,1126,3.922,1127,5.097,1128,5.097,1129,3.922,1130,3.922,1131,3.922,1132,3.922,1133,3.922,1134,3.316,1135,3.922,1136,3.922,1137,3.922,1138,3.922,1139,3.922,1140,3.922,1141,3.922,1142,3.922,1143,3.922,1144,3.922,1145,3.922,1146,3.922,1147,3.922,1148,3.922,1149,3.922,1150,3.922,1151,3.922,1152,3.922]],["title/modules.html",[119,1.772]],["body/modules.html",[18,0.022,35,0.018,115,0.022,116,0.018,118,3.27,119,1.881,128,2.514,129,2.973,130,2.973,131,2.726,132,2.973,133,2.726,134,2.164,1134,5.801,1153,6.861,1154,6.861,1155,6.861]],["title/overview.html",[1156,3.898]],["body/overview.html",[2,1.227,18,0.026,35,0.013,68,2.77,81,2.104,115,0.017,116,0.013,117,0.88,118,4.54,119,1.313,120,1.313,121,1.511,122,1.511,123,1.313,124,1.511,125,1.511,126,2.89,127,2.89,128,3.458,129,3.719,130,4.066,131,3.489,132,3.927,133,3.6,134,2.891,135,2.056,136,1.511,137,1.511,176,2.89,178,2.89,179,2.89,180,3.211,181,3.211,199,1.227,238,2.283,329,3.489,387,2.89,388,2.89,389,2.89,429,1.903,503,2.944,521,2.89,523,2.89,539,3.218,541,3.489,658,2.89,659,2.89,660,2.89,692,2.944,710,2.89,712,2.89,798,2.89,800,2.89,801,2.89,941,2.89,942,2.89,943,2.89,1156,2.89,1157,3.418,1158,3.418,1159,3.418,1160,3.418,1161,3.418]],["title/miscellaneous/variables.html",[1075,1.88,1162,3.433]],["body/miscellaneous/variables.html",[9,0.485,18,0.025,21,0.676,35,0.015,115,0.019,116,0.015,138,2.988,161,2.988,162,4.261,163,3.396,164,3.396,211,1.455,214,1.349,218,3.189,219,2.683,228,2.236,237,1.91,240,2.532,244,2.724,245,2.988,246,2.988,247,2.988,248,3.143,250,2.988,251,2.988,252,2.988,253,2.988,254,2.988,255,2.988,256,2.988,257,2.988,259,4.413,263,3.143,274,3.478,300,1.923,392,3.851,395,3.826,457,1.543,459,2.988,460,2.988,461,2.683,462,2.062,473,2.988,474,2.683,475,2.988,476,2.683,477,2.683,478,2.988,715,2.988,804,3.851,945,3.851,996,5.294,1014,3.396,1018,3.396,1022,3.396,1075,2.683,1162,3.396,1163,4.017,1164,4.017,1165,4.017,1166,4.017,1167,4.017,1168,6.261,1169,5.728,1170,5.176]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":584,"title":{},"body":{"injectables/InviteUserService.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["0.1.13",{"_index":1064,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1044,"title":{},"body":{"dependencies.html":{}}}],["0.2.25",{"_index":1074,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1043,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1061,"title":{},"body":{"dependencies.html":{}}}],["0pt",{"_index":597,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["1.0.0",{"_index":1062,"title":{},"body":{"dependencies.html":{}}}],["1.5.1",{"_index":1026,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1008,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":979,"title":{},"body":{"injectables/UsersService.html":{}}}],["10/10",{"_index":1021,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":589,"title":{},"body":{"injectables/InviteUserService.html":{},"coverage.html":{}}}],["11",{"_index":1159,"title":{},"body":{"overview.html":{}}}],["11/11",{"_index":1020,"title":{},"body":{"coverage.html":{}}}],["13.9.1",{"_index":1040,"title":{},"body":{"dependencies.html":{}}}],["13px",{"_index":612,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["15/15",{"_index":1013,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":1011,"title":{},"body":{"coverage.html":{}}}],["201",{"_index":49,"title":{},"body":{"controllers/AppController.html":{}}}],["3",{"_index":1161,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":1051,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":1066,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":1049,"title":{},"body":{"dependencies.html":{}}}],["3.5.9",{"_index":1057,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1010,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":1054,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["4.5.12",{"_index":1034,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":1036,"title":{},"body":{"dependencies.html":{}}}],["4.6.3",{"_index":1056,"title":{},"body":{"dependencies.html":{}}}],["4.7.6",{"_index":1050,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1009,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1160,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":1041,"title":{},"body":{"dependencies.html":{}}}],["5.10.0",{"_index":1058,"title":{},"body":{"dependencies.html":{}}}],["5.7.36",{"_index":1038,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1006,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1158,"title":{},"body":{"overview.html":{}}}],["6.4.11",{"_index":1060,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":1068,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1023,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":986,"title":{},"body":{"injectables/UsersService.html":{}}}],["6h",{"_index":197,"title":{},"body":{"modules/AuthModule.html":{}}}],["7.0.0",{"_index":1028,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":1031,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":1030,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1012,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1157,"title":{},"body":{"overview.html":{}}}],["8.2.0",{"_index":1046,"title":{},"body":{"dependencies.html":{}}}],["8.6.2",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1017,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1019,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":613,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["_id",{"_index":244,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"injectables/JwtStrategy.html":{},"interfaces/Node.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["access_token",{"_index":101,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/TeachersController.html":{}}}],["add",{"_index":401,"title":{},"body":{"injectables/CoursesService.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["addcourse",{"_index":397,"title":{},"body":{"injectables/CoursesService.html":{}}}],["addcourse(createcoursedto",{"_index":399,"title":{},"body":{"injectables/CoursesService.html":{}}}],["addnode",{"_index":726,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["addnode(@res",{"_index":788,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["addnode(createnodedto",{"_index":810,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["addnode(res",{"_index":734,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["address",{"_index":955,"title":{},"body":{"injectables/UsersService.html":{}}}],["adduser",{"_index":280,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/TeachersController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["adduser(@res",{"_index":369,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/TeachersController.html":{},"controllers/UsersController.html":{}}}],["adduser(createuserdto",{"_index":950,"title":{},"body":{"injectables/UsersService.html":{}}}],["adduser(res",{"_index":286,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/TeachersController.html":{},"controllers/UsersController.html":{}}}],["adjust",{"_index":588,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["admin@admin.com",{"_index":897,"title":{},"body":{"classes/UserLoginDTO.html":{}}}],["adminadmin4",{"_index":894,"title":{},"body":{"classes/UserLoginDTO.html":{}}}],["allnodes",{"_index":817,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["allnodes,allusers",{"_index":869,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["allnodes.filter(x=>x._id",{"_index":844,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["allnodes.filter(x=>x.parentnode",{"_index":863,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["allnodes.filter(x=>x.teachers.length",{"_index":841,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["allusers",{"_index":818,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["allusers.filter(x=>x._id",{"_index":851,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["already",{"_index":301,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/TeachersController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["always",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["amazing",{"_index":1135,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1091,"title":{},"body":{"index.html":{}}}],["apibadrequestresponse",{"_index":333,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apibadrequestresponse({description:'invalid",{"_index":355,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apibearerauth",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"controllers/CoursesController.html":{},"controllers/InviteUserController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apiforbiddenresponse",{"_index":75,"title":{},"body":{"controllers/AppController.html":{},"controllers/CoursesController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apiforbiddenresponse({description",{"_index":96,"title":{},"body":{"controllers/AppController.html":{},"controllers/TeachersController.html":{}}}],["apiforbiddenresponse({description:'course",{"_index":375,"title":{},"body":{"controllers/CoursesController.html":{}}}],["apiforbiddenresponse({description:'forbidden",{"_index":348,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apiforbiddenresponse({description:'user",{"_index":702,"title":{},"body":{"controllers/TeachersController.html":{},"controllers/UsersController.html":{}}}],["apinotfoundresponse",{"_index":78,"title":{},"body":{"controllers/AppController.html":{},"controllers/CoursesController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apinotfoundresponse({description",{"_index":697,"title":{},"body":{"controllers/TeachersController.html":{}}}],["apinotfoundresponse({description:'course",{"_index":354,"title":{},"body":{"controllers/CoursesController.html":{}}}],["apinotfoundresponse({description:'node",{"_index":764,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["apinotfoundresponse({description:'user",{"_index":926,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiokresponse",{"_index":74,"title":{},"body":{"controllers/AppController.html":{},"controllers/CoursesController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apiokresponse({description",{"_index":95,"title":{},"body":{"controllers/AppController.html":{},"controllers/TeachersController.html":{}}}],["apiokresponse({description:'the",{"_index":347,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apiparam",{"_index":77,"title":{},"body":{"controllers/AppController.html":{},"controllers/CoursesController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":449,"title":{},"body":{"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/UserLoginDTO.html":{}}}],["apiproperty({description",{"_index":433,"title":{},"body":{"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"classes/InviteUserDTO.html":{}}}],["apiproperty({example:'admin@admin.com",{"_index":902,"title":{},"body":{"classes/UserLoginDTO.html":{}}}],["apiproperty({example:'adminadmin4",{"_index":903,"title":{},"body":{"classes/UserLoginDTO.html":{}}}],["apiquery",{"_index":334,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":331,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apitags('courses",{"_index":342,"title":{},"body":{"controllers/CoursesController.html":{}}}],["apitags('invite",{"_index":506,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["apitags('login",{"_index":87,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('teachers",{"_index":694,"title":{},"body":{"controllers/TeachersController.html":{}}}],["apitags('universities",{"_index":763,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["apitags('users",{"_index":922,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags,apiunauthorizedresponse",{"_index":73,"title":{},"body":{"controllers/AppController.html":{}}}],["apiunauthorizedresponse",{"_index":332,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["apiunauthorizedresponse({description",{"_index":98,"title":{},"body":{"controllers/AppController.html":{},"controllers/TeachersController.html":{}}}],["apiunauthorizedresponse({description:'access",{"_index":343,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/InviteUserController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["app",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["app.controler",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1088,"title":{},"body":{"index.html":{}}}],["applied",{"_index":1111,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":118,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":993,"title":{},"body":{"injectables/ValidateObjectId.html":{}}}],["array",{"_index":274,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"interfaces/Node.html":{},"miscellaneous/variables.html":{}}}],["async",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["auth",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["auth.guard",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"controllers/CoursesController.html":{},"controllers/InviteUserController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":631,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/InviteUserModule.html":{},"modules/TeachersModule.html":{}}}],["auth/auth.service",{"_index":69,"title":{},"body":{"controllers/AppController.html":{},"injectables/InviteUserService.html":{},"controllers/TeachersController.html":{}}}],["auth/jwt",{"_index":71,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["authguard",{"_index":66,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":632,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":128,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/InviteUserModule.html":{},"modules/TeachersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1145,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":68,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/InviteUserService.html":{},"injectables/LocalStrategy.html":{},"controllers/TeachersController.html":{},"coverage.html":{},"overview.html":{}}}],["authservice,private",{"_index":92,"title":{},"body":{"controllers/AppController.html":{}}}],["auto",{"_index":601,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["await",{"_index":102,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/LocalStrategy.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["backend",{"_index":1124,"title":{},"body":{"index.html":{}}}],["backers",{"_index":1136,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":998,"title":{},"body":{"injectables/ValidateObjectId.html":{}}}],["badrequestexception('invalid",{"_index":1001,"title":{},"body":{"injectables/ValidateObjectId.html":{}}}],["bcrypt",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TeachersService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bcrypt.compare('newuserpassword",{"_index":722,"title":{},"body":{"injectables/TeachersService.html":{}}}],["bcrypt.compare(pass",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(createuserdto.password",{"_index":978,"title":{},"body":{"injectables/UsersService.html":{}}}],["beta.2",{"_index":1052,"title":{},"body":{"dependencies.html":{}}}],["bicubic",{"_index":608,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["block",{"_index":611,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["body",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"controllers/CoursesController.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["bootstrap",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["border",{"_index":593,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["browse",{"_index":1155,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1153,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1083,"title":{},"body":{"index.html":{}}}],["catch",{"_index":678,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["changelog",{"_index":1115,"title":{},"body":{"index.html":{}}}],["checkemail",{"_index":948,"title":{},"body":{"injectables/UsersService.html":{}}}],["checkemail(email",{"_index":952,"title":{},"body":{"injectables/UsersService.html":{}}}],["checking",{"_index":954,"title":{},"body":{"injectables/UsersService.html":{}}}],["class",{"_index":89,"title":{"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/UserLoginDTO.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":429,"title":{},"body":{"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/UserLoginDTO.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_coursesmodule",{"_index":387,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule_exports",{"_index":388,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule_providers",{"_index":389,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_inviteusermodule",{"_index":521,"title":{},"body":{"modules/InviteUserModule.html":{},"overview.html":{}}}],["cluster_inviteusermodule_imports",{"_index":522,"title":{},"body":{"modules/InviteUserModule.html":{}}}],["cluster_inviteusermodule_providers",{"_index":523,"title":{},"body":{"modules/InviteUserModule.html":{},"overview.html":{}}}],["cluster_maileredu4umodule",{"_index":658,"title":{},"body":{"modules/MailerEdu4uModule.html":{},"overview.html":{}}}],["cluster_maileredu4umodule_exports",{"_index":659,"title":{},"body":{"modules/MailerEdu4uModule.html":{},"overview.html":{}}}],["cluster_maileredu4umodule_providers",{"_index":660,"title":{},"body":{"modules/MailerEdu4uModule.html":{},"overview.html":{}}}],["cluster_teachersmodule",{"_index":710,"title":{},"body":{"modules/TeachersModule.html":{},"overview.html":{}}}],["cluster_teachersmodule_imports",{"_index":711,"title":{},"body":{"modules/TeachersModule.html":{}}}],["cluster_teachersmodule_providers",{"_index":712,"title":{},"body":{"modules/TeachersModule.html":{},"overview.html":{}}}],["cluster_universitiesmodule",{"_index":798,"title":{},"body":{"modules/UniversitiesModule.html":{},"overview.html":{}}}],["cluster_universitiesmodule_exports",{"_index":800,"title":{},"body":{"modules/UniversitiesModule.html":{},"overview.html":{}}}],["cluster_universitiesmodule_imports",{"_index":799,"title":{},"body":{"modules/UniversitiesModule.html":{}}}],["cluster_universitiesmodule_providers",{"_index":801,"title":{},"body":{"modules/UniversitiesModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":941,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":942,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":943,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["collapse",{"_index":594,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["column",{"_index":623,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["compodoc",{"_index":1125,"title":{},"body":{"index.html":{}}}],["compodocsupport",{"_index":1126,"title":{},"body":{"index.html":{}}}],["const",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/LocalStrategy.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["constructor",{"_index":635,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/TeachersService.html":{},"injectables/UniversitiesService.html":{}}}],["constructor(@injectmodel('course",{"_index":416,"title":{},"body":{"injectables/CoursesService.html":{}}}],["constructor(@injectmodel('user",{"_index":970,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":91,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CoursesController.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["consultations",{"_index":260,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{}}}],["consultationsnumber",{"_index":245,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["contact",{"_index":480,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["contactphone",{"_index":473,"title":{},"body":{"classes/CreateUserDTO.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":261,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CoursesController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CoursesController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('courses",{"_index":341,"title":{},"body":{"controllers/CoursesController.html":{}}}],["controller('invite",{"_index":505,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["controller('teachers",{"_index":695,"title":{},"body":{"controllers/TeachersController.html":{}}}],["controller('universities",{"_index":762,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["controller('users",{"_index":921,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"controllers/InviteUserController.html":{},"modules/InviteUserModule.html":{},"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"controllers/UsersController.html":{},"overview.html":{}}}],["controlworksnumber",{"_index":246,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["course",{"_index":237,"title":{"interfaces/Course.html":{}},"body":{"interfaces/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["course.dto",{"_index":340,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{}}}],["course.dto.ts",{"_index":431,"title":{},"body":{"classes/CreateCourseDTO.html":{},"coverage.html":{}}}],["course.dto.ts:10",{"_index":432,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:16",{"_index":438,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:22",{"_index":444,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:28",{"_index":441,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:34",{"_index":443,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:40",{"_index":447,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:46",{"_index":445,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:52",{"_index":442,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:58",{"_index":446,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:64",{"_index":437,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:70",{"_index":436,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:76",{"_index":448,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:82",{"_index":439,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["course.dto.ts:88",{"_index":440,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["coursemodel",{"_index":417,"title":{},"body":{"injectables/CoursesService.html":{}}}],["coursename",{"_index":247,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["courses",{"_index":279,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"injectables/UniversitiesService.html":{}}}],["courses.controller",{"_index":391,"title":{},"body":{"modules/CoursesModule.html":{}}}],["courses.service",{"_index":330,"title":{},"body":{"controllers/CoursesController.html":{},"modules/CoursesModule.html":{}}}],["courses/courses.module",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["courseschema",{"_index":392,"title":{},"body":{"modules/CoursesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursescontroller",{"_index":276,"title":{"controllers/CoursesController.html":{}},"body":{"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"coverage.html":{}}}],["coursesmodule",{"_index":129,"title":{"modules/CoursesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"modules.html":{},"overview.html":{}}}],["coursesservice",{"_index":329,"title":{"injectables/CoursesService.html":{}},"body":{"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"coverage.html":{},"overview.html":{}}}],["coverage",{"_index":1002,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":456,"title":{},"body":{"classes/CreateNodeDTO.html":{}}}],["createcoursedto",{"_index":287,"title":{"classes/CreateCourseDTO.html":{}},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"coverage.html":{}}}],["createcoursedto._id",{"_index":377,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{}}}],["created",{"_index":264,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"interfaces/Node.html":{}}}],["createddate",{"_index":248,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"interfaces/Node.html":{},"miscellaneous/variables.html":{}}}],["createdduser",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createduser",{"_index":249,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"interfaces/Node.html":{}}}],["createnodedto",{"_index":453,"title":{"classes/CreateNodeDTO.html":{}},"body":{"classes/CreateNodeDTO.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"coverage.html":{}}}],["createnodedto._id",{"_index":792,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["createnodedto.mentors",{"_index":888,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["createnodedto.parentnode",{"_index":878,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["createnodedto.teachers",{"_index":885,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["createuserdto",{"_index":470,"title":{"classes/CreateUserDTO.html":{}},"body":{"classes/CreateUserDTO.html":{},"injectables/InviteUserService.html":{},"controllers/TeachersController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto._id",{"_index":935,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuserdto.email",{"_index":705,"title":{},"body":{"controllers/TeachersController.html":{},"controllers/UsersController.html":{}}}],["createuserdto.password",{"_index":977,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.password.length",{"_index":983,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.role",{"_index":707,"title":{},"body":{"controllers/TeachersController.html":{}}}],["credentials",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["data",{"_index":406,"title":{},"body":{"injectables/CoursesService.html":{},"injectables/UsersService.html":{}}}],["database",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":263,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"interfaces/Node.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decode",{"_index":86,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["decoration",{"_index":605,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["decorators",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"controllers/CoursesController.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaults",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["defined",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["delete",{"_index":295,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete('/delete",{"_index":382,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["delete('/delete')@apinotfoundresponse({description",{"_index":292,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UsersController.html":{}}}],["delete('/delete')@apiquery({name",{"_index":737,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["deletecourse",{"_index":281,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{}}}],["deletecourse(@res",{"_index":383,"title":{},"body":{"controllers/CoursesController.html":{}}}],["deletecourse(id",{"_index":402,"title":{},"body":{"injectables/CoursesService.html":{}}}],["deletecourse(res",{"_index":291,"title":{},"body":{"controllers/CoursesController.html":{}}}],["deleted",{"_index":386,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["deletedcourse",{"_index":384,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{}}}],["deletednode",{"_index":796,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["deleteduser",{"_index":939,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deletenode",{"_index":727,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["deletenode(@res",{"_index":795,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["deletenode(id",{"_index":812,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["deletenode(res",{"_index":736,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["deleteuser",{"_index":905,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteuser(@res",{"_index":938,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser(id",{"_index":957,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteuser(res",{"_index":909,"title":{},"body":{"controllers/UsersController.html":{}}}],["department",{"_index":269,"title":{},"body":{"interfaces/Course.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"injectables/UniversitiesService.html":{}}}],["department._id",{"_index":861,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["department.parentnode)[0",{"_index":845,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["department.teachers.map(async",{"_index":850,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["departmentiid",{"_index":320,"title":{},"body":{"controllers/CoursesController.html":{}}}],["departmentname",{"_index":536,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["departments",{"_index":366,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/UniversitiesService.html":{}}}],["dependencies",{"_index":120,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"index.html":{}}}],["description:'the",{"_index":353,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["development",{"_index":1099,"title":{},"body":{"index.html":{}}}],["display",{"_index":610,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["document",{"_index":241,"title":{},"body":{"interfaces/Course.html":{},"interfaces/Node.html":{},"interfaces/User.html":{}}}],["documentation",{"_index":1003,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doesn't",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/TeachersController.html":{}}}],["doesn\\'t",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"controllers/TeachersController.html":{}}}],["dotenv",{"_index":1045,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":1113,"title":{},"body":{"index.html":{}}}],["dto",{"_index":458,"title":{},"body":{"classes/CreateNodeDTO.html":{},"classes/InviteUserDTO.html":{},"injectables/InviteUserService.html":{},"injectables/UsersService.html":{}}}],["dto/create",{"_index":339,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/invite",{"_index":501,"title":{},"body":{"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{}}}],["e2e",{"_index":1120,"title":{},"body":{"index.html":{}}}],["edit",{"_index":304,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["editcourse",{"_index":282,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{}}}],["editcourse(id",{"_index":404,"title":{},"body":{"injectables/CoursesService.html":{}}}],["editcourse(res",{"_index":297,"title":{},"body":{"controllers/CoursesController.html":{}}}],["editedcourse",{"_index":379,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{}}}],["editednode",{"_index":793,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["editeduser",{"_index":936,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["editnode",{"_index":728,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["editnode(id",{"_index":814,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["editnode(res",{"_index":739,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["edituser",{"_index":906,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["edituser(id",{"_index":959,"title":{},"body":{"injectables/UsersService.html":{}}}],["edituser(res",{"_index":912,"title":{},"body":{"controllers/UsersController.html":{}}}],["edu4u",{"_index":577,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["edu4u.module",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/InviteUserModule.html":{}}}],["edu4u.module.ts",{"_index":662,"title":{},"body":{"modules/MailerEdu4uModule.html":{}}}],["edu4u.service",{"_index":542,"title":{},"body":{"injectables/InviteUserService.html":{},"modules/MailerEdu4uModule.html":{}}}],["edu4u.service.ts",{"_index":663,"title":{},"body":{"injectables/MailerEdu4uService.html":{},"coverage.html":{}}}],["edu4u.service.ts:17",{"_index":669,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["edu4u.user",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["edu4u.user@gmail.com",{"_index":676,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["edu4u/mailer",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"coverage.html":{}}}],["edu4upassword",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["education",{"_index":272,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{}}}],["efficient",{"_index":1084,"title":{},"body":{"index.html":{}}}],["element._id",{"_index":866,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["element.nodename",{"_index":867,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["email",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CoursesController.html":{},"classes/CreateUserDTO.html":{},"classes/InviteUserDTO.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/TeachersController.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["email'})@apiforbiddenresponse({description",{"_index":688,"title":{},"body":{"controllers/TeachersController.html":{}}}],["email}).exec",{"_index":976,"title":{},"body":{"injectables/UsersService.html":{}}}],["exception",{"_index":967,"title":{},"body":{"injectables/UsersService.html":{}}}],["exec",{"_index":421,"title":{},"body":{"injectables/CoursesService.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["exist",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CoursesController.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["exist!'})@apinotfoundresponse({description",{"_index":690,"title":{},"body":{"controllers/TeachersController.html":{}}}],["exist!'})@apiquery({name",{"_index":293,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UsersController.html":{}}}],["exist.'})@apibadrequestresponse({description",{"_index":310,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UsersController.html":{}}}],["existence",{"_index":956,"title":{},"body":{"injectables/UsersService.html":{}}}],["exists",{"_index":302,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/TeachersController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["expired",{"_index":345,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/InviteUserController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["expiresin",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":88,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["exports",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":1033,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":242,"title":{},"body":{"interfaces/Course.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/Node.html":{},"interfaces/User.html":{}}}],["extractjwt",{"_index":639,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":645,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":435,"title":{},"body":{"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"injectables/JwtStrategy.html":{}}}],["fastify",{"_index":1047,"title":{},"body":{"dependencies.html":{}}}],["fetch",{"_index":314,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"coverage.html":{}}}],["find",{"_index":840,"title":{},"body":{"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["find({\"parentdepartment",{"_index":423,"title":{},"body":{"injectables/CoursesService.html":{}}}],["find({\"parentnode",{"_index":838,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["findbyidandremove(id",{"_index":428,"title":{},"body":{"injectables/CoursesService.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["findbyidandupdate(id",{"_index":426,"title":{},"body":{"injectables/CoursesService.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["findone({\"_id",{"_index":420,"title":{},"body":{"injectables/CoursesService.html":{},"injectables/UniversitiesService.html":{}}}],["findone({\"_id\":userid",{"_index":974,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyemail",{"_index":949,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyemail(email",{"_index":961,"title":{},"body":{"injectables/UsersService.html":{}}}],["first",{"_index":484,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["firstname",{"_index":474,"title":{},"body":{"classes/CreateUserDTO.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["fix",{"_index":616,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["forbidden",{"_index":97,"title":{},"body":{"controllers/AppController.html":{},"controllers/CoursesController.html":{},"controllers/UsersController.html":{}}}],["forbidden.'})@apinotfoundresponse({description",{"_index":309,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UsersController.html":{}}}],["forbidden.'})@apiunauthorizedresponse({description",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["forbiddenexception",{"_index":63,"title":{},"body":{"controllers/AppController.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["forbiddenexception('teacher",{"_index":706,"title":{},"body":{"controllers/TeachersController.html":{},"injectables/TeachersService.html":{}}}],["forbiddenexception('user",{"_index":988,"title":{},"body":{"injectables/UsersService.html":{}}}],["found",{"_index":549,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["framework",{"_index":1082,"title":{},"body":{"index.html":{}}}],["from:'\"edu4u",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["full",{"_index":628,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["function",{"_index":1016,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1076,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/courses",{"_index":346,"title":{},"body":{"controllers/CoursesController.html":{}}}],["get('/courses')@apiokresponse({description",{"_index":323,"title":{},"body":{"controllers/CoursesController.html":{}}}],["get('/newteacher/:id",{"_index":696,"title":{},"body":{"controllers/TeachersController.html":{}}}],["get('/newteacher/:id')@apiparam({name",{"_index":686,"title":{},"body":{"controllers/TeachersController.html":{}}}],["get('/teachers",{"_index":775,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["get('/teachers')@apiokresponse({description",{"_index":754,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["get('/tree",{"_index":766,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["get('/tree')@apiokresponse({description",{"_index":757,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["get('/universities",{"_index":771,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["get('/universities')@apiokresponse({description",{"_index":745,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["get('/users",{"_index":923,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/users')@apiokresponse({description",{"_index":917,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':id",{"_index":352,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{}}}],["get(':id')@apiokresponse({description",{"_index":306,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{}}}],["get(':userid",{"_index":925,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':userid')@apiokresponse({description",{"_index":915,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('courses/:departmentiid",{"_index":363,"title":{},"body":{"controllers/CoursesController.html":{}}}],["get('courses/:departmentiid')@apiokresponse({description",{"_index":317,"title":{},"body":{"controllers/CoursesController.html":{}}}],["get('nodes/:id",{"_index":783,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["get('nodes/:id')@apiokresponse({description",{"_index":748,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["get('profile",{"_index":111,"title":{},"body":{"controllers/AppController.html":{}}}],["getcourse",{"_index":283,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{}}}],["getcourse(@res",{"_index":356,"title":{},"body":{"controllers/CoursesController.html":{}}}],["getcourse(id",{"_index":407,"title":{},"body":{"injectables/CoursesService.html":{}}}],["getcourse(res",{"_index":305,"title":{},"body":{"controllers/CoursesController.html":{}}}],["getcourses",{"_index":398,"title":{},"body":{"injectables/CoursesService.html":{}}}],["getcoursesdepartmentid",{"_index":284,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{}}}],["getcoursesdepartmentid(@res",{"_index":364,"title":{},"body":{"controllers/CoursesController.html":{}}}],["getcoursesdepartmentid(id",{"_index":411,"title":{},"body":{"injectables/CoursesService.html":{}}}],["getcoursesdepartmentid(id:any",{"_index":422,"title":{},"body":{"injectables/CoursesService.html":{}}}],["getcoursesdepartmentid(res",{"_index":316,"title":{},"body":{"controllers/CoursesController.html":{}}}],["getdepartments",{"_index":807,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["getdepartments(id",{"_index":816,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["getinstitutions",{"_index":808,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["getinstitutions(id",{"_index":821,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["getmailtext",{"_index":528,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["getmailtext(departmentname",{"_index":529,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["getnewteacher",{"_index":716,"title":{},"body":{"injectables/TeachersService.html":{}}}],["getnewteacher(id",{"_index":717,"title":{},"body":{"injectables/TeachersService.html":{}}}],["getnode",{"_index":729,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["getnode(@res",{"_index":780,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["getnode(id",{"_index":825,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["getnode(res",{"_index":741,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["getnodes",{"_index":730,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["getnodes(@res",{"_index":772,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["getnodes(id",{"_index":827,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["getnodes(res",{"_index":744,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["getnodespatentid",{"_index":731,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["getnodespatentid(@res",{"_index":784,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["getnodespatentid(res",{"_index":747,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["getprofile",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@request",{"_index":112,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["getteachers",{"_index":809,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["getteachers(teachers",{"_index":829,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["getteachersinfo",{"_index":732,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["getteachersinfo(@res",{"_index":776,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["getteachersinfo(res",{"_index":753,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["getting",{"_index":1078,"title":{"index.html":{}},"body":{}}],["gettree",{"_index":733,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["gettree(@res",{"_index":767,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["gettree(res",{"_index":756,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["getuser",{"_index":907,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getuser(@res",{"_index":927,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuser(res",{"_index":914,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuser(userid",{"_index":963,"title":{},"body":{"injectables/UsersService.html":{}}}],["getusers",{"_index":285,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getusers(@res",{"_index":349,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UsersController.html":{}}}],["getusers(res",{"_index":322,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UsersController.html":{}}}],["group",{"_index":615,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["grow",{"_index":1131,"title":{},"body":{"index.html":{}}}],["handlebars",{"_index":968,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["handlebarsadapter",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["headers",{"_index":54,"title":{},"body":{"controllers/AppController.html":{}}}],["headers.authorization.replace('bearer",{"_index":108,"title":{},"body":{"controllers/AppController.html":{}}}],["heavily",{"_index":1089,"title":{},"body":{"index.html":{}}}],["height",{"_index":600,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["here",{"_index":1142,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":513,"title":{},"body":{"classes/InviteUserDTO.html":{}}}],["host",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["hours",{"_index":265,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{}}}],["hours',required",{"_index":451,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["hoursnumber",{"_index":250,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":677,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["htmloutput",{"_index":581,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["http://localhost:3001/api",{"_index":1123,"title":{},"body":{"index.html":{}}}],["https://edu4u.gitlab.io/edu4u",{"_index":575,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["https://nestjs.com",{"_index":1149,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"controllers/CoursesController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["id",{"_index":258,"title":{},"body":{"interfaces/Course.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"classes/InviteUserDTO.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["id!'})@apiparam({name",{"_index":312,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["id',required",{"_index":452,"title":{},"body":{"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{}}}],["id'})@apibadrequestresponse({description",{"_index":750,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["id'})@apiforbiddenresponse({description",{"_index":319,"title":{},"body":{"controllers/CoursesController.html":{}}}],["id.pipes",{"_index":338,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["id.pipes.ts",{"_index":989,"title":{},"body":{"injectables/ValidateObjectId.html":{},"coverage.html":{}}}],["id.pipes.ts:14",{"_index":994,"title":{},"body":{"injectables/ValidateObjectId.html":{}}}],["identifier",{"_index":1004,"title":{},"body":{"coverage.html":{}}}],["if(!createnodedto.mentors",{"_index":887,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["if(!createnodedto.parentnode",{"_index":877,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["if(!createnodedto.teachers",{"_index":884,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["if(!createuserdto.password",{"_index":982,"title":{},"body":{"injectables/UsersService.html":{}}}],["if(!inviteuserdto",{"_index":544,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["if(!inviteuserdto.homepage",{"_index":573,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["if(!node",{"_index":547,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["if(!node.teachers.includes(user._id",{"_index":566,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["if(!user",{"_index":551,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["if(createuserdto.password.length",{"_index":985,"title":{},"body":{"injectables/UsersService.html":{}}}],["if(institute",{"_index":846,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["if(teacher.email",{"_index":704,"title":{},"body":{"controllers/TeachersController.html":{}}}],["if(teachers.length",{"_index":875,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["if(university",{"_index":849,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["if(user",{"_index":853,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["if(user.role",{"_index":564,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["ignore",{"_index":90,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ignoreexpiration",{"_index":646,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["img",{"_index":599,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["implements",{"_index":999,"title":{},"body":{"injectables/ValidateObjectId.html":{}}}],["import",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["important",{"_index":618,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["imports",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{}}}],["imports:[usersmodule",{"_index":526,"title":{},"body":{"modules/InviteUserModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["informations",{"_index":832,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["injectable",{"_index":198,"title":{"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"injectables/TeachersService.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"injectables/TeachersService.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"coverage.html":{}}}],["injectables",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"injectables/TeachersService.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"overview.html":{}}}],["injectmodel",{"_index":415,"title":{},"body":{"injectables/CoursesService.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel('node",{"_index":836,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["inspired",{"_index":1090,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1096,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1098,"title":{},"body":{"index.html":{}}}],["institite",{"_index":569,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["institite.nodename",{"_index":579,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["instititename",{"_index":530,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["institute",{"_index":820,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["institute._id",{"_index":859,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["institute.parentnode)[0",{"_index":848,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["institutions",{"_index":823,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["interests",{"_index":475,"title":{},"body":{"classes/CreateUserDTO.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":236,"title":{"interfaces/Course.html":{},"interfaces/Node.html":{},"interfaces/User.html":{}},"body":{"interfaces/Course.html":{},"interfaces/Node.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":238,"title":{},"body":{"interfaces/Course.html":{},"interfaces/Node.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interfaces/course.interface",{"_index":414,"title":{},"body":{"injectables/CoursesService.html":{}}}],["interfaces/node.interface",{"_index":834,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["interfaces/user.interface",{"_index":966,"title":{},"body":{"injectables/UsersService.html":{}}}],["interpolation",{"_index":606,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["invalid",{"_index":311,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["invite",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{}}}],["invited",{"_index":511,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["invitetecher",{"_index":495,"title":{},"body":{"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{}}}],["invitetecher(@res",{"_index":507,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["invitetecher(inviteuserdto",{"_index":537,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["invitetecher(res",{"_index":496,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["inviteusercontroller",{"_index":492,"title":{"controllers/InviteUserController.html":{}},"body":{"controllers/InviteUserController.html":{},"modules/InviteUserModule.html":{},"coverage.html":{}}}],["inviteuserdto",{"_index":497,"title":{"classes/InviteUserDTO.html":{}},"body":{"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"injectables/InviteUserService.html":{},"coverage.html":{}}}],["inviteuserdto.email",{"_index":554,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["inviteuserdto.homepage",{"_index":574,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["inviteusermodule",{"_index":130,"title":{"modules/InviteUserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InviteUserModule.html":{},"modules.html":{},"overview.html":{}}}],["inviteuserservice",{"_index":503,"title":{"injectables/InviteUserService.html":{}},"body":{"controllers/InviteUserController.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"coverage.html":{},"overview.html":{}}}],["isemail",{"_index":899,"title":{},"body":{"classes/UserLoginDTO.html":{}}}],["isemail()@apiproperty({example",{"_index":896,"title":{},"body":{"classes/UserLoginDTO.html":{}}}],["isnotempty",{"_index":900,"title":{},"body":{"classes/UserLoginDTO.html":{}}}],["isnotempty()@apiproperty({example",{"_index":893,"title":{},"body":{"classes/UserLoginDTO.html":{}}}],["isvalid",{"_index":995,"title":{},"body":{"injectables/ValidateObjectId.html":{}}}],["iviteuser",{"_index":532,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["join",{"_index":1138,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":85,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":70,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/CoursesController.html":{},"controllers/InviteUserController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":644,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":180,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1146,"title":{},"body":{"index.html":{}}}],["laboratory",{"_index":266,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{}}}],["laboratoryworksnumber",{"_index":251,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":487,"title":{},"body":{"classes/CreateUserDTO.html":{},"index.html":{}}}],["lastname",{"_index":476,"title":{},"body":{"classes/CreateUserDTO.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["lectures",{"_index":267,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{}}}],["lecturesnumber",{"_index":252,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":1152,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1128,"title":{},"body":{"index.html":{}}}],["line",{"_index":602,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["list",{"_index":324,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["local",{"_index":653,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{}}}],["localstrategy",{"_index":181,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":100,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["login(user",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginnewuser",{"_index":682,"title":{},"body":{"controllers/TeachersController.html":{}}}],["loginnewuser(res",{"_index":685,"title":{},"body":{"controllers/TeachersController.html":{}}}],["logout",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["logout(@request",{"_index":106,"title":{},"body":{"controllers/AppController.html":{}}}],["logout(req",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["lspace",{"_index":596,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["mail",{"_index":534,"title":{},"body":{"injectables/InviteUserService.html":{},"injectables/MailerEdu4uService.html":{}}}],["mailer",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{}}}],["maileredu4umodule",{"_index":131,"title":{"modules/MailerEdu4uModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules.html":{},"overview.html":{}}}],["maileredu4uservice",{"_index":541,"title":{"injectables/MailerEdu4uService.html":{}},"body":{"injectables/InviteUserService.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"coverage.html":{},"overview.html":{}}}],["mailermodule",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["mailermodule.forroot",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["mailerservice",{"_index":674,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["mailsubject",{"_index":672,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["mailtext",{"_index":668,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["mailto",{"_index":671,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["margin",{"_index":585,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["matching",{"_index":115,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":626,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["media",{"_index":619,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["mentors",{"_index":459,"title":{},"body":{"classes/CreateNodeDTO.html":{},"interfaces/Node.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CoursesController.html":{},"controllers/InviteUserController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["metadata",{"_index":992,"title":{},"body":{"injectables/ValidateObjectId.html":{},"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["migrate",{"_index":1053,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["migration",{"_index":1112,"title":{},"body":{"index.html":{}}}],["migrations",{"_index":1106,"title":{},"body":{"index.html":{}}}],["min",{"_index":621,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["miscellaneous",{"_index":1075,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1127,"title":{},"body":{"index.html":{}}}],["mj",{"_index":614,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["mjml",{"_index":1055,"title":{},"body":{"dependencies.html":{}}}],["mobile",{"_index":629,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["mode",{"_index":607,"title":{},"body":{"injectables/InviteUserService.html":{},"index.html":{}}}],["model",{"_index":413,"title":{},"body":{"injectables/CoursesService.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":117,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":119,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailerEdu4uService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo",{"_index":1108,"title":{},"body":{"index.html":{}}}],["mongodb",{"_index":84,"title":{},"body":{"controllers/AppController.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongodb+srv://alex:admin@cluster0.jczgn.mongodb.net/edu4u?retrywrites=true&w=majority",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":240,"title":{},"body":{"interfaces/Course.html":{},"injectables/CoursesService.html":{},"interfaces/Node.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mongoose.schema",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.types.objectid.isvalid(value",{"_index":1000,"title":{},"body":{"injectables/ValidateObjectId.html":{}}}],["mongoosemodule",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":394,"title":{},"body":{"modules/CoursesModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forroot(url",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":1141,"title":{},"body":{"index.html":{}}}],["ms",{"_index":590,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["mso",{"_index":595,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["mysecret",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["myśliwiec",{"_index":1147,"title":{},"body":{"index.html":{}}}],["name",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["name\":department.nodename",{"_index":862,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["name\":institute.nodename",{"_index":860,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["name\":university.nodename",{"_index":858,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["nest",{"_index":1092,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1151,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailerEdu4uService.html":{},"dependencies.html":{}}}],["nestjs/cli",{"_index":1027,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":65,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1029,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":67,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1032,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":79,"title":{},"body":{"controllers/AppController.html":{},"controllers/CoursesController.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjsx/crud",{"_index":1035,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":300,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"injectables/InviteUserService.html":{},"injectables/LocalStrategy.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new!'})@apiunauthorizedresponse({description",{"_index":689,"title":{},"body":{"controllers/TeachersController.html":{}}}],["newcourse",{"_index":370,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{}}}],["newcourse.save",{"_index":425,"title":{},"body":{"injectables/CoursesService.html":{}}}],["newnode",{"_index":789,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["newnode.save",{"_index":880,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["newteacher",{"_index":508,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["newuser",{"_index":552,"title":{},"body":{"injectables/InviteUserService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["newuser.contactphone",{"_index":558,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["newuser.email",{"_index":553,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["newuser.firstname",{"_index":559,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["newuser.interests",{"_index":562,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["newuser.lastname",{"_index":560,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["newuser.password",{"_index":556,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["newuser.role",{"_index":555,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["newuser.save",{"_index":981,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuser.title",{"_index":561,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["newuserpassword",{"_index":557,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["node",{"_index":457,"title":{"interfaces/Node.html":{}},"body":{"classes/CreateNodeDTO.html":{},"classes/InviteUserDTO.html":{},"injectables/InviteUserService.html":{},"interfaces/Node.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["node._id",{"_index":871,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["node.dto",{"_index":761,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["node.dto.ts",{"_index":455,"title":{},"body":{"classes/CreateNodeDTO.html":{},"coverage.html":{}}}],["node.dto.ts:10",{"_index":463,"title":{},"body":{"classes/CreateNodeDTO.html":{}}}],["node.dto.ts:16",{"_index":467,"title":{},"body":{"classes/CreateNodeDTO.html":{}}}],["node.dto.ts:22",{"_index":468,"title":{},"body":{"classes/CreateNodeDTO.html":{}}}],["node.dto.ts:28",{"_index":469,"title":{},"body":{"classes/CreateNodeDTO.html":{}}}],["node.dto.ts:34",{"_index":466,"title":{},"body":{"classes/CreateNodeDTO.html":{}}}],["node.dto.ts:40",{"_index":464,"title":{},"body":{"classes/CreateNodeDTO.html":{}}}],["node.dto.ts:46",{"_index":465,"title":{},"body":{"classes/CreateNodeDTO.html":{}}}],["node.js",{"_index":1081,"title":{},"body":{"index.html":{}}}],["node.nodename",{"_index":872,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["node.teachers.push(user._id",{"_index":567,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["nodeid",{"_index":514,"title":{},"body":{"classes/InviteUserDTO.html":{}}}],["nodemailer",{"_index":1059,"title":{},"body":{"dependencies.html":{}}}],["nodemodel",{"_index":835,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["nodename",{"_index":460,"title":{},"body":{"classes/CreateNodeDTO.html":{},"interfaces/Node.html":{},"miscellaneous/variables.html":{}}}],["nodes",{"_index":749,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["nodes).map(node",{"_index":870,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["nodes.map(department",{"_index":843,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["nodes.map(element",{"_index":864,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["nodeschema",{"_index":804,"title":{},"body":{"modules/UniversitiesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["none",{"_index":604,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["notfoundexception",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"controllers/CoursesController.html":{},"injectables/InviteUserService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["notfoundexception('course",{"_index":361,"title":{},"body":{"controllers/CoursesController.html":{}}}],["notfoundexception('incorrect",{"_index":378,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["notfoundexception('invalid",{"_index":545,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["notfoundexception('newnode",{"_index":791,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["notfoundexception('node",{"_index":548,"title":{},"body":{"injectables/InviteUserService.html":{},"controllers/UniversitiesController.html":{}}}],["notfoundexception('nodes",{"_index":786,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["notfoundexception('teacher",{"_index":721,"title":{},"body":{"injectables/TeachersService.html":{}}}],["notfoundexception('teachers",{"_index":778,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["notfoundexception('universities",{"_index":769,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["notfoundexception('user",{"_index":930,"title":{},"body":{"controllers/UsersController.html":{}}}],["npm",{"_index":1097,"title":{},"body":{"index.html":{}}}],["null",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":259,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateUserDTO.html":{},"miscellaneous/variables.html":{}}}],["number',required",{"_index":450,"title":{},"body":{"classes/CreateCourseDTO.html":{}}}],["object",{"_index":337,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{},"injectables/ValidateObjectId.html":{},"coverage.html":{}}}],["object(id",{"_index":720,"title":{},"body":{"injectables/TeachersService.html":{}}}],["objectid",{"_index":83,"title":{},"body":{"controllers/AppController.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["objectid(id",{"_index":359,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{}}}],["objectid(req.user._id",{"_index":114,"title":{},"body":{"controllers/AppController.html":{}}}],["objectid(userid",{"_index":929,"title":{},"body":{"controllers/UsersController.html":{}}}],["old",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["oldnode",{"_index":881,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["oldnode.mentors",{"_index":889,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["oldnode.parentnode",{"_index":883,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["oldnode.teachers",{"_index":886,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["open",{"_index":1129,"title":{},"body":{"index.html":{}}}],["optional",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["out",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["outline",{"_index":603,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["outlook",{"_index":582,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["overview",{"_index":1156,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":609,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["package",{"_index":1025,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":583,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["page",{"_index":517,"title":{},"body":{"classes/InviteUserDTO.html":{}}}],["param",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["param('departmentiid",{"_index":365,"title":{},"body":{"controllers/CoursesController.html":{}}}],["param('id",{"_index":357,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{}}}],["param('userid",{"_index":928,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["parent",{"_index":268,"title":{},"body":{"interfaces/Course.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"interfaces/Node.html":{},"controllers/UniversitiesController.html":{}}}],["parentdepartment",{"_index":253,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["parentnode",{"_index":461,"title":{},"body":{"classes/CreateNodeDTO.html":{},"interfaces/Node.html":{},"injectables/UniversitiesService.html":{},"miscellaneous/variables.html":{}}}],["particular",{"_index":315,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["pass",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["passport",{"_index":641,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":634,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":642,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"injectables/LocalStrategy.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"miscellaneous/variables.html":{}}}],["passwordvalidation",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["patent",{"_index":752,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["payload",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":649,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":648,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["per",{"_index":624,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["phone",{"_index":481,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["pipes/validate",{"_index":920,"title":{},"body":{"controllers/UsersController.html":{}}}],["pipetransform",{"_index":997,"title":{},"body":{"injectables/ValidateObjectId.html":{}}}],["please",{"_index":1139,"title":{},"body":{"index.html":{}}}],["post",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"controllers/CoursesController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["post('/add",{"_index":288,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["post('/add')@apiforbiddenresponse({description",{"_index":683,"title":{},"body":{"controllers/TeachersController.html":{},"controllers/UsersController.html":{}}}],["post('/teacher",{"_index":498,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["post('auth/login",{"_index":94,"title":{},"body":{"controllers/AppController.html":{}}}],["post('auth/logout",{"_index":105,"title":{},"body":{"controllers/AppController.html":{}}}],["post('auth/logout')@apiokresponse({description",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["post('auth/refresh",{"_index":52,"title":{},"body":{"controllers/AppController.html":{}}}],["practices",{"_index":270,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{}}}],["practicesnumber",{"_index":254,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":278,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["print",{"_index":1114,"title":{},"body":{"index.html":{}}}],["private",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"injectables/InviteUserService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["process.env.db_uri",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.jwt_expires_in",{"_index":196,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.jwt_secret",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["production",{"_index":1104,"title":{},"body":{"index.html":{}}}],["profile",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/TeachersController.html":{}}}],["profile'})@apiforbiddenresponse({description",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["profile'})@apiunauthorizedresponse({description",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["progressive",{"_index":1080,"title":{},"body":{"index.html":{}}}],["project",{"_index":1130,"title":{},"body":{"index.html":{}}}],["promise",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"injectables/LocalStrategy.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":243,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"classes/InviteUserDTO.html":{},"interfaces/Node.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{}}}],["providers",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":664,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["put",{"_index":326,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["put('/edit",{"_index":374,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["put('/edit')@apiquery({name",{"_index":298,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["query",{"_index":327,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["query('id",{"_index":376,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{}}}],["query('userid",{"_index":934,"title":{},"body":{"controllers/UsersController.html":{}}}],["read",{"_index":1140,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":275,"title":{},"body":{"interfaces/Course.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/InviteUserDTO.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":1063,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["refresh(headers",{"_index":51,"title":{},"body":{"controllers/AppController.html":{}}}],["refresh(token",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["registration",{"_index":516,"title":{},"body":{"classes/InviteUserDTO.html":{}}}],["repository",{"_index":1095,"title":{},"body":{"index.html":{}}}],["req",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["req.user['_doc",{"_index":104,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":56,"title":{},"body":{"controllers/AppController.html":{}}}],["require('bcrypt",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TeachersService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":434,"title":{},"body":{"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{}}}],["res",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"controllers/CoursesController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["res.status(httpstatus.ok).json",{"_index":372,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/InviteUserController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["res.status(httpstatus.ok).json(course",{"_index":362,"title":{},"body":{"controllers/CoursesController.html":{}}}],["res.status(httpstatus.ok).json(courses",{"_index":351,"title":{},"body":{"controllers/CoursesController.html":{}}}],["res.status(httpstatus.ok).json(departments",{"_index":368,"title":{},"body":{"controllers/CoursesController.html":{}}}],["res.status(httpstatus.ok).json(node",{"_index":782,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["res.status(httpstatus.ok).json(nodes",{"_index":787,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["res.status(httpstatus.ok).json(result",{"_index":701,"title":{},"body":{"controllers/TeachersController.html":{}}}],["res.status(httpstatus.ok).json(teachers",{"_index":779,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["res.status(httpstatus.ok).json(tree",{"_index":770,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["res.status(httpstatus.ok).json(universities",{"_index":774,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["res.status(httpstatus.ok).json(user",{"_index":931,"title":{},"body":{"controllers/UsersController.html":{}}}],["res.status(httpstatus.ok).json(users",{"_index":924,"title":{},"body":{"controllers/UsersController.html":{}}}],["reset",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["result",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":116,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["returned",{"_index":318,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["returned.'})@apibadrequestresponse({description",{"_index":742,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["returned.'})@apiforbiddenresponse({description",{"_index":308,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UsersController.html":{}}}],["returns",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["rimraf",{"_index":1065,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":477,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/InviteUserDTO.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["rspace",{"_index":598,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["run",{"_index":1100,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1067,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":1085,"title":{},"body":{"index.html":{}}}],["schema",{"_index":395,"title":{},"body":{"modules/CoursesModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["schemas/course.schema",{"_index":393,"title":{},"body":{"modules/CoursesModule.html":{}}}],["schemas/node.schema",{"_index":805,"title":{},"body":{"modules/UniversitiesModule.html":{}}}],["schemas/user.schema",{"_index":946,"title":{},"body":{"modules/UsersModule.html":{}}}],["screen",{"_index":620,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["secret",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":647,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["self",{"_index":271,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{}}}],["selfeducationhours",{"_index":255,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["seminars",{"_index":273,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{}}}],["seminarsnumber",{"_index":256,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["send",{"_index":670,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["sendmail",{"_index":665,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["sendmail(mailto",{"_index":666,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["server",{"_index":1086,"title":{},"body":{"index.html":{}}}],["service",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CoursesService.html":{},"injectables/InviteUserService.html":{},"injectables/TeachersService.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["side",{"_index":1087,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{}}}],["size",{"_index":587,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["smtp.gmail.com",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"index.html":{}}}],["sponsors",{"_index":1133,"title":{},"body":{"index.html":{}}}],["src/.../app.module.ts",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../course.schema.ts",{"_index":1164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1077,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../node.schema.ts",{"_index":1165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../teachers.service.ts",{"_index":1163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controler.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controler.ts:31",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controler.ts:44",{"_index":50,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controler.ts:55",{"_index":53,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controler.ts:70",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.module.ts",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:22",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:40",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:51",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt",{"_index":328,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/InviteUserController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UniversitiesController.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":633,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:23",{"_index":638,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:9",{"_index":636,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local.strategy.ts",{"_index":650,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:21",{"_index":652,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/courses/courses.controller.ts",{"_index":277,"title":{},"body":{"controllers/CoursesController.html":{},"coverage.html":{}}}],["src/courses/courses.controller.ts:118",{"_index":294,"title":{},"body":{"controllers/CoursesController.html":{}}}],["src/courses/courses.controller.ts:29",{"_index":325,"title":{},"body":{"controllers/CoursesController.html":{}}}],["src/courses/courses.controller.ts:45",{"_index":313,"title":{},"body":{"controllers/CoursesController.html":{}}}],["src/courses/courses.controller.ts:64",{"_index":321,"title":{},"body":{"controllers/CoursesController.html":{}}}],["src/courses/courses.controller.ts:75",{"_index":289,"title":{},"body":{"controllers/CoursesController.html":{}}}],["src/courses/courses.controller.ts:92",{"_index":303,"title":{},"body":{"controllers/CoursesController.html":{}}}],["src/courses/courses.module.ts",{"_index":390,"title":{},"body":{"modules/CoursesModule.html":{}}}],["src/courses/courses.service.ts",{"_index":396,"title":{},"body":{"injectables/CoursesService.html":{},"coverage.html":{}}}],["src/courses/courses.service.ts:19",{"_index":409,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:28",{"_index":408,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:39",{"_index":412,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:50",{"_index":400,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:61",{"_index":405,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:71",{"_index":403,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/dto/create",{"_index":430,"title":{},"body":{"classes/CreateCourseDTO.html":{},"coverage.html":{}}}],["src/courses/interfaces/course.interface.ts",{"_index":239,"title":{},"body":{"interfaces/Course.html":{},"coverage.html":{}}}],["src/courses/schemas/course.schema.ts",{"_index":1014,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/invite",{"_index":493,"title":{},"body":{"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"coverage.html":{}}}],["src/mailer",{"_index":661,"title":{},"body":{"modules/MailerEdu4uModule.html":{},"injectables/MailerEdu4uService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1015,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/pipes/validate",{"_index":336,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"injectables/ValidateObjectId.html":{},"coverage.html":{}}}],["src/teachers/teachers.controller.ts",{"_index":681,"title":{},"body":{"controllers/TeachersController.html":{},"coverage.html":{}}}],["src/teachers/teachers.controller.ts:32",{"_index":691,"title":{},"body":{"controllers/TeachersController.html":{}}}],["src/teachers/teachers.controller.ts:46",{"_index":684,"title":{},"body":{"controllers/TeachersController.html":{}}}],["src/teachers/teachers.module.ts",{"_index":713,"title":{},"body":{"modules/TeachersModule.html":{}}}],["src/teachers/teachers.service.ts",{"_index":715,"title":{},"body":{"injectables/TeachersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/teachers/teachers.service.ts:20",{"_index":718,"title":{},"body":{"injectables/TeachersService.html":{}}}],["src/universities/dto/create",{"_index":454,"title":{},"body":{"classes/CreateNodeDTO.html":{},"coverage.html":{}}}],["src/universities/interfaces/node.interface.ts",{"_index":679,"title":{},"body":{"interfaces/Node.html":{},"coverage.html":{}}}],["src/universities/schemas/node.schema.ts",{"_index":1018,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/universities/universities.controller.ts",{"_index":724,"title":{},"body":{"controllers/UniversitiesController.html":{},"coverage.html":{}}}],["src/universities/universities.controller.ts:107",{"_index":735,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["src/universities/universities.controller.ts:126",{"_index":740,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["src/universities/universities.controller.ts:151",{"_index":738,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["src/universities/universities.controller.ts:30",{"_index":759,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["src/universities/universities.controller.ts:44",{"_index":746,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["src/universities/universities.controller.ts:58",{"_index":755,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["src/universities/universities.controller.ts:76",{"_index":743,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["src/universities/universities.controller.ts:93",{"_index":751,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["src/universities/universities.module.ts",{"_index":802,"title":{},"body":{"modules/UniversitiesModule.html":{}}}],["src/universities/universities.service.ts",{"_index":806,"title":{},"body":{"injectables/UniversitiesService.html":{},"coverage.html":{}}}],["src/universities/universities.service.ts:115",{"_index":819,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["src/universities/universities.service.ts:132",{"_index":830,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["src/universities/universities.service.ts:153",{"_index":811,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["src/universities/universities.service.ts:167",{"_index":815,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["src/universities/universities.service.ts:187",{"_index":813,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["src/universities/universities.service.ts:25",{"_index":828,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["src/universities/universities.service.ts:36",{"_index":826,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["src/universities/universities.service.ts:46",{"_index":831,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["src/universities/universities.service.ts:75",{"_index":833,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["src/universities/universities.service.ts:97",{"_index":822,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["src/users/dto/create",{"_index":471,"title":{},"body":{"classes/CreateUserDTO.html":{},"injectables/InviteUserService.html":{},"controllers/TeachersController.html":{},"coverage.html":{}}}],["src/users/dto/userilogin.dto.ts",{"_index":891,"title":{},"body":{"classes/UserLoginDTO.html":{},"coverage.html":{}}}],["src/users/dto/userilogin.dto.ts:13",{"_index":898,"title":{},"body":{"classes/UserLoginDTO.html":{}}}],["src/users/dto/userilogin.dto.ts:20",{"_index":895,"title":{},"body":{"classes/UserLoginDTO.html":{}}}],["src/users/interfaces/user.interface",{"_index":543,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["src/users/interfaces/user.interface.ts",{"_index":890,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":1022,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.controller.ts",{"_index":904,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:110",{"_index":911,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:31",{"_index":918,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:47",{"_index":916,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:62",{"_index":908,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:80",{"_index":913,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":944,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":719,"title":{},"body":{"injectables/TeachersService.html":{},"injectables/UniversitiesService.html":{}}}],["src/users/users.service.ts",{"_index":947,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:23",{"_index":965,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:32",{"_index":964,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:44",{"_index":962,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:53",{"_index":951,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:65",{"_index":960,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:81",{"_index":958,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:91",{"_index":953,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":1101,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1103,"title":{},"body":{"index.html":{}}}],["start:proddatabase",{"_index":1105,"title":{},"body":{"index.html":{}}}],["started",{"_index":1079,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1094,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1005,"title":{},"body":{"coverage.html":{}}}],["statuscode",{"_index":48,"title":{},"body":{"controllers/AppController.html":{}}}],["statustest",{"_index":1116,"title":{},"body":{"index.html":{}}}],["stay",{"_index":1143,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":640,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Course.html":{},"controllers/CoursesController.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"classes/InviteUserDTO.html":{},"injectables/InviteUserService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"miscellaneous/variables.html":{}}}],["string})@apiforbiddenresponse({description",{"_index":299,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UsersController.html":{}}}],["string})@apiokresponse({description",{"_index":687,"title":{},"body":{"controllers/TeachersController.html":{}}}],["students",{"_index":257,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":667,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["submit",{"_index":290,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["submitted",{"_index":373,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["successfully",{"_index":307,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/InviteUserController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["super",{"_index":643,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":1134,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1154,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1048,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":591,"title":{},"body":{"injectables/InviteUserService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["table.mj",{"_index":627,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1024,"title":{},"body":{"coverage.html":{}}}],["td",{"_index":592,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["td.mj",{"_index":630,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["teacher",{"_index":510,"title":{},"body":{"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"injectables/UniversitiesService.html":{}}}],["teacher)[0",{"_index":852,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["teacher.email",{"_index":700,"title":{},"body":{"controllers/TeachersController.html":{}}}],["teacher_email",{"_index":699,"title":{},"body":{"controllers/TeachersController.html":{}}}],["teachers",{"_index":462,"title":{},"body":{"classes/CreateNodeDTO.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"miscellaneous/variables.html":{}}}],["teachers).map(teacher",{"_index":876,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["teachers.controller",{"_index":714,"title":{},"body":{"modules/TeachersModule.html":{}}}],["teachers.service",{"_index":693,"title":{},"body":{"controllers/TeachersController.html":{},"modules/TeachersModule.html":{}}}],["teachers/teachers.module",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["teacherscontroller",{"_index":680,"title":{"controllers/TeachersController.html":{}},"body":{"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"coverage.html":{}}}],["teachersinfo",{"_index":842,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["teachersinfo.push",{"_index":854,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["teachersmodule",{"_index":132,"title":{"modules/TeachersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TeachersModule.html":{},"modules.html":{},"overview.html":{}}}],["teachersservice",{"_index":692,"title":{"injectables/TeachersService.html":{}},"body":{"controllers/TeachersController.html":{},"modules/TeachersModule.html":{},"injectables/TeachersService.html":{},"coverage.html":{},"overview.html":{}}}],["techer",{"_index":500,"title":{},"body":{"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{}}}],["test",{"_index":1119,"title":{},"body":{"index.html":{}}}],["test:covapi",{"_index":1122,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1121,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1118,"title":{},"body":{"index.html":{}}}],["text",{"_index":535,"title":{},"body":{"injectables/InviteUserService.html":{},"injectables/MailerEdu4uService.html":{}}}],["thanks",{"_index":1132,"title":{},"body":{"index.html":{}}}],["this.authservice.login(req.user['_doc'])).access_token",{"_index":103,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(user)).access_token",{"_index":709,"title":{},"body":{"controllers/TeachersController.html":{}}}],["this.authservice.refresh(token",{"_index":109,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.validateuser(email",{"_index":655,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.coursemodel",{"_index":419,"title":{},"body":{"injectables/CoursesService.html":{}}}],["this.coursemodel(createcoursedto",{"_index":424,"title":{},"body":{"injectables/CoursesService.html":{}}}],["this.coursemodel.find().exec",{"_index":418,"title":{},"body":{"injectables/CoursesService.html":{}}}],["this.coursesservice.addcourse(createcoursedto",{"_index":371,"title":{},"body":{"controllers/CoursesController.html":{}}}],["this.coursesservice.deletecourse(id",{"_index":385,"title":{},"body":{"controllers/CoursesController.html":{}}}],["this.coursesservice.editcourse(id",{"_index":380,"title":{},"body":{"controllers/CoursesController.html":{}}}],["this.coursesservice.getcourse(new",{"_index":358,"title":{},"body":{"controllers/CoursesController.html":{}}}],["this.coursesservice.getcourses",{"_index":350,"title":{},"body":{"controllers/CoursesController.html":{}}}],["this.coursesservice.getcoursesdepartmentid(id",{"_index":367,"title":{},"body":{"controllers/CoursesController.html":{}}}],["this.finduserbyemail(email",{"_index":987,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getdepartments(node[\"id",{"_index":873,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["this.getinstitutions(element._id,allnodes,allusers",{"_index":868,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["this.getmailtext(node.nodename",{"_index":578,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["this.getnode(id",{"_index":882,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["this.getteachers(node.teachers",{"_index":874,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["this.getuser(id)).password",{"_index":984,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.inviteuserservice.invitetecher(inviteuserdto",{"_index":509,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["this.jwtservice.decode(token",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.maileredu4uservice.sendmail",{"_index":576,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["this.mailerservice",{"_index":675,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["this.nodemodel",{"_index":837,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["this.nodemodel(createnodedto",{"_index":879,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["this.teachersservice.getnewteacher(createuserdto._id",{"_index":703,"title":{},"body":{"controllers/TeachersController.html":{}}}],["this.teachersservice.getnewteacher(id",{"_index":698,"title":{},"body":{"controllers/TeachersController.html":{}}}],["this.universitiesservice.addnode(createnodedto",{"_index":790,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["this.universitiesservice.deletenode(id",{"_index":797,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["this.universitiesservice.editnode(id",{"_index":794,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["this.universitiesservice.editnode(node._id",{"_index":568,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["this.universitiesservice.getnode(institite.parentnode",{"_index":572,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["this.universitiesservice.getnode(inviteuserdto.nodeid",{"_index":546,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["this.universitiesservice.getnode(new",{"_index":781,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["this.universitiesservice.getnode(node.parentnode",{"_index":570,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["this.universitiesservice.getnodes",{"_index":773,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["this.universitiesservice.getnodes(id",{"_index":785,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["this.universitiesservice.getteachersinfo",{"_index":777,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["this.universitiesservice.gettree",{"_index":768,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["this.usermodel",{"_index":973,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel(createuserdto",{"_index":980,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find().exec",{"_index":972,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone({\"email",{"_index":975,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.adduser(createuserdto",{"_index":933,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.adduser(newuser",{"_index":563,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["this.usersservice.checkemail(createuserdto.email",{"_index":932,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.deleteuser(userid",{"_index":940,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.edituser(createuserdto._id",{"_index":708,"title":{},"body":{"controllers/TeachersController.html":{}}}],["this.usersservice.edituser(user._id",{"_index":565,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["this.usersservice.edituser(userid",{"_index":937,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.finduserbyemail(email",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.finduserbyemail(inviteuserdto.email",{"_index":550,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["this.usersservice.getuser(new",{"_index":113,"title":{},"body":{"controllers/AppController.html":{},"injectables/TeachersService.html":{},"controllers/UsersController.html":{}}}],["this.usersservice.getusers",{"_index":839,"title":{},"body":{"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{}}}],["throw",{"_index":360,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/InviteUserService.html":{},"injectables/LocalStrategy.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{}}}],["title",{"_index":478,"title":{},"body":{"classes/CreateUserDTO.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["tocken",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["token",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CoursesController.html":{},"controllers/InviteUserController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["touch",{"_index":1144,"title":{},"body":{"index.html":{}}}],["transform",{"_index":990,"title":{},"body":{"injectables/ValidateObjectId.html":{}}}],["transform(value",{"_index":991,"title":{},"body":{"injectables/ValidateObjectId.html":{}}}],["transformer",{"_index":1042,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["tree",{"_index":758,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["tree.push",{"_index":865,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["true",{"_index":427,"title":{},"body":{"injectables/CoursesService.html":{},"injectables/UniversitiesService.html":{},"injectables/UsersService.html":{}}}],["ts",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["twitter",{"_index":1150,"title":{},"body":{"index.html":{}}}],["type",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"injectables/InviteUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerEdu4uService.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectId.html":{},"coverage.html":{}}}],["typeorm",{"_index":1073,"title":{},"body":{"dependencies.html":{}}}],["types/mongoose",{"_index":1037,"title":{},"body":{"dependencies.html":{}}}],["types/node",{"_index":1039,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1093,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["unapplied",{"_index":1107,"title":{},"body":{"index.html":{}}}],["unauthorized",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["unauthorizedexception",{"_index":654,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unauthorizedexception(user.message",{"_index":657,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undo",{"_index":1110,"title":{},"body":{"index.html":{}}}],["unit",{"_index":1117,"title":{},"body":{"index.html":{}}}],["univer",{"_index":571,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["univer.nodename",{"_index":580,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["univername",{"_index":531,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["universiry",{"_index":824,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["universities",{"_index":725,"title":{},"body":{"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["universities.controller",{"_index":803,"title":{},"body":{"modules/UniversitiesModule.html":{}}}],["universities.service",{"_index":760,"title":{},"body":{"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{}}}],["universities/universities.module",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"modules/InviteUserModule.html":{}}}],["universities/universities.service",{"_index":540,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["universitiescontroller",{"_index":723,"title":{"controllers/UniversitiesController.html":{}},"body":{"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"coverage.html":{}}}],["universitiesmodule",{"_index":133,"title":{"modules/UniversitiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InviteUserModule.html":{},"modules/UniversitiesModule.html":{},"modules.html":{},"overview.html":{}}}],["universitiesservice",{"_index":539,"title":{"injectables/UniversitiesService.html":{}},"body":{"injectables/InviteUserService.html":{},"controllers/UniversitiesController.html":{},"modules/UniversitiesModule.html":{},"injectables/UniversitiesService.html":{},"coverage.html":{},"overview.html":{}}}],["university",{"_index":847,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["university._id",{"_index":857,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["up",{"_index":1109,"title":{},"body":{"index.html":{}}}],["update",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["updated",{"_index":381,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["url",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":969,"title":{},"body":{"injectables/UsersService.html":{}}}],["useguards",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"controllers/CoursesController.html":{},"controllers/InviteUserController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["useguards(authguard('local",{"_index":93,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(jwtauthguard",{"_index":110,"title":{},"body":{"controllers/AppController.html":{},"controllers/CoursesController.html":{},"controllers/InviteUserController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@get('profile')@apibearerauth()@apiokresponse({description",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(undefined)@post('auth/login')@apiokresponse({description",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":21,"title":{"interfaces/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{},"classes/CreateNodeDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/InviteUserController.html":{},"classes/InviteUserDTO.html":{},"injectables/InviteUserService.html":{},"injectables/LocalStrategy.html":{},"interfaces/Node.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"injectables/UniversitiesService.html":{},"interfaces/User.html":{},"classes/UserLoginDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user._id",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.controller",{"_index":525,"title":{},"body":{"modules/InviteUserModule.html":{}}}],["user.controller.ts",{"_index":494,"title":{},"body":{"controllers/InviteUserController.html":{},"coverage.html":{}}}],["user.controller.ts:25",{"_index":499,"title":{},"body":{"controllers/InviteUserController.html":{}}}],["user.dto",{"_index":502,"title":{},"body":{"controllers/InviteUserController.html":{},"injectables/InviteUserService.html":{},"controllers/TeachersController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":472,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/InviteUserDTO.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":519,"title":{},"body":{"classes/InviteUserDTO.html":{}}}],["user.dto.ts:12",{"_index":479,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:17",{"_index":515,"title":{},"body":{"classes/InviteUserDTO.html":{}}}],["user.dto.ts:18",{"_index":483,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:23",{"_index":520,"title":{},"body":{"classes/InviteUserDTO.html":{}}}],["user.dto.ts:24",{"_index":489,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:29",{"_index":518,"title":{},"body":{"classes/InviteUserDTO.html":{}}}],["user.dto.ts:30",{"_index":485,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:36",{"_index":488,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:44",{"_index":482,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:52",{"_index":491,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:60",{"_index":486,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:68",{"_index":490,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.email",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InviteUserService.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{}}}],["user.firstname",{"_index":855,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["user.lastname",{"_index":856,"title":{},"body":{"injectables/UniversitiesService.html":{}}}],["user.module",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["user.module.ts",{"_index":524,"title":{},"body":{"modules/InviteUserModule.html":{}}}],["user.password",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TeachersService.html":{}}}],["user.payload",{"_index":656,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["user.service",{"_index":504,"title":{},"body":{"controllers/InviteUserController.html":{},"modules/InviteUserModule.html":{}}}],["user.service.ts",{"_index":527,"title":{},"body":{"injectables/InviteUserService.html":{},"coverage.html":{}}}],["user.service.ts:24",{"_index":538,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["user.service.ts:70",{"_index":533,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["user.sub",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/dto/invite",{"_index":512,"title":{},"body":{"classes/InviteUserDTO.html":{},"coverage.html":{}}}],["user/invite",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"controllers/InviteUserController.html":{},"modules/InviteUserModule.html":{},"injectables/InviteUserService.html":{},"coverage.html":{}}}],["user['email",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":910,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["userlogindto",{"_index":33,"title":{"classes/UserLoginDTO.html":{}},"body":{"controllers/AppController.html":{},"classes/UserLoginDTO.html":{},"coverage.html":{}}}],["usermodel",{"_index":971,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":892,"title":{},"body":{"classes/UserLoginDTO.html":{}}}],["users",{"_index":410,"title":{},"body":{"injectables/CoursesService.html":{},"controllers/InviteUserController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":919,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/dto/userilogin.dto",{"_index":80,"title":{},"body":{"controllers/AppController.html":{}}}],["users/users.controller",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.module",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/InviteUserModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{}}}],["users/users.service",{"_index":82,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/InviteUserService.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{}}}],["userschema",{"_index":945,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":139,"title":{"controllers/UsersController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["usersmodule",{"_index":134,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/InviteUserModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":81,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/InviteUserService.html":{},"controllers/TeachersController.html":{},"injectables/TeachersService.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usersservice:usersservice",{"_index":765,"title":{},"body":{"controllers/UniversitiesController.html":{}}}],["using",{"_index":296,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["valid",{"_index":344,"title":{},"body":{"controllers/CoursesController.html":{},"controllers/InviteUserController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{}}}],["validate",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/ValidateObjectId.html":{}}}],["validate(email",{"_index":651,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":637,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateobjectid",{"_index":335,"title":{"injectables/ValidateObjectId.html":{}},"body":{"controllers/CoursesController.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"controllers/UsersController.html":{},"injectables/ValidateObjectId.html":{},"coverage.html":{}}}],["validateuser",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":901,"title":{},"body":{"classes/UserLoginDTO.html":{},"dependencies.html":{}}}],["value",{"_index":996,"title":{},"body":{"injectables/ValidateObjectId.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":107,"title":{},"body":{"controllers/AppController.html":{},"injectables/InviteUserService.html":{},"controllers/TeachersController.html":{},"controllers/UniversitiesController.html":{},"injectables/UniversitiesService.html":{}}}],["variable",{"_index":1007,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1162,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":673,"title":{},"body":{"injectables/MailerEdu4uService.html":{}}}],["watch",{"_index":1102,"title":{},"body":{"index.html":{}}}],["webkit",{"_index":586,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["website",{"_index":1148,"title":{},"body":{"index.html":{}}}],["width",{"_index":625,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["width:100",{"_index":617,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["width:480px",{"_index":622,"title":{},"body":{"injectables/InviteUserService.html":{}}}],["works",{"_index":262,"title":{},"body":{"interfaces/Course.html":{},"classes/CreateCourseDTO.html":{}}}],["wrong",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/TeachersController.html":{}}}],["you'd",{"_index":1137,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{},"modules/InviteUserModule.html":{},"modules/MailerEdu4uModule.html":{},"modules/TeachersModule.html":{},"modules/UniversitiesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controler.ts\n        \n\n\n            \n                Description\n            \n            \n                App Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                refresh\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('profile')@ApiBearerAuth()@ApiOkResponse({description: 'Return user profile'})@ApiUnauthorizedResponse({description: 'User Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/app.controler.ts:70\n                \n            \n\n\n            \n                \n                    Get User profile\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req, userLoginDto: UserLoginDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Post('auth/login')@ApiOkResponse({description: 'result Token and user profile'})@ApiForbiddenResponse({description: 'Forbidden.'})@ApiUnauthorizedResponse({description: 'User doesn't exist or Wrong credentials.'})\n                \n            \n\n            \n                \n                    Defined in src/app.controler.ts:31\n                \n            \n\n\n            \n                \n                    login User\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userLoginDto\n                                    \n                                                UserLoginDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('auth/logout')@ApiOkResponse({description: 'Always return statusCode: 201'})\n                \n            \n\n            \n                \n                    Defined in src/app.controler.ts:44\n                \n            \n\n\n            \n                \n                    logout User\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh(headers)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('auth/refresh')\n                \n            \n\n            \n                \n                    Defined in src/app.controler.ts:55\n                \n            \n\n\n            \n                \n                    Refresh token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headers\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Request, Post, UseGuards, Get, Body, Headers, NotFoundException, Res, Param, ForbiddenException, HttpStatus } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { AuthService } from './auth/auth.service';\nimport { JwtAuthGuard } from './auth/jwt-auth.guard';\nimport { ApiTags,ApiUnauthorizedResponse, ApiOkResponse, ApiForbiddenResponse, ApiBearerAuth, ApiParam, ApiNotFoundResponse} from '@nestjs/swagger';\nimport { UserLoginDTO } from './users/dto/userilogin.dto'; \nimport { UsersService } from './users/users.service';\nimport { ObjectID } from 'mongodb'; \nimport  {} from 'jwt-decode';\n\n\n/**\n * App Controller\n */\n@ApiTags('Login and Logout')\n@Controller()\nexport class AppController {\n  /**@ignore */\n  constructor(private authService: AuthService,private usersService: UsersService) {}\n  \n  /**\n   * login User\n   * @param req \n   * @param userLoginDto \n   */\n  @UseGuards(AuthGuard('local'))\n  @Post('auth/login')\n  @ApiOkResponse({description: 'result Token and user profile'})\n  @ApiForbiddenResponse({description: 'Forbidden.'})\n  @ApiUnauthorizedResponse({description: 'User doesn\\'t exist or Wrong credentials.'})\n  async login(@Request() req, @Body() userLoginDto: UserLoginDTO) {\n    return {\n      access_token : (await this.authService.login(req.user['_doc'])).access_token,\n      profile: req.user['_doc']\n    };\n  }\n\n  /**\n   * logout User\n   * @param req \n   */\n  @Post('auth/logout')\n  @ApiOkResponse({description: 'Always return statusCode: 201'})  \n  async logout(@Request() req) {\n    return {\n      statusCode: 201\n    }\n  }\n\n  /**\n   * Refresh token\n   * @param headers \n   */\n  @Post('auth/refresh') \n  async refresh( @Headers() headers) { \n      var token = headers.authorization.replace('Bearer ','');\n      return this.authService.refresh(token);\n  }\n\n   \n  /**\n   * Get User profile\n   * @param req \n   */\n  @UseGuards(JwtAuthGuard)\n  @Get('profile')\n  @ApiBearerAuth()  \n  @ApiOkResponse({description: 'Return user profile'})\n  @ApiUnauthorizedResponse({description: 'User Unauthorized'})\n  async getProfile(@Request() req) {\n    return await this.usersService.getUser(new ObjectID(req.user._id));\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nInviteUserModule\n\nInviteUserModule\n\nAppModule -->\n\nInviteUserModule->AppModule\n\n\n\n\n\nMailerEdu4uModule\n\nMailerEdu4uModule\n\nAppModule -->\n\nMailerEdu4uModule->AppModule\n\n\n\n\n\nTeachersModule\n\nTeachersModule\n\nAppModule -->\n\nTeachersModule->AppModule\n\n\n\n\n\nUniversitiesModule\n\nUniversitiesModule\n\nAppModule -->\n\nUniversitiesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoursesModule\n                        \n                        \n                            InviteUserModule\n                        \n                        \n                            MailerEdu4uModule\n                        \n                        \n                            TeachersModule\n                        \n                        \n                            UniversitiesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './users/users.module';\nimport { UsersController} from './users/users.controller';\nimport { AppController } from './app.controler';\nimport { MongooseModule } from '@nestjs/mongoose'; \nimport { UniversitiesModule } from './universities/universities.module';\nimport { CoursesModule } from './courses/courses.module'; \nimport { MailerModule } from '@nestjs-modules/mailer';  \nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { InviteUserModule } from './invite-user/invite-user.module';\nimport { MailerEdu4uModule } from './mailer-edu4u/mailer-edu4u.module';\nimport { TeachersModule } from './teachers/teachers.module';\n \n/**\n * DataBase url\n */\nlet url =  process.env.DB_URI || \"mongodb+srv://alex:admin@cluster0.jczgn.mongodb.net/edu4u?retryWrites=true&w=majority\";\n\n@Module({\n  imports: [ \n    AuthModule,\n    UsersModule,\n    MongooseModule.forRoot(url),\n    UniversitiesModule,\n    CoursesModule,     \n    InviteUserModule,\n    MailerModule.forRoot({\n      transport: {\n        host: 'smtp.gmail.com',\n        auth: {\n          user: 'edu4u.user', \n          pass: 'edu4upassword' \n        },\n      },\n      defaults: {\n        from:'\"edu4u-user\" ',\n      }\n    }),\n    MailerEdu4uModule,\n    TeachersModule,\n  ],\n  controllers: [\n    AppController,\n    UsersController\n  ],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    UsersModule, \n    PassportModule, \n    JwtModule.register({\n      secret: process.env.JWT_SECRET || \"MySecret\",\n      signOptions: { expiresIn: process.env.JWT_EXPIRES_IN || \"6h\"},\n    })\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Auth Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                refresh\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:40\n                \n            \n\n\n            \n                \n                    login user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        access_token\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh(token)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:51\n                \n            \n\n\n            \n                \n                    Update old token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        old tocken\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:22\n                \n            \n\n\n            \n                \n                    Validate User \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user email\n\n                                    \n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\n\nimport { UsersService } from '../users/users.service';\n/**@ignore */\nconst bcrypt = require('bcrypt');\n\n\n/**\n * Auth Service\n */\n@Injectable()\nexport class AuthService {\n  /**@ignore */\n  constructor(private usersService: UsersService, private jwtService: JwtService) {}\n\n  /**\n   * Validate User \n   * @param email user email\n   * @param pass user pass\n   */\n  async validateUser(email: string, pass: string): Promise {\n    const user = await this.usersService.findUserByEmail(email);\n    if (!user) {\n      return { message: \"User doesn't exist\", payload: null };\n    } \n    const passwordValidation = await bcrypt.compare(pass, user.password); \n    if (passwordValidation) {\n      const { password, ...result } = user;\n      return { payload: result};\n    }\n    return { message: \"Wrong credentials\", payload: null };\n  }\n\n  /**\n   * login user\n   * @param user \n   * @returns access_token\n   */\n  async login(user: any) {\n    const payload = { email: user.email, sub: user._id };\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n\n  /**\n   * Update old token\n   * @param token old tocken\n   */\n  async refresh(token){\n    const user = this.jwtService.decode(token);\n    const payload = { email: user['email'], sub: user.sub};\n    return {\n        access_token: this.jwtService.sign(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/interfaces/course.interface.ts\n        \n\n            \n                Description\n            \n            \n                Course mongoose Document\n\n            \n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        consultationsNumber\n                                \n                                \n                                        controlWorksNumber\n                                \n                                \n                                        courseName\n                                \n                                \n                                        createdDate\n                                \n                                \n                                        createdUser\n                                \n                                \n                                        hoursNumber\n                                \n                                \n                                        laboratoryWorksNumber\n                                \n                                \n                                        lecturesNumber\n                                \n                                \n                                        parentDepartment\n                                \n                                \n                                        practicesNumber\n                                \n                                \n                                        selfEducationHours\n                                \n                                \n                                        seminarsNumber\n                                \n                                \n                                        students\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        consultationsNumber\n                                    \n                                \n                                \n                                    \n                                        consultationsNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course consultations number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        controlWorksNumber\n                                    \n                                \n                                \n                                    \n                                        controlWorksNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course control works number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        courseName\n                                    \n                                \n                                \n                                    \n                                        courseName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course Name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdDate\n                                    \n                                \n                                \n                                    \n                                        createdDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course created Date\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdUser\n                                    \n                                \n                                \n                                    \n                                        createdUser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course created User id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hoursNumber\n                                    \n                                \n                                \n                                    \n                                        hoursNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course hours number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        laboratoryWorksNumber\n                                    \n                                \n                                \n                                    \n                                        laboratoryWorksNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course laboratory works number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lecturesNumber\n                                    \n                                \n                                \n                                    \n                                        lecturesNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course lectures number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentDepartment\n                                    \n                                \n                                \n                                    \n                                        parentDepartment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course parent Department id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        practicesNumber\n                                    \n                                \n                                \n                                    \n                                        practicesNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course practices number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selfEducationHours\n                                    \n                                \n                                \n                                    \n                                        selfEducationHours:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course self education hours\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seminarsNumber\n                                    \n                                \n                                \n                                    \n                                        seminarsNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course seminars number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                    \n                                \n                                \n                                    \n                                        students:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course students id\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\n\n/**\n * Course mongoose Document\n */\nexport interface Course extends Document {\n    /**\n     * Course id\n     */\n    readonly _id: string;\n\n    /**\n     * Course Name\n     */\n    readonly courseName: string;\n\n    /**\n     * Course parent Department id\n     */\n    readonly parentDepartment: string;\n\n    /**\n     * Course hours number\n     */\n    readonly hoursNumber: number;\n\n    /**\n     * Course lectures number\n     */\n    readonly lecturesNumber: number;\n\n    /**\n     * Course seminars number\n     */\n    readonly seminarsNumber: number;\n\n    /**\n     * Course practices number\n     */\n    readonly practicesNumber: number;\n\n    /**\n     * Course laboratory works number\n     */\n    readonly laboratoryWorksNumber: number;\n\n    /**\n     * Course self education hours\n     */\n    readonly selfEducationHours: number;\n\n    /**\n     * Course control works number\n     */\n    readonly controlWorksNumber: number;\n\n    /**\n     * Course consultations number\n     */\n    readonly consultationsNumber: number;\n\n    /**\n     * Course students id\n     */\n    readonly students: Array;\n\n    /**\n     * Course created Date\n     */\n    readonly createdDate: Date;\n\n    /**\n     * Course created User id\n     */\n    readonly createdUser: string; \n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CoursesController.html":{"url":"controllers/CoursesController.html","title":"controller - CoursesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CoursesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/courses.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses\n            \n\n            \n                Description\n            \n            \n                Courses Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                            \n                                    Async\n                                deleteCourse\n                            \n                            \n                                    Async\n                                editCourse\n                            \n                            \n                                    Async\n                                getCourse\n                            \n                            \n                                    Async\n                                getCoursesDepartmentId\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser(res, createCourseDTO: CreateCourseDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/add')\n                \n            \n\n            \n                \n                    Defined in src/courses/courses.controller.ts:75\n                \n            \n\n\n            \n                \n                    Submit a course\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createCourseDTO\n                                    \n                                                CreateCourseDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteCourse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCourse(res, id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/delete')@ApiNotFoundResponse({description: 'Course does not exist!'})@ApiQuery({name: 'id', type: String})\n                \n            \n\n            \n                \n                    Defined in src/courses/courses.controller.ts:118\n                \n            \n\n\n            \n                \n                    Delete a course using ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editCourse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editCourse(res, id, createCourseDTO: CreateCourseDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/edit')@ApiQuery({name: 'id', type: String})@ApiForbiddenResponse({description: 'Course with this new email already exists'})\n                \n            \n\n            \n                \n                    Defined in src/courses/courses.controller.ts:92\n                \n            \n\n\n            \n                \n                    Edit a course\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createCourseDTO\n                                    \n                                                CreateCourseDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCourse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCourse(res, id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({description: 'The course has been successfully returned.'})@ApiForbiddenResponse({description: 'Forbidden.'})@ApiNotFoundResponse({description: 'Course does not exist.'})@ApiBadRequestResponse({description: 'Invalid id!'})@ApiParam({name: 'id', type: String})\n                \n            \n\n            \n                \n                    Defined in src/courses/courses.controller.ts:45\n                \n            \n\n\n            \n                \n                    Fetch a particular course using id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCoursesDepartmentId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCoursesDepartmentId(res, id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('courses/:departmentiId')@ApiOkResponse({description: 'The courses has been successfully returned by department id'})@ApiForbiddenResponse({description: 'Forbidden.'})@ApiNotFoundResponse({description: 'Course does not exist.'})@ApiBadRequestResponse({description: 'Invalid id!'})@ApiParam({name: 'departmentiId', type: String})\n                \n            \n\n            \n                \n                    Defined in src/courses/courses.controller.ts:64\n                \n            \n\n\n            \n                \n                    Fetch courses using department ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers(res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/courses')@ApiOkResponse({description: 'The courses list has been successfully returned.'})@ApiForbiddenResponse({description: 'Forbidden.'})\n                \n            \n\n            \n                \n                    Defined in src/courses/courses.controller.ts:29\n                \n            \n\n\n            \n                \n                    Fetch all courses\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseGuards, Get, Res, HttpStatus, Post, Body, Param, Put, Query, NotFoundException, Delete } from '@nestjs/common';\nimport { JwtAuthGuard } from 'src/auth/jwt-auth.guard';\nimport { CoursesService} from './courses.service';\nimport { ApiTags, ApiBearerAuth, ApiUnauthorizedResponse, ApiOkResponse, ApiForbiddenResponse, ApiBadRequestResponse, ApiNotFoundResponse, ApiParam, ApiQuery } from '@nestjs/swagger';\nimport { ObjectID } from 'mongodb';\nimport { ValidateObjectId } from 'src/pipes/validate-object-id.pipes';\nimport { CreateCourseDTO } from './dto/create-course.dto';\n\n\n/**\n * Courses Controller\n */\n@UseGuards(JwtAuthGuard)\n@Controller('courses')\n@ApiTags('Courses')\n@ApiBearerAuth()\n@ApiUnauthorizedResponse({description:'Access Token is not valid or has expired'})\nexport class CoursesController {\n    /**@ignore */\n    constructor(private coursesService: CoursesService) { }  \n    \n    /**\n     * Fetch all courses\n     * @param res \n     */\n    @Get('/courses')\n    @ApiOkResponse({description:'The courses list has been successfully returned.'})\n    @ApiForbiddenResponse({description:'Forbidden.'})\n    async getUsers(@Res() res) {\n      const courses = await this.coursesService.getCourses();\n      return res.status(HttpStatus.OK).json(courses);\n    }\n    \n    /**\n     * Fetch a particular course using id\n     * @param res \n     * @param id \n     */\n    @Get(':id')\n    @ApiOkResponse({ description:'The course has been successfully returned.'})\n    @ApiForbiddenResponse({description:'Forbidden.'})\n    @ApiNotFoundResponse({description:'Course does not exist.'})\n    @ApiBadRequestResponse({description:'Invalid id!'})\n    @ApiParam({ name: 'id', type: String })\n    async getCourse(@Res() res, @Param('id', new ValidateObjectId()) id) {\n      const course = await this.coursesService.getCourse(new ObjectID(id));\n      if (!id) {\n          throw new NotFoundException('Course does not exist!');\n      }\n      return res.status(HttpStatus.OK).json(course);\n    }\n    \n    /**\n     * Fetch courses using department ID\n     * @param res \n     * @param id \n     */\n    @Get('courses/:departmentiId')\n    @ApiOkResponse({ description:'The courses has been successfully returned by department id'})\n    @ApiForbiddenResponse({description:'Forbidden.'})\n    @ApiNotFoundResponse({description:'Course does not exist.'})\n    @ApiBadRequestResponse({description:'Invalid id!'})\n    @ApiParam({ name: 'departmentiId', type: String })\n    async getCoursesDepartmentId(@Res() res, @Param('departmentiId', new ValidateObjectId()) id) {\n        const departments = await this.coursesService.getCoursesDepartmentId(id);\n        return res.status(HttpStatus.OK).json(departments);\n    }\n\n    /**\n     * Submit a course\n     * @param res \n     * @param createCourseDTO \n     */\n    @Post('/add') \n    async addUser(@Res() res, @Body() createCourseDTO: CreateCourseDTO) { \n      const newCourse = await this.coursesService.addCourse(createCourseDTO);\n      return res.status(HttpStatus.OK).json({\n        message: 'Course has been submitted successfully!',\n        course: newCourse,\n      });\n    }   \n\n    /**\n     * Edit a course\n     * @param res \n     * @param id \n     * @param createCourseDTO \n     */\n    @Put('/edit')\n    @ApiQuery({ name: 'id', type: String })\n    @ApiForbiddenResponse({description:'Course with this new email already exists'})\n    async editCourse(\n      @Res() res,\n      @Query('id', new ValidateObjectId()) id,\n      @Body() createCourseDTO: CreateCourseDTO,\n    ) {\n      if (id != createCourseDTO._id) {\n        throw new NotFoundException('Incorrect course id');\n      }\n      const editedCourse= await this.coursesService.editCourse(id, createCourseDTO);\n      if (!editedCourse) {\n          throw new NotFoundException('Course does not exist!');\n      }\n      return res.status(HttpStatus.OK).json({\n        message: 'Course has been successfully updated',\n        course: editedCourse,\n      });\n    }\n    \n    /**\n     * Delete a course using ID\n     * @param res \n     * @param id \n     */\n    @Delete('/delete')\n    @ApiNotFoundResponse({description:'Course does not exist!'})\n    @ApiQuery({ name: 'id', type: String })\n    async deleteCourse(@Res() res, @Query('id', new ValidateObjectId()) id) {\n      const deletedCourse = await this.coursesService.deleteCourse(id);\n      if (!deletedCourse) {\n          throw new NotFoundException('Course does not exist!');\n      }\n      return res.status(HttpStatus.OK).json({\n        message: 'Course has been deleted!',\n        course: deletedCourse,\n      });\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoursesModule.html":{"url":"modules/CoursesModule.html","title":"module - CoursesModule","body":"\n                   \n\n\n\n\n    Modules\n    CoursesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_exports\n\n\n\ncluster_CoursesModule_providers\n\n\n\n\nCoursesService \n\nCoursesService \n\n\n\nCoursesModule\n\nCoursesModule\n\nCoursesService  -->\n\nCoursesModule->CoursesService \n\n\n\n\n\nCoursesService\n\nCoursesService\n\nCoursesModule -->\n\nCoursesService->CoursesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/courses/courses.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CoursesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CoursesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CoursesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CoursesController } from './courses.controller';\nimport { CoursesService } from './courses.service';\nimport { CourseSchema } from './schemas/course.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [  \n    MongooseModule.forFeature([{ name: 'Course', schema: CourseSchema }]),],\n  controllers: [CoursesController],\n  providers: [CoursesService],\n  exports: [CoursesService]\n})\nexport class CoursesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CoursesService.html":{"url":"injectables/CoursesService.html","title":"injectable - CoursesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CoursesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/courses.service.ts\n        \n\n            \n                Description\n            \n            \n                Courses Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addCourse\n                            \n                            \n                                    Async\n                                deleteCourse\n                            \n                            \n                                    Async\n                                editCourse\n                            \n                            \n                                    Async\n                                getCourse\n                            \n                            \n                                    Async\n                                getCourses\n                            \n                            \n                                    Async\n                                getCoursesDepartmentId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addCourse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCourse(createCourseDTO: CreateCourseDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/courses/courses.service.ts:50\n                \n            \n\n\n            \n                \n                    Add new course\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCourseDTO\n                                    \n                                                CreateCourseDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteCourse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCourse(id)\n                \n            \n\n\n            \n                \n                    Defined in src/courses/courses.service.ts:71\n                \n            \n\n\n            \n                \n                    Delete course\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        course id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editCourse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editCourse(id: any, createCourseDTO: CreateCourseDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/courses/courses.service.ts:61\n                \n            \n\n\n            \n                \n                    Edit course data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        course id\n\n                                    \n                                \n                                \n                                    createCourseDTO\n                                    \n                                                CreateCourseDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCourse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCourse(id)\n                \n            \n\n\n            \n                \n                    Defined in src/courses/courses.service.ts:28\n                \n            \n\n\n            \n                \n                    Get course by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Course id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCourses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCourses()\n                \n            \n\n\n            \n                \n                    Defined in src/courses/courses.service.ts:19\n                \n            \n\n\n            \n                \n                    Get all users courses\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCoursesDepartmentId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCoursesDepartmentId(id: any)\n                \n            \n\n\n            \n                \n                    Defined in src/courses/courses.service.ts:39\n                \n            \n\n\n            \n                \n                    Get courses by parent department id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        parent department id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { Course } from './interfaces/course.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ObjectId } from 'mongodb';\nimport { CreateCourseDTO } from './dto/create-course.dto';\n\n/**\n * Courses Service\n */\n@Injectable()\nexport class CoursesService {\n    /**@ignore */\n    constructor(@InjectModel('Course') private readonly courseModel: Model) { }\n    \n    /**\n     * Get all users courses\n     */\n    async getCourses() : Promise {\n        const courses = await this.courseModel.find().exec();\n        return courses;\n    }\n\n    /**\n     * Get course by id\n     * @param id Course id\n     */\n    async getCourse(id): Promise { \n        const course = await this.courseModel\n            .findOne({\"_id\": id})\n            .exec(); \n        return course;\n    }\n\n    /**\n     * Get courses by parent department id\n     * @param id parent department id\n     */\n    async getCoursesDepartmentId(id:any): Promise {\n        const courses = await this.courseModel\n            .find({\"parentDepartment\" : id})\n            .exec();\n        return courses;\n    }\n\n    /**\n     * Add new course\n     * @param createCourseDTO \n     */\n    async addCourse(createCourseDTO: CreateCourseDTO): Promise {\n        createCourseDTO._id = new ObjectId();\n        const newCourse = await new this.courseModel(createCourseDTO);\n        return newCourse.save();\n    }\n\n    /**\n     * Edit course data\n     * @param id course id\n     * @param createCourseDTO \n     */\n    async editCourse(id: any, createCourseDTO: CreateCourseDTO) : Promise {\n        const editedCourse= await this.courseModel\n            .findByIdAndUpdate(id, createCourseDTO, { new: true });\n        return editedCourse;\n    }\n\n    /**\n     * Delete course\n     * @param id course id\n     */\n    async deleteCourse(id): Promise {\n        const deletedCourse = await this.courseModel\n            .findByIdAndRemove(id);\n        return deletedCourse;\n    }    \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCourseDTO.html":{"url":"classes/CreateCourseDTO.html","title":"class - CreateCourseDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCourseDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/dto/create-course.dto.ts\n        \n\n            \n                Description\n            \n            \n                CreateCourseDTO\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                    Readonly\n                                consultationsNumber\n                            \n                            \n                                    Readonly\n                                controlWorksNumber\n                            \n                            \n                                    Readonly\n                                courseName\n                            \n                            \n                                    Readonly\n                                createdDate\n                            \n                            \n                                    Readonly\n                                createdUser\n                            \n                            \n                                    Readonly\n                                hoursNumber\n                            \n                            \n                                    Readonly\n                                laboratoryWorksNumber\n                            \n                            \n                                    Readonly\n                                lecturesNumber\n                            \n                            \n                                    Readonly\n                                parentDepartment\n                            \n                            \n                                    Readonly\n                                practicesNumber\n                            \n                            \n                                    Readonly\n                                selfEducationHours\n                            \n                            \n                                    Readonly\n                                seminarsNumber\n                            \n                            \n                                    Readonly\n                                students\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:10\n                            \n                        \n\n                \n                    \n                        Course id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            consultationsNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course consultations number', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:70\n                            \n                        \n\n                \n                    \n                        Course consultations number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            controlWorksNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course control works number', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:64\n                            \n                        \n\n                \n                    \n                        Course control works number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            courseName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course Name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:16\n                            \n                        \n\n                \n                    \n                        Course Name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course created Date'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:82\n                            \n                        \n\n                \n                    \n                        Course created Date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course created User id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:88\n                            \n                        \n\n                \n                    \n                        Course created User id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            hoursNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course hours number', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:28\n                            \n                        \n\n                \n                    \n                        Course hours number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            laboratoryWorksNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course laboratory works number', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:52\n                            \n                        \n\n                \n                    \n                        Course laboratory works number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lecturesNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course lectures number', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:34\n                            \n                        \n\n                \n                    \n                        Course lectures number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            parentDepartment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course parent Department id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:22\n                            \n                        \n\n                \n                    \n                        Course parent Department id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            practicesNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course practices number', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:46\n                            \n                        \n\n                \n                    \n                        Course practices number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            selfEducationHours\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course self education hours', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:58\n                            \n                        \n\n                \n                    \n                        Course self education hours\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            seminarsNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course seminars number', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:40\n                            \n                        \n\n                \n                    \n                        Course seminars number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            students\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Course students id', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/dto/create-course.dto.ts:76\n                            \n                        \n\n                \n                    \n                        Course students id\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n \n/**\n * CreateCourseDTO\n */\nexport class CreateCourseDTO {\n    /**\n     * Course id\n     */\n    _id: any;\n\n    /**\n     * Course Name\n     */\n    @ApiProperty({description: 'Course Name'})\n    readonly courseName: string;\n\n    /**\n     * Course parent Department id\n     */\n    @ApiProperty({description: 'Course parent Department id'})\n    readonly parentDepartment: string;\n\n    /**\n     * Course hours number\n     */\n    @ApiProperty({description: 'Course hours number',required: false})\n    readonly hoursNumber: number;\n\n    /**\n     * Course lectures number\n     */\n    @ApiProperty({description: 'Course lectures number',required: false})\n    readonly lecturesNumber: number;\n\n    /**\n     * Course seminars number\n     */\n    @ApiProperty({description: 'Course seminars number',required: false})\n    readonly seminarsNumber: number;\n\n    /**\n     * Course practices number\n     */\n    @ApiProperty({description: 'Course practices number',required: false})\n    readonly practicesNumber: number;\n\n    /**\n     * Course laboratory works number\n     */\n    @ApiProperty({description: 'Course laboratory works number',required: false})\n    readonly laboratoryWorksNumber: number;\n\n    /**\n     * Course self education hours\n     */\n    @ApiProperty({description: 'Course self education hours',required: false})\n    readonly selfEducationHours: number;\n\n    /**\n     * Course control works number\n     */\n    @ApiProperty({description: 'Course control works number',required: false})\n    readonly controlWorksNumber: number;\n\n    /**\n     * Course consultations number\n     */\n    @ApiProperty({description: 'Course consultations number',required: false})\n    readonly consultationsNumber: number;\n\n     /**\n     * Course students id\n     */\n    @ApiProperty({description: 'Course students id',required: false})\n    readonly students: Array;\n\n    /**\n     * Course created Date\n     */\n    @ApiProperty({description: 'Course created Date'})\n    readonly createdDate: Date;\n\n    /**\n     * Course created User id\n     */\n    @ApiProperty({description: 'Course created User id'})\n    readonly createdUser: string; \n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNodeDTO.html":{"url":"classes/CreateNodeDTO.html","title":"class - CreateNodeDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNodeDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/universities/dto/create-node.dto.ts\n        \n\n            \n                Description\n            \n            \n                Create Node DTO\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdDate\n                            \n                            \n                                createdUser\n                            \n                            \n                                mentors\n                            \n                            \n                                    Readonly\n                                nodeName\n                            \n                            \n                                parentNode\n                            \n                            \n                                teachers\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/universities/dto/create-node.dto.ts:10\n                            \n                        \n\n                \n                    \n                        Node id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Node created Date'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/universities/dto/create-node.dto.ts:40\n                            \n                        \n\n                \n                    \n                        Node created Date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Node created User id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/universities/dto/create-node.dto.ts:46\n                            \n                        \n\n                \n                    \n                        Node created User id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mentors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Array of the mentors id', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/universities/dto/create-node.dto.ts:34\n                            \n                        \n\n                \n                    \n                        Array of the mentors id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            nodeName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Node Name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/universities/dto/create-node.dto.ts:16\n                            \n                        \n\n                \n                    \n                        Node Name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentNode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Parent Node id', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/universities/dto/create-node.dto.ts:22\n                            \n                        \n\n                \n                    \n                        Parent Node id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teachers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Array of the teachers id', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/universities/dto/create-node.dto.ts:28\n                            \n                        \n\n                \n                    \n                        Array of the teachers id\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Create Node DTO\n */\nexport class CreateNodeDTO {\n    /**\n     * Node id\n     */\n    _id: any;\n\n    /**\n     * Node Name\n     */\n    @ApiProperty({description: 'Node Name'})\n    readonly nodeName: string;\n\n    /**\n     * Parent Node id\n     */\n    @ApiProperty({description: 'Parent Node id' ,required: false})\n    parentNode: string;\n\n    /**\n     * Array of the teachers id\n     */\n    @ApiProperty({description: 'Array of the teachers id',required: false})\n    teachers: Array;\n\n    /**\n     * Array of the mentors id\n     */\n    @ApiProperty({description: 'Array of the mentors id',required: false})\n    mentors: Array;\n\n    /**\n     * Node created Date\n     */\n    @ApiProperty({description: 'Node created Date'})\n    createdDate: Date;\n\n    /**\n     * Node created User id\n     */\n    @ApiProperty({description: 'Node created User id'})\n    createdUser: string; \n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDTO.html":{"url":"classes/CreateUserDTO.html","title":"class - CreateUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n            \n                Description\n            \n            \n                CreateUserDTO\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                contactPhone\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                interests\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'User id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:12\n                            \n                        \n\n                \n                    \n                        User id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contactPhone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'User Contact phone number', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:44\n                            \n                        \n\n                \n                    \n                        User Contact phone number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'User email'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:18\n                            \n                        \n\n                \n                    \n                        User email\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'User First Name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:30\n                            \n                        \n\n                \n                    \n                        User First Name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interests\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'User Interests', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:60\n                            \n                        \n\n                \n                    \n                        User Interests\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'User Last Name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:36\n                            \n                        \n\n                \n                    \n                        User Last Name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'User password'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:24\n                            \n                        \n\n                \n                    \n                        User password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'User Role', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:68\n                            \n                        \n\n                \n                    \n                        User Role\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'User Title', required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:52\n                            \n                        \n\n                \n                    \n                        User Title\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n \n/**\n * CreateUserDTO\n */\nexport class CreateUserDTO{\n\n    /**\n     * User id\n     */\n    @ApiProperty({description: 'User id'})\n    _id : any;\n\n    /**\n     * User email\n     */\n    @ApiProperty({description: 'User email'})\n    email: string;\n\n    /**\n     * User password\n     */\n    @ApiProperty({description: 'User password'})\n    password: string;\n    \n    /**\n     * User First Name\n     */\n    @ApiProperty({description: 'User First Name'})\n    firstName: string;\n\n    /**\n     * User Last Name\n     */\n    @ApiProperty({description: 'User Last Name'})\n     lastName: string;\n\n    /**\n     * User Contact phone number\n     */\n    @ApiProperty({description: 'User Contact phone number', \n        required: false \n    })\n    contactPhone: string;\n\n    /**\n     * User Title\n     */\n    @ApiProperty({description: 'User Title',\n        required: false \n    })\n    title: string;\n\n    /**\n     * User Interests\n     */\n    @ApiProperty({description: 'User Interests',\n        required: false        \n    })\n    interests: string;\n\n    /**\n     * User Role\n     */\n    @ApiProperty({description: 'User Role',\n        required: false        \n    })\n    role: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/InviteUserController.html":{"url":"controllers/InviteUserController.html","title":"controller - InviteUserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  InviteUserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/invite-user/invite-user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                invite\n            \n\n            \n                Description\n            \n            \n                Invite Users\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                inviteTecher\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            inviteTecher\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    inviteTecher(res, inviteUserDTO: InviteUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/teacher')\n                \n            \n\n            \n                \n                    Defined in src/invite-user/invite-user.controller.ts:25\n                \n            \n\n\n            \n                \n                    Invite Techer\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inviteUserDTO\n                                    \n                                                InviteUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpStatus, Post, Res, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags, ApiUnauthorizedResponse } from '@nestjs/swagger';\nimport { JwtAuthGuard } from 'src/auth/jwt-auth.guard';\nimport { InviteUserDTO } from './dto/invite-user.dto';\nimport { InviteUserService} from './invite-user.service';\n\n/**\n * Invite Users\n */\n@UseGuards(JwtAuthGuard)\n@Controller('invite')\n@ApiTags('Invite Users')\n@ApiBearerAuth()\n@ApiUnauthorizedResponse({description:'Access Token is not valid or has expired'})\nexport class InviteUserController {\n    /**@ignore */\n    constructor(private inviteUserService: InviteUserService) { } \n\n    /**\n     * Invite Techer\n     * @param res \n     * @param inviteUserDTO \n     */\n    @Post('/teacher')\n    async inviteTecher(@Res() res, @Body() inviteUserDTO: InviteUserDTO) {\n        const newTeacher = await this.inviteUserService.inviteTecher(inviteUserDTO);\n        return res.status(HttpStatus.OK).json({\n          message: 'Teacher has been invited successfully!',\n          user: newTeacher,\n        });\n    }\n    \n   \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InviteUserDTO.html":{"url":"classes/InviteUserDTO.html","title":"class - InviteUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InviteUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/invite-user/dto/invite-user.dto.ts\n        \n\n            \n                Description\n            \n            \n                Invite User DTO\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                homePage\n                            \n                            \n                                    Readonly\n                                nodeId\n                            \n                            \n                                    Readonly\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'User email'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/invite-user/dto/invite-user.dto.ts:17\n                            \n                        \n\n                \n                    \n                        User email\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            homePage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'registration page'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/invite-user/dto/invite-user.dto.ts:29\n                            \n                        \n\n                \n                    \n                        Registration page\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            nodeId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Node Id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/invite-user/dto/invite-user.dto.ts:11\n                            \n                        \n\n                \n                    \n                        Node Id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'User role'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/invite-user/dto/invite-user.dto.ts:23\n                            \n                        \n\n                \n                    \n                        User role\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Invite User DTO\n */\nexport class InviteUserDTO {\n    /**\n     * Node Id\n     */\n    @ApiProperty({description: 'Node Id'})\n    readonly nodeId: string;\n\n    /**\n     * User email\n     */\n    @ApiProperty({description: 'User email'})\n    readonly email: string;\n    \n    /**\n     * User role\n     */\n    @ApiProperty({description: 'User role'})\n    readonly role: string;\n    \n    /**\n     * Registration page\n     */\n    @ApiProperty({description: 'registration page'})\n    homePage: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InviteUserModule.html":{"url":"modules/InviteUserModule.html","title":"module - InviteUserModule","body":"\n                   \n\n\n\n\n    Modules\n    InviteUserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InviteUserModule\n\n\n\ncluster_InviteUserModule_imports\n\n\n\ncluster_InviteUserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nInviteUserModule\n\nInviteUserModule\n\nInviteUserModule -->\n\nAuthModule->InviteUserModule\n\n\n\n\n\nMailerEdu4uModule\n\nMailerEdu4uModule\n\nInviteUserModule -->\n\nMailerEdu4uModule->InviteUserModule\n\n\n\n\n\nUniversitiesModule\n\nUniversitiesModule\n\nInviteUserModule -->\n\nUniversitiesModule->InviteUserModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nInviteUserModule -->\n\nUsersModule->InviteUserModule\n\n\n\n\n\nInviteUserService\n\nInviteUserService\n\nInviteUserModule -->\n\nInviteUserService->InviteUserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/invite-user/invite-user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InviteUserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            InviteUserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            MailerEdu4uModule\n                        \n                        \n                            UniversitiesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { InviteUserService } from './invite-user.service';\nimport { InviteUserController } from './invite-user.controller';\nimport {UsersModule} from '../users/users.module';\nimport {UniversitiesModule} from '../universities/universities.module';\nimport {MailerEdu4uModule} from '../mailer-edu4u/mailer-edu4u.module';\nimport {AuthModule} from '../auth/auth.module';\n\n@Module({\n  imports:[UsersModule, \n           MailerEdu4uModule,\n           UniversitiesModule,\n           AuthModule,\n           ],\n  providers: [InviteUserService],\n  controllers: [InviteUserController]\n})\nexport class InviteUserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InviteUserService.html":{"url":"injectables/InviteUserService.html","title":"injectable - InviteUserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InviteUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/invite-user/invite-user.service.ts\n        \n\n            \n                Description\n            \n            \n                Invite User Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMailText\n                            \n                            \n                                    Async\n                                inviteTecher\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMailText\n                        \n                        \n                    \n                \n            \n            \n                \ngetMailText(departmentName: string, instititeName: string, univerName: string, iviteUser: InviteUserDTO, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/invite-user/invite-user.service.ts:70\n                \n            \n\n\n            \n                \n                    Get Mail Text\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    departmentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    instititeName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    univerName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    iviteUser\n                                    \n                                                InviteUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            inviteTecher\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    inviteTecher(inviteUserDTO: InviteUserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/invite-user/invite-user.service.ts:24\n                \n            \n\n\n            \n                \n                    Invite Techer\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inviteUserDTO\n                                    \n                                                InviteUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        invite User DTO\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InviteUserDTO } from './dto/invite-user.dto';\nimport { UsersService } from '../users/users.service';\nimport { UniversitiesService } from '../universities/universities.service';\nimport { MailerEdu4uService } from '../mailer-edu4u/mailer-edu4u.service';\nimport { AuthService } from '../auth/auth.service';\nimport { CreateUserDTO } from 'src/users/dto/create-user.dto';\nimport { User } from 'src/users/interfaces/user.interface';\n\n/**\n * Invite User Service\n */\n@Injectable()\nexport class InviteUserService {\n    /**@ignore */\n    constructor(private usersService: UsersService, \n                private universitiesService: UniversitiesService,\n                private mailerEdu4uService: MailerEdu4uService,\n                private authService: AuthService) { }\n    /**\n     * Invite Techer\n     * @param inviteUserDTO invite User DTO\n     */\n    async inviteTecher(inviteUserDTO: InviteUserDTO) {\n        if(!inviteUserDTO){\n            throw new NotFoundException('Invalid inviteUserDTO');\n        }  \n        var node = await  this.universitiesService.getNode(inviteUserDTO.nodeId);\n        if(!node){\n            throw new NotFoundException('Node not found');\n        }\n        var user = await this.usersService.findUserByEmail(inviteUserDTO.email);\n        if(!user){\n            var newUser = new CreateUserDTO;\n            newUser.email = inviteUserDTO.email;\n            newUser.role = 'teacher';\n            newUser.password = 'newUserPassword';\n            newUser.contactPhone = '';\n            newUser.firstName = '';\n            newUser.lastName = '';\n            newUser.title = '';\n            newUser.interests = '';\n            user = await this.usersService.addUser(newUser);\n        }\n        if(user.role != 'teacher'){ \n          user = await this.usersService.editUser(user._id, user);\n        }          \n        if(!node.teachers.includes(user._id))\n            node.teachers.push(user._id);\n        this.universitiesService.editNode(node._id, node);\n        var institite = await this.universitiesService.getNode(node.parentNode);\n        var univer = await this.universitiesService.getNode(institite.parentNode); \n        if(!inviteUserDTO.homePage){\n          inviteUserDTO.homePage = 'https://edu4u.gitlab.io/edu4u/#'\n        }\n        this.mailerEdu4uService.sendMail(\n          user.email, \n          'Реєстрація викладача EDU4U', \n          this.getMailText(node.nodeName, institite.nodeName, univer.nodeName, inviteUserDTO, user ));\n        return user;\n    }\n    /**\n     * Get Mail Text\n     * @param departmentName \n     * @param instititeName \n     * @param univerName \n     * @param iviteUser \n     * @param user \n     */\n    getMailText(departmentName: string, instititeName: string, univerName: string, iviteUser: InviteUserDTO, user: User ):string {\n        const htmlOutput = `\n        \n        \n        \n        \n           \n          \n          \n          \n          \n          \n          \n            #outlook a {\n              padding: 0;\n            }\n        \n            body {\n              margin: 0;\n              padding: 0;\n              -webkit-text-size-adjust: 100%;\n              -ms-text-size-adjust: 100%;\n            }\n        \n            table,\n            td {\n              border-collapse: collapse;\n              mso-table-lspace: 0pt;\n              mso-table-rspace: 0pt;\n            }\n        \n            img {\n              border: 0;\n              height: auto;\n              line-height: 100%;\n              outline: none;\n              text-decoration: none;\n              -ms-interpolation-mode: bicubic;\n            }\n        \n            p {\n              display: block;\n              margin: 13px 0;\n            }\n          \n          \n                \n                \n                  \n                  96\n                \n                \n                \n          \n                \n                  .mj-outlook-group-fix { width:100% !important; }\n                \n                \n          \n            @media only screen and (min-width:480px) {\n              .mj-column-per-100 {\n                width: 100% !important;\n                max-width: 100%;\n              }\n            }\n          \n          \n            @media only screen and (max-width:480px) {\n              table.mj-full-width-mobile {\n                width: 100% !important;\n              }\n              td.mj-full-width-mobile {\n                width: auto !important;\n              }\n            }\n          \n        \n        \n        \n          \n            \n              \n                \n                  \n              \n            \n              \n                \n                  \n                    \n                      \n                          \n                        \n                \n              \n                    \n                  \n                      \n                        \n                          \n                            \n                              \n                                \n                                  \n                                      \n                                  \n                                \n                              \n                            \n                          \n                          \n                            \n                              Доброго дня\n                            \n                          \n                          \n                            \n                              Вас було зареєстровано в системі EDU4U як викладача \n                  ${departmentName} \n                              \n                  ${instititeName}\n                  \n                  ${univerName}\n                   Перейдіть за посиланням для продовження реєстрації.\n                            \n                          \n                          \n                            \n                              \n                                \n                                  \n                                    \n                                    Перейти за посиланням  \n                                  \n                                \n                              \n                            \n                          \n                        \n                      \n                      \n                    \n                  \n                \n              \n                          \n                        \n                    \n                  \n                \n              \n            \n            \n                  \n                \n              \n              \n              \n                \n                  \n              \n            \n              \n                \n                  \n                    \n                      \n                          \n                        \n                \n              \n                    \n                  \n                      \n                        \n                          \n                            \n                              З повагою адміністрація EDU4U\n                            \n                          \n                        \n                      \n                      \n                    \n                  \n                \n              \n                          \n                        \n                    \n                  \n                \n              \n            \n            \n                  \n                \n              \n              \n          \n        \n        \n        \n                \n        `;\nreturn htmlOutput;\n    }\n\n     \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n            \n                Description\n            \n            \n                JwtAuthGuard extends AuthGuard\n\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n/**\n * JwtAuthGuard extends AuthGuard\n */\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n            \n                Description\n            \n            \n                JwtStrategy extends PassportStrategy\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            ignore \n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:23\n                \n            \n\n\n            \n                \n                    validate payload\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\n\n/**\n * JwtStrategy extends PassportStrategy\n */\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  /**ignore */\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET || \"MySecret\",\n    });\n  }\n\n  /**\n   * validate payload\n   * @param payload \n   */\n  async validate(payload: any) {\n    return { _id: payload.sub, email: payload.email };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n            \n                Description\n            \n            \n                LocalStrategy extends PassportStrategy\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:21\n                \n            \n\n\n            \n                \n                    Validate user email and password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n/**\n * LocalStrategy extends PassportStrategy\n */\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  /**@ignore */\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  /**\n   * Validate user email and password\n   * @param email \n   * @param password \n   */\n  async validate(email: string, password: string): Promise { \n    const user = await this.authService.validateUser(email, password);\n    if (!user.payload) {\n      throw new UnauthorizedException(user.message);\n    }\n    return user.payload;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailerEdu4uModule.html":{"url":"modules/MailerEdu4uModule.html","title":"module - MailerEdu4uModule","body":"\n                   \n\n\n\n\n    Modules\n    MailerEdu4uModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailerEdu4uModule\n\n\n\ncluster_MailerEdu4uModule_exports\n\n\n\ncluster_MailerEdu4uModule_providers\n\n\n\n\nMailerEdu4uService \n\nMailerEdu4uService \n\n\n\nMailerEdu4uModule\n\nMailerEdu4uModule\n\nMailerEdu4uService  -->\n\nMailerEdu4uModule->MailerEdu4uService \n\n\n\n\n\nMailerEdu4uService\n\nMailerEdu4uService\n\nMailerEdu4uModule -->\n\nMailerEdu4uService->MailerEdu4uModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mailer-edu4u/mailer-edu4u.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailerEdu4uService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailerEdu4uService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailerEdu4uService } from './mailer-edu4u.service';\n\n@Module({\n  providers: [MailerEdu4uService],\n  exports: [MailerEdu4uService]\n})\nexport class MailerEdu4uModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailerEdu4uService.html":{"url":"injectables/MailerEdu4uService.html","title":"injectable - MailerEdu4uService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailerEdu4uService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mailer-edu4u/mailer-edu4u.service.ts\n        \n\n            \n                Description\n            \n            \n                Mailer class\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            sendMail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMail(mailTo: string, subject: string, mailText: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mailer-edu4u/mailer-edu4u.service.ts:17\n                \n            \n\n\n            \n                \n                    Send Mail\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    mailTo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        sendMail\n\n                                    \n                                \n                                \n                                    subject\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mailsubject\n\n                                    \n                                \n                                \n                                    mailText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mail Text\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailerService } from '@nestjs-modules/mailer';\nimport { Injectable } from '@nestjs/common';\n\n/**\n * Mailer class\n */\n@Injectable()\nexport class MailerEdu4uService {\n    /**@ignore */\n    constructor(private readonly mailerService: MailerService) {}\n    /**\n     * Send Mail\n     * @param mailTo sendMail\n     * @param subject mailsubject\n     * @param mailText mail Text\n     */\n    public sendMail(mailTo: string, subject: string, mailText: string): void {\n        this.mailerService\n        .sendMail({\n            to: mailTo,\n            from: 'edu4u.user@gmail.com', \n            subject: subject, \n            html: mailText\n        })\n        .then(() => {})\n        .catch(() => {});\n    }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Node.html":{"url":"interfaces/Node.html","title":"interface - Node","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Node\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/universities/interfaces/node.interface.ts\n        \n\n            \n                Description\n            \n            \n                Node mongoose Document\n\n            \n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        createdDate\n                                \n                                \n                                        createdUser\n                                \n                                \n                                        mentors\n                                \n                                \n                                        nodeName\n                                \n                                \n                                        parentNode\n                                \n                                \n                                        teachers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Node id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdDate\n                                    \n                                \n                                \n                                    \n                                        createdDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Node created Date\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdUser\n                                    \n                                \n                                \n                                    \n                                        createdUser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Node created User\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mentors\n                                    \n                                \n                                \n                                    \n                                        mentors:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Node mentors\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodeName\n                                    \n                                \n                                \n                                    \n                                        nodeName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Node Name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentNode\n                                    \n                                \n                                \n                                    \n                                        parentNode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    parent Node id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teachers\n                                    \n                                \n                                \n                                    \n                                        teachers:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Node teachers\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\n\n/**\n * Node mongoose Document\n */\nexport interface Node extends Document {\n    /**\n     * Node id\n     */\n    readonly _id: string;\n\n    /**\n     * Node Name\n     */\n    readonly nodeName: string;\n\n    /**\n     * parent Node id\n     */\n    readonly parentNode: string;\n\n    /**\n     * Node teachers\n     */\n    readonly teachers: Array;\n\n    /**\n     * Node mentors\n     */\n    readonly mentors: Array;\n\n    /**\n     * Node created Date\n     */\n    readonly createdDate: Date;\n\n    /**\n     * Node created User\n     */\n    readonly createdUser: string; \n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeachersController.html":{"url":"controllers/TeachersController.html","title":"controller - TeachersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeachersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teachers/teachers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                teachers\n            \n\n            \n                Description\n            \n            \n                Teachers Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                            \n                                    Async\n                                loginNewUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser(res, createUserDTO: CreateUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/add')@ApiForbiddenResponse({description: 'User with this email already exists'})\n                \n            \n\n            \n                \n                    Defined in src/teachers/teachers.controller.ts:46\n                \n            \n\n\n            \n                \n                    Submit a new teacher\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createUserDTO\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loginNewUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginNewUser(res, id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/newteacher/:id')@ApiParam({name: 'id', type: String})@ApiOkResponse({description: 'result new teacher email'})@ApiForbiddenResponse({description: 'Teacher does not new!'})@ApiUnauthorizedResponse({description: 'Teacher doesn't exist!'})@ApiNotFoundResponse({description: 'Teacher doesn't exist!'})\n                \n            \n\n            \n                \n                    Defined in src/teachers/teachers.controller.ts:32\n                \n            \n\n\n            \n                \n                    Get new teacher by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, ForbiddenException, Get, HttpStatus, NotFoundException, Param, Post, Res } from '@nestjs/common';\nimport { ApiForbiddenResponse, ApiNotFoundResponse, ApiOkResponse, ApiParam, ApiTags, ApiUnauthorizedResponse } from '@nestjs/swagger';\nimport { ValidateObjectId } from 'src/pipes/validate-object-id.pipes';\nimport { TeachersService} from './teachers.service'\nimport { UsersService } from '../users/users.service';\nimport { AuthService} from '../auth/auth.service';\nimport { CreateUserDTO } from 'src/users/dto/create-user.dto';\n\n\n/**\n * Teachers Controller\n */\n@ApiTags('Teachers')\n@Controller('teachers')\nexport class TeachersController {\n    /**@ignore */\n    constructor(private teachersService: TeachersService,\n        private usersService: UsersService,\n        private authService: AuthService) { }  \n\n    /**\n     * Get new teacher by id\n     * @param res \n     * @param id \n     */\n    @Get('/newteacher/:id')\n    @ApiParam({ name: 'id', type: String })\n    @ApiOkResponse({description: 'result new teacher email'})\n    @ApiForbiddenResponse({description: 'Teacher does not new!'})\n    @ApiUnauthorizedResponse({description: 'Teacher doesn\\'t exist!'})\n    @ApiNotFoundResponse({description: 'Teacher doesn\\'t exist!'})\n    async loginNewUser(\n        @Res() res, @Param('id', new ValidateObjectId()) id) {\n        const teacher = await this.teachersService.getNewTeacher(id);   \n        var result = { 'teacher_email' : teacher.email};\n        return res.status(HttpStatus.OK).json(result);     \n    }    \n\n    /**\n     * Submit a new teacher\n     * @param res \n     * @param createUserDTO \n     */    \n    @Post('/add')\n    @ApiForbiddenResponse({description:'User with this email already exists'})\n    async addUser(@Res() res, @Body() createUserDTO: CreateUserDTO) {\n        const teacher = await this.teachersService.getNewTeacher(createUserDTO._id); \n        if(teacher.email != createUserDTO.email){\n            throw new ForbiddenException('Teacher has wrong email!');\n        }\n        createUserDTO.role = 'teacher';\n        var user = await this.usersService.editUser(createUserDTO._id , createUserDTO); \n        return res.status(HttpStatus.OK).json( {\n            access_token : (await this.authService.login(user)).access_token,\n            profile: user\n          });        \n    } \n\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeachersModule.html":{"url":"modules/TeachersModule.html","title":"module - TeachersModule","body":"\n                   \n\n\n\n\n    Modules\n    TeachersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeachersModule\n\n\n\ncluster_TeachersModule_imports\n\n\n\ncluster_TeachersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nTeachersModule\n\nTeachersModule\n\nTeachersModule -->\n\nAuthModule->TeachersModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nTeachersModule -->\n\nUsersModule->TeachersModule\n\n\n\n\n\nTeachersService\n\nTeachersService\n\nTeachersModule -->\n\nTeachersService->TeachersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/teachers/teachers.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TeachersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TeachersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TeachersController } from './teachers.controller';\nimport { TeachersService } from './teachers.service';\nimport { UsersModule } from '../users/users.module';\nimport { AuthModule } from '../auth/auth.module';\n\n@Module({\n  imports: [UsersModule,\n    AuthModule],\n  controllers: [TeachersController],\n  providers: [TeachersService]\n})\nexport class TeachersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeachersService.html":{"url":"injectables/TeachersService.html","title":"injectable - TeachersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeachersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teachers/teachers.service.ts\n        \n\n            \n                Description\n            \n            \n                Teachers Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getNewTeacher\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNewTeacher\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewTeacher(id: any)\n                \n            \n\n\n            \n                \n                    Defined in src/teachers/teachers.service.ts:20\n                \n            \n\n\n            \n                \n                    Get New Teacher\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Teacher id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, NotFoundException } from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\n/**\n * bcrypt\n */\nconst bcrypt = require('bcrypt');\n\n/**\n * Teachers Service\n */\n@Injectable()\nexport class TeachersService {\n    /**@ignore */\n    constructor( private usersService: UsersService ) { } \n\n    /**\n     * Get New Teacher\n     * @param id  Teacher id\n     */\n    async getNewTeacher(id: any) {\n        const user = await this.usersService.getUser(new Object(id));\n        if (!user) {\n            throw new NotFoundException('Teacher does not exist!');\n        }\n        if (!(await bcrypt.compare('newUserPassword', user.password))) {\n            throw new ForbiddenException('Teacher does not new!');\n        }\n        return user;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UniversitiesController.html":{"url":"controllers/UniversitiesController.html","title":"controller - UniversitiesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UniversitiesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/universities/universities.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                universities\n            \n\n            \n                Description\n            \n            \n                Universities Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNode\n                            \n                            \n                                    Async\n                                deleteNode\n                            \n                            \n                                    Async\n                                editNode\n                            \n                            \n                                    Async\n                                getNode\n                            \n                            \n                                    Async\n                                getNodes\n                            \n                            \n                                    Async\n                                getNodesPatentID\n                            \n                            \n                                    Async\n                                getTeachersInfo\n                            \n                            \n                                    Async\n                                getTree\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNode(res, createNodeDTO: CreateNodeDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/add')\n                \n            \n\n            \n                \n                    Defined in src/universities/universities.controller.ts:107\n                \n            \n\n\n            \n                \n                    Submit a node\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createNodeDTO\n                                    \n                                                CreateNodeDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteNode(res, id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/delete')@ApiQuery({name: 'id', type: String})\n                \n            \n\n            \n                \n                    Defined in src/universities/universities.controller.ts:151\n                \n            \n\n\n            \n                \n                    Delete a node using id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editNode(res, id, createNodeDTO: CreateNodeDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/edit')@ApiQuery({name: 'id', type: String})\n                \n            \n\n            \n                \n                    Defined in src/universities/universities.controller.ts:126\n                \n            \n\n\n            \n                \n                    Edit a node\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createNodeDTO\n                                    \n                                                CreateNodeDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNode(res, id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({description: 'The node has been successfully returned.'})@ApiBadRequestResponse({description: 'Invalid id!'})@ApiParam({name: 'id', type: String})\n                \n            \n\n            \n                \n                    Defined in src/universities/universities.controller.ts:76\n                \n            \n\n\n            \n                \n                    Fetch a particular node using id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNodes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodes(res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/universities')@ApiOkResponse({description: 'The universities list has been successfully returned.'})\n                \n            \n\n            \n                \n                    Defined in src/universities/universities.controller.ts:44\n                \n            \n\n\n            \n                \n                    Fetch all universities\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNodesPatentID\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodesPatentID(res, id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('nodes/:id')@ApiOkResponse({description: 'The nodes has been successfully returned by parent id'})@ApiBadRequestResponse({description: 'Invalid id!'})@ApiParam({name: 'id', type: String})\n                \n            \n\n            \n                \n                    Defined in src/universities/universities.controller.ts:93\n                \n            \n\n\n            \n                \n                    Fetch nodes using patent ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTeachersInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTeachersInfo(res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/teachers')@ApiOkResponse({description: 'The teachers list has been successfully returned.'})\n                \n            \n\n            \n                \n                    Defined in src/universities/universities.controller.ts:58\n                \n            \n\n\n            \n                \n                    Fetch all universities\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTree\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTree(res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/tree')@ApiOkResponse({description: 'The tree of universities list has been successfully returned.'})\n                \n            \n\n            \n                \n                    Defined in src/universities/universities.controller.ts:30\n                \n            \n\n\n            \n                \n                    Fetch all tree of universities\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseGuards, Get, Res, Param, Post, Body, Put, Query, Delete, NotFoundException, HttpStatus } from '@nestjs/common';\nimport { JwtAuthGuard } from 'src/auth/jwt-auth.guard';\nimport { ApiTags, ApiBearerAuth, ApiUnauthorizedResponse, ApiOkResponse, ApiForbiddenResponse, ApiNotFoundResponse, ApiBadRequestResponse, ApiParam, ApiQuery } from '@nestjs/swagger';\nimport { ObjectID } from 'mongodb';\nimport { ValidateObjectId } from 'src/pipes/validate-object-id.pipes';\nimport { UniversitiesService } from './universities.service';\nimport { CreateNodeDTO } from './dto/create-node.dto';\nimport {UsersService} from '../users/users.service'; \n\n/**\n * Universities Controller\n */\n@UseGuards(JwtAuthGuard)\n@Controller('universities')\n@ApiTags('Universities')\n@ApiBearerAuth()\n@ApiUnauthorizedResponse({description:'Access Token is not valid or has expired'})\n@ApiForbiddenResponse({description:'Forbidden.'})\n@ApiNotFoundResponse({description:'Node does not exist.'})\nexport class UniversitiesController {\n      /**@ignore */\n      constructor(private universitiesService: UniversitiesService ,private usersService:UsersService ) { }  \n    \n    /**\n     * Fetch all tree of universities\n     * @param res \n     */\n    @Get('/tree')\n    @ApiOkResponse({description:'The tree of universities list has been successfully returned.'})\n    async getTree(@Res() res) {      \n      var tree = await this.universitiesService.getTree();\n      if (!tree) {\n        throw new NotFoundException('Universities does not exist!');\n      }\n      return res.status(HttpStatus.OK).json(tree);\n    }\n\n    /**\n     * Fetch all universities\n     * @param res \n     */\n    @Get('/universities')\n    @ApiOkResponse({description:'The universities list has been successfully returned.'})\n    async getNodes(@Res() res) {\n      const Universities = await this.universitiesService.getNodes(\"\");\n      if (!Universities) {\n        throw new NotFoundException('Universities does not exist!');\n      }\n      return res.status(HttpStatus.OK).json(Universities);\n    }\n\n    /**\n     * Fetch all universities\n     * @param res \n     */\n    @Get('/teachers')\n    @ApiOkResponse({description:'The teachers list has been successfully returned.'})\n    async getTeachersInfo(@Res() res) {\n      const teachers = await this.universitiesService.getTeachersInfo();\n      if (!teachers) {\n        throw new NotFoundException('Teachers does not exist!');\n      }\n      return res.status(HttpStatus.OK).json(teachers);\n    }\n       \n\n    /**\n     * Fetch a particular node using id\n     * @param res \n     * @param id \n     */\n    @Get(':id')\n    @ApiOkResponse({ description:'The node has been successfully returned.'})    \n    @ApiBadRequestResponse({description:'Invalid id!'})\n    @ApiParam({ name: 'id', type: String })\n    async getNode(@Res() res, @Param('id', new ValidateObjectId()) id) {\n      const node = await this.universitiesService.getNode(new ObjectID(id));\n      if (!node) {\n          throw new NotFoundException('Node does not exist!');\n      }\n      return res.status(HttpStatus.OK).json(node);\n    }\n    \n    /**\n     * Fetch nodes using patent ID\n     * @param res \n     * @param id \n     */\n    @Get('nodes/:id')\n    @ApiOkResponse({ description:'The nodes has been successfully returned by parent id'})\n    @ApiBadRequestResponse({description:'Invalid id!'})\n    @ApiParam({ name: 'id', type: String })\n    async getNodesPatentID(@Res() res, @Param('id', new ValidateObjectId()) id) {\n      const nodes = await this.universitiesService.getNodes(id);\n      if (!nodes) {\n        throw new NotFoundException('nodes does not exist!');\n      }\n      return res.status(HttpStatus.OK).json(nodes);\n    }\n\n    /**\n     * Submit a node\n     * @param res \n     * @param createNodeDTO \n     */\n    @Post('/add') \n    async addNode(@Res() res, @Body() createNodeDTO: CreateNodeDTO) { \n      const newNode = await this.universitiesService.addNode(createNodeDTO);\n      if (!newNode) {\n        throw new NotFoundException('newNode does not exist!');\n      }\n      return res.status(HttpStatus.OK).json({\n        message: 'Node has been submitted successfully!',\n        node: newNode,\n      });\n    }   \n\n    /**\n     * Edit a node\n     * @param res \n     * @param id \n     * @param createNodeDTO \n     */\n    @Put('/edit')\n    @ApiQuery({ name: 'id', type: String }) \n    async editNode(\n      @Res() res,\n      @Query('id', new ValidateObjectId()) id,\n      @Body() createNodeDTO: CreateNodeDTO,\n    ) {\n      if (id != createNodeDTO._id) {\n        throw new NotFoundException('Incorrect node id');\n      }\n      const editedNode= await this.universitiesService.editNode(id, createNodeDTO);\n      if (!editedNode) {\n          throw new NotFoundException('Node does not exist!');\n      }\n      return res.status(HttpStatus.OK).json({\n        message: 'Node has been successfully updated',\n        node: editedNode,\n      });\n    }\n    \n    /**\n     * Delete a node using id\n     * @param res \n     * @param id \n     */\n    @Delete('/delete')\n    @ApiQuery({ name: 'id', type: String })\n    async deleteNode(@Res() res, @Query('id', new ValidateObjectId()) id) {\n      const deletedNode = await this.universitiesService.deleteNode(id);\n      if (!deletedNode) {\n          throw new NotFoundException('Node does not exist!');\n      }\n      return res.status(HttpStatus.OK).json({\n        message: 'Node has been deleted!',\n        node: deletedNode,\n      });\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UniversitiesModule.html":{"url":"modules/UniversitiesModule.html","title":"module - UniversitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    UniversitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UniversitiesModule\n\n\n\ncluster_UniversitiesModule_imports\n\n\n\ncluster_UniversitiesModule_exports\n\n\n\ncluster_UniversitiesModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nUniversitiesModule\n\nUniversitiesModule\n\nUniversitiesModule -->\n\nUsersModule->UniversitiesModule\n\n\n\n\n\nUniversitiesService \n\nUniversitiesService \n\nUniversitiesService  -->\n\nUniversitiesModule->UniversitiesService \n\n\n\n\n\nUniversitiesService\n\nUniversitiesService\n\nUniversitiesModule -->\n\nUniversitiesService->UniversitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/universities/universities.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UniversitiesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UniversitiesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UniversitiesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UniversitiesController } from './universities.controller';\nimport { UniversitiesService } from './universities.service';\nimport { NodeSchema } from './schemas/node.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {UsersModule} from '../users/users.module';\n\n@Module({\n  imports: [  \n    MongooseModule.forFeature([{ name: 'Node', schema: NodeSchema }]),\n    UsersModule],\n  controllers: [UniversitiesController],\n  providers: [UniversitiesService],\n  exports: [UniversitiesService]\n})\nexport class UniversitiesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UniversitiesService.html":{"url":"injectables/UniversitiesService.html","title":"injectable - UniversitiesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UniversitiesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/universities/universities.service.ts\n        \n\n            \n                Description\n            \n            \n                Universities Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNode\n                            \n                            \n                                    Async\n                                deleteNode\n                            \n                            \n                                    Async\n                                editNode\n                            \n                            \n                                getDepartments\n                            \n                            \n                                getInstitutions\n                            \n                            \n                                    Async\n                                getNode\n                            \n                            \n                                    Async\n                                getNodes\n                            \n                            \n                                getTeachers\n                            \n                            \n                                    Async\n                                getTeachersInfo\n                            \n                            \n                                    Async\n                                getTree\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNode(createNodeDTO: CreateNodeDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/universities/universities.service.ts:153\n                \n            \n\n\n            \n                \n                    Add new Node\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createNodeDTO\n                                    \n                                                CreateNodeDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteNode(id)\n                \n            \n\n\n            \n                \n                    Defined in src/universities/universities.service.ts:187\n                \n            \n\n\n            \n                \n                    Delete Node by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editNode(id: any, createNodeDTO: CreateNodeDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/universities/universities.service.ts:167\n                \n            \n\n\n            \n                \n                    Edit Node by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createNodeDTO\n                                    \n                                                CreateNodeDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDepartments\n                        \n                        \n                    \n                \n            \n            \n                \ngetDepartments(id, allNodes, allUsers)\n                \n            \n\n\n            \n                \n                    Defined in src/universities/universities.service.ts:115\n                \n            \n\n\n            \n                \n                    get Departments\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Institute id\n\n                                    \n                                \n                                \n                                    allNodes\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        all nodes\n\n                                    \n                                \n                                \n                                    allUsers\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        all nodes\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInstitutions\n                        \n                        \n                    \n                \n            \n            \n                \ngetInstitutions(id, allNodes, allUsers)\n                \n            \n\n\n            \n                \n                    Defined in src/universities/universities.service.ts:97\n                \n            \n\n\n            \n                \n                    get Institutions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        universiry id\n\n                                    \n                                \n                                \n                                    allNodes\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        all nodes\n\n                                    \n                                \n                                \n                                    allUsers\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        all users\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNode(id)\n                \n            \n\n\n            \n                \n                    Defined in src/universities/universities.service.ts:36\n                \n            \n\n\n            \n                \n                    Get Node by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNodes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodes(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/universities/universities.service.ts:25\n                \n            \n\n\n            \n                \n                    Get Nodes by parentNode id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeachers\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeachers(teachers, allUsers)\n                \n            \n\n\n            \n                \n                    Defined in src/universities/universities.service.ts:132\n                \n            \n\n\n            \n                \n                    get Teachers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teachers\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    allUsers\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTeachersInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTeachersInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/universities/universities.service.ts:46\n                \n            \n\n\n            \n                \n                    Get informations about all teachers\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTree\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTree()\n                \n            \n\n\n            \n                \n                    Defined in src/universities/universities.service.ts:75\n                \n            \n\n\n            \n                \n                    Get all tree of all nodes\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Node } from './interfaces/node.interface';\nimport { ObjectId } from 'mongodb';\nimport { CreateNodeDTO } from './dto/create-node.dto';\nimport { UsersService } from 'src/users/users.service';\n\n/**\n * Universities Service\n */\n@Injectable()\nexport class UniversitiesService {\n \n    /**\n     * @ignore\n     * @param nodeModel \n     */\n    constructor( @InjectModel('Node') private readonly nodeModel: Model, private usersService: UsersService ) { }\n    \n    /**\n     * Get Nodes by parentNode id\n     * @param id \n     */\n    async getNodes(id: string) : Promise {\n        const nodes = await this.nodeModel\n            .find({\"parentNode\" : id})\n            .exec();\n        return nodes;\n    }\n\n    /**\n     * Get Node by id\n     * @param id \n     */\n    async getNode(id): Promise { \n        const node = await this.nodeModel\n            .findOne({\"_id\": id})\n            .exec(); \n        return node;\n    }\n\n    /**\n     * Get informations about all teachers\n     */\n    async getTeachersInfo(): Promise {\n        var allUsers = await this.usersService.getUsers();\n        var allNodes = await this.nodeModel\n            .find({}) \n            .exec();\n        var nodes = allNodes.filter(x=>x.teachers.length > 0);\n        var teachersInfo =[];\n        nodes.map(department => {\n            var institute =  allNodes.filter(x=>x._id == department.parentNode)[0];\n            if(institute){    \n                var university = allNodes.filter(x=>x._id == institute.parentNode)[0];\n                if(university){\n                    department.teachers.map(async teacher =>{\n                        var user = await allUsers.filter(x=>x._id == teacher)[0];\n                        if(user){ \n                        teachersInfo.push( {\n                            \"teacher\" : { \"id\" : teacher, \"firstName\": user.firstName, \"lastName\": user.lastName},\n                            \"university\" : {\"id\": university._id , \"name\":university.nodeName},  \n                            \"institute\" : {\"id\": institute._id , \"name\":institute.nodeName},\n                            \"department\" : {\"id\": department._id , \"name\":department.nodeName},\n                            \"courses\" : 0\n                    }\n            )}})}}});\n        return teachersInfo;\n    }\n\n    /**\n     * Get all tree of all nodes\n     */\n    async getTree() : Promise {\n        var allUsers = await this.usersService.getUsers();\n        var allNodes = await this.nodeModel\n            .find({}) \n            .exec();\n        var nodes = allNodes.filter(x=>x.parentNode ==\"\");\n        var tree =[];\n        nodes.map(element => \n               tree.push( {\n                \"id\" : element._id,\n                \"name\" : element.nodeName,  \n                \"institutions\" : this.getInstitutions(element._id,allNodes,allUsers)                    \n            }));\n        return tree\n    }\n\n    /**\n     * get Institutions\n     * @param id universiry id\n     * @param allNodes all nodes\n     * @param allUsers all users\n     */\n    getInstitutions(id, allNodes,allUsers) {\n        var nodes = allNodes.filter(x=>x.parentNode == id);\n        var tree =[];\n        (nodes).map(node=>{\n            tree.push( {\n                \"id\" : node._id,\n                \"name\" : node.nodeName,\n                \"departments\": this.getDepartments(node[\"id\"], allNodes, allUsers)                              \n            })});      \n        return tree;\n    }\n  \n    /**\n     * get Departments\n     * @param id Institute id\n     * @param allNodes all nodes\n     * @param allUsers all nodes\n     */\n    getDepartments(id, allNodes, allUsers) {\n        var nodes = allNodes.filter(x=>x.parentNode == id);\n        var tree =[];\n        (nodes).map(node=>{\n            tree.push( {\n                \"id\" : node._id,\n                \"name\" : node.nodeName ,\n                \"teachers\" : this.getTeachers(node.teachers, allUsers)                     \n            })});  \n        return tree;\n    }\n  \n    /**\n     * get Teachers\n     * @param teachers \n     * @param allUsers \n     */\n    getTeachers(teachers, allUsers) {\n        if(teachers.length == 0 )\n            return [];\n        var tree =[];\n        (teachers).map(teacher=>{      \n            var user = allUsers.filter(x=>x._id == teacher)[0];\n            if(user){\n              tree.push( {\n                  \"id\" : teacher,\n                  \"name\" : user.lastName + \" \" + user.firstName,\n                  \"email\" : user.email\n              })}          \n          }); \n        return tree;\n    }\n\n\n    /**\n     * Add new Node\n     * @param createNodeDTO \n     */\n    async addNode(createNodeDTO: CreateNodeDTO): Promise {\n        createNodeDTO._id = new ObjectId();\n        if(!createNodeDTO.parentNode){\n            createNodeDTO.parentNode ='';\n        }\n        const newNode = await new this.nodeModel(createNodeDTO);\n        return newNode.save();\n    }\n\n    /**\n     * Edit Node by id\n     * @param id \n     * @param createNodeDTO \n     */\n    async editNode(id: any, createNodeDTO: CreateNodeDTO) : Promise {\n        const oldNode = await this.getNode(id);\n        if(!createNodeDTO.parentNode){\n            createNodeDTO.parentNode = oldNode.parentNode;\n        }\n        if(!createNodeDTO.teachers){\n            createNodeDTO.teachers = oldNode.teachers;\n        }\n        if(!createNodeDTO.mentors){\n            createNodeDTO.mentors = oldNode.mentors;\n        }\n        const editedNode = await this.nodeModel\n            .findByIdAndUpdate(id, createNodeDTO, { new: true });\n        return editedNode;\n    }\n\n    /**\n     * Delete Node by id\n     * @param id \n     */\n    async deleteNode(id): Promise {\n        const deletedNode = await this.nodeModel\n            .findByIdAndRemove(id);\n        return deletedNode;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/interfaces/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                User mongoose Document\n\n            \n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        contactPhone\n                                \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        interests\n                                \n                                \n                                        lastName\n                                \n                                \n                                        password\n                                \n                                \n                                        role\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contactPhone\n                                    \n                                \n                                \n                                    \n                                        contactPhone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User contactPhone\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User email\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User firstName\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interests\n                                    \n                                \n                                \n                                    \n                                        interests:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User interests\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User lastName\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User password\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User role\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User title\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\n\n/**\n * User mongoose Document\n */\nexport interface User extends Document {\n    /**\n     * User id\n     */\n    readonly _id: string;\n    /**\n     * User firstName\n     */\n    readonly firstName: string;\n    /**\n     * User lastName\n     */\n    readonly lastName: string;\n    /**\n     * User email\n     */\n    readonly email: string;\n    /**\n     * User password\n     */\n    readonly password: string;\n    /**\n     * User contactPhone\n     */\n    readonly contactPhone: string;\n    /**\n     * User title\n     */\n    readonly title: string;\n    /**\n     * User interests\n     */\n    readonly interests: string;\n    /**\n     * User role\n     */\n    readonly role: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDTO.html":{"url":"classes/UserLoginDTO.html","title":"class - UserLoginDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/userilogin.dto.ts\n        \n\n            \n                Description\n            \n            \n                UserLoginDTO\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({example: 'adminadmin4'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/userilogin.dto.ts:20\n                            \n                        \n\n                \n                    \n                        User password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@ApiProperty({example: 'admin@admin.com'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/userilogin.dto.ts:13\n                            \n                        \n\n                \n                    \n                        User email\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsEmail, IsNotEmpty } from 'class-validator';\n \n/**\n * UserLoginDTO\n */\nexport class UserLoginDTO {\n    /**\n     * User email\n     */\n    @IsEmail()\n    @ApiProperty({example:'admin@admin.com'})\n    username: string;\n\n    /**\n     * User password\n     */\n    @IsNotEmpty()\n    @ApiProperty({example:'adminadmin4'})\n    password: string;\n  }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n            \n                Description\n            \n            \n                Users Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                editUser\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser(res, createUserDTO: CreateUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/add')@ApiForbiddenResponse({description: 'User with this email already exists'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:62\n                \n            \n\n\n            \n                \n                    Submit a user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createUserDTO\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(res, userID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/delete')@ApiNotFoundResponse({description: 'User does not exist!'})@ApiQuery({name: 'userID', type: String})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:110\n                \n            \n\n\n            \n                \n                    Delete a user using ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(res, userID, createUserDTO: CreateUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/edit')@ApiQuery({name: 'userID', type: String})@ApiForbiddenResponse({description: 'User with this new email already exists'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:80\n                \n            \n\n\n            \n                \n                    Edit a user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userID\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createUserDTO\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(res, userID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':userID')@ApiOkResponse({description: 'The user has been successfully returned.'})@ApiForbiddenResponse({description: 'Forbidden.'})@ApiNotFoundResponse({description: 'User does not exist.'})@ApiBadRequestResponse({description: 'Invalid ID!'})@ApiParam({name: 'userID', type: String})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:47\n                \n            \n\n\n            \n                \n                    Fetch a particular user using ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers(res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/users')@ApiOkResponse({description: 'The users list has been successfully returned.'})@ApiForbiddenResponse({description: 'Forbidden.'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:31\n                \n            \n\n\n            \n                \n                    Fetch all users\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Res, HttpStatus, Param, NotFoundException, Post, Body, Put, Query, Delete ,UseGuards, ForbiddenException} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDTO } from './dto/create-user.dto';\nimport { ValidateObjectId } from '../pipes/validate-object-id.pipes';\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\nimport { ApiTags, ApiOkResponse, ApiForbiddenResponse, ApiBearerAuth, ApiParam, ApiQuery, ApiNotFoundResponse, ApiBadRequestResponse, ApiUnauthorizedResponse } from '@nestjs/swagger';\nimport { ObjectID } from 'mongodb';\n\n/**\n * Users Controller\n */\n@UseGuards(JwtAuthGuard)\n@Controller('users')\n@ApiTags('Users')\n@ApiBearerAuth()\n@ApiUnauthorizedResponse({description:'Access Token is not valid or has expired'})\nexport class UsersController{\n  /**\n   * @ignore\n   * @param usersService \n   */\n    constructor(private usersService: UsersService) { }  \n    \n    /**\n     * Fetch all users\n     * @param res \n     */\n    @Get('/users')\n    @ApiOkResponse({description:'The users list has been successfully returned.'})\n    @ApiForbiddenResponse({description:'Forbidden.'})\n    async getUsers(@Res() res) {\n      const users = await this.usersService.getUsers();\n      return res.status(HttpStatus.OK).json(users);\n    }\n    \n    /**\n     * Fetch a particular user using ID\n     * @param res \n     * @param userID \n     */\n    @Get(':userID')\n    @ApiOkResponse({ description:'The user has been successfully returned.'})\n    @ApiForbiddenResponse({description:'Forbidden.'})\n    @ApiNotFoundResponse({description:'User does not exist.'})\n    @ApiBadRequestResponse({description:'Invalid ID!'})\n    @ApiParam({ name: 'userID', type: String })\n    async getUser(@Res() res, @Param('userID', new ValidateObjectId()) userID) {\n      const user = await this.usersService.getUser(new ObjectID(userID));\n      if (!user) {\n          throw new NotFoundException('User does not exist!');\n      }\n      return res.status(HttpStatus.OK).json(user);\n    }\n    \n    /**\n     * Submit a user\n     * @param res \n     * @param createUserDTO \n     */    \n    @Post('/add')\n    @ApiForbiddenResponse({description:'User with this email already exists'})\n    async addUser(@Res() res, @Body() createUserDTO: CreateUserDTO) {\n      await this.usersService.checkEmail(createUserDTO.email); \n      const newUser = await this.usersService.addUser(createUserDTO);\n      return res.status(HttpStatus.OK).json({\n        message: 'User has been submitted successfully!',\n        user: newUser,\n      });\n    }   \n\n    /**\n     * Edit a user\n     * @param res \n     * @param userID \n     * @param createUserDTO \n     */\n    @Put('/edit')\n    @ApiQuery({ name: 'userID', type: String })\n    @ApiForbiddenResponse({description:'User with this new email already exists'})\n    async editUser(\n      @Res() res,\n      @Query('userID', new ValidateObjectId()) userID,\n      @Body() createUserDTO: CreateUserDTO,\n    ) {\n      if (userID != createUserDTO._id) {\n        throw new NotFoundException('Incorrect user ID');\n      }\n      const user = await this.usersService.getUser(new ObjectID(userID));\n      if (user && user.email !=  createUserDTO.email) {\n        await this.usersService.checkEmail(createUserDTO.email);\n      }\n      const editedUser = await this.usersService.editUser(userID, createUserDTO);\n      if (!editedUser) {\n          throw new NotFoundException('User does not exist!');\n      }\n      return res.status(HttpStatus.OK).json({\n        message: 'User has been successfully updated',\n        user: editedUser,\n      });\n    }\n    \n    /**\n     * Delete a user using ID\n     * @param res \n     * @param userID \n     */\n    @Delete('/delete')\n    @ApiNotFoundResponse({description:'User does not exist!'})\n    @ApiQuery({ name: 'userID', type: String })\n    async deleteUser(@Res() res, @Query('userID', new ValidateObjectId()) userID) {\n      const deletedUser = await this.usersService.deleteUser(userID);\n      if (!deletedUser) {\n          throw new NotFoundException('User does not exist!');\n      }\n      return res.status(HttpStatus.OK).json({\n        message: 'User has been deleted!',\n        user: deletedUser,\n      });\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserSchema } from './schemas/user.schema';\n\n@Module({\n  imports: [  \n    MongooseModule.forFeature([{ name: 'User', schema: UserSchema }]),],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n            \n                Description\n            \n            \n                Users Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                            \n                                    Async\n                                checkEmail\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                editUser\n                            \n                            \n                                    Async\n                                findUserByEmail\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser(createUserDTO: CreateUserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:53\n                \n            \n\n\n            \n                \n                    Add user to users table\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createUserDTO\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new user DTO\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:91\n                \n            \n\n\n            \n                \n                    Checking an address for its existence in the users table\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        email address\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: any)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:81\n                \n            \n\n\n            \n                \n                    Delete user from users table\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(id: any, createUserDTO: CreateUserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:65\n                \n            \n\n\n            \n                \n                    Edit user data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User id\n\n                                    \n                                \n                                \n                                    createUserDTO\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new user DTO\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findUserByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:44\n                \n            \n\n\n            \n                \n                    Find user by email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user email\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userID)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:32\n                \n            \n\n\n            \n                \n                    Get user by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:23\n                \n            \n\n\n            \n                \n                    Get all users\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ForbiddenException } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User } from './interfaces/user.interface';\nimport { CreateUserDTO } from './dto/create-user.dto';\nimport { ObjectId } from 'mongodb';\nimport { Exception } from 'handlebars';\nimport { use } from 'passport';\n/**@ignore */\nconst bcrypt = require('bcrypt');\n/**\n * Users Service\n */\n@Injectable()\nexport class UsersService {\n  \n  /** @ignore */\n  constructor(@InjectModel('User') private readonly userModel: Model) { }\n \n  /**\n   * Get all users\n   */\n  async getUsers(): Promise {\n    const users = await this.userModel.find().exec();\n    return users;\n  }\n\n  /**\n   * Get user by ID\n   * @param {ObjectId} userID \n   */\n  async getUser(userID): Promise { \n    const user = await this.userModel\n      .findOne({\"_id\":userID})\n      .exec(); \n    return user;\n  }\n\n  \n  /**\n   * Find user by email\n   * @param {string} email user email\n   */\n  async findUserByEmail(email: string): Promise { \n    const user = await this.userModel.findOne({\"email\" : email}).exec(); \n    return user;\n  }\n\n  /**\n   * Add user to users table\n   * @param createUserDTO new user DTO\n   */\n  async addUser(createUserDTO: CreateUserDTO): Promise {\n    createUserDTO._id = new ObjectId();\n    createUserDTO.password =  await bcrypt.hash(createUserDTO.password, 10);\n    const newUser = await new this.userModel(createUserDTO);\n    return newUser.save();\n  }\n  \n  /**\n   * Edit user data\n   * @param id User id\n   * @param createUserDTO new user DTO\n   */\n  async editUser(id: any, createUserDTO: CreateUserDTO): Promise {\n    if(!createUserDTO.password || createUserDTO.password.length == 0){\n        createUserDTO.password =  (await this.getUser(id)).password;\n    }    \n    if(createUserDTO.password.length != 60){\n        createUserDTO.password =  await bcrypt.hash(createUserDTO.password, 10);\n    }\n    const editedUser = await this.userModel\n      .findByIdAndUpdate(id, createUserDTO, { new: true });\n    return editedUser;\n  }\n  \n  /**\n   * Delete user from users table\n   * @param id User id\n   */\n  async deleteUser(id: any): Promise {\n    const deletedUser = await this.userModel\n      .findByIdAndRemove(id);\n    return deletedUser;\n  }\n\n  /**\n   * Checking an address for its existence in the users table\n   * @param email email address\n   */\n  async checkEmail(email: string) {\n    const user = await this.findUserByEmail(email);\n    if (user) {\n      throw new ForbiddenException('User with this email already exists');\n    }\n  }\n}  \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateObjectId.html":{"url":"injectables/ValidateObjectId.html","title":"injectable - ValidateObjectId","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateObjectId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pipes/validate-object-id.pipes.ts\n        \n\n            \n                Description\n            \n            \n                Validate mongoose ObjectId\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: string, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/pipes/validate-object-id.pipes.ts:14\n                \n            \n\n\n            \n                \n                    Get isValid ObjectId\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata, BadRequestException } from '@nestjs/common';\nimport * as mongoose from 'mongoose';\n\n/**\n * Validate mongoose ObjectId\n */\n@Injectable()\nexport class ValidateObjectId implements PipeTransform {\n  /**\n   * Get isValid ObjectId\n   * @param value \n   * @param metadata \n   */\n  async transform(value: string, metadata: ArgumentMetadata) {\n    const isValid = mongoose.Types.ObjectId.isValid(value);\n    if (!isValid) {\n        throw new BadRequestException('Invalid ID!');\n    }\n    return value;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controler.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            url\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/courses/courses.controller.ts\n            \n            controller\n            CoursesController\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/courses/courses.service.ts\n            \n            injectable\n            CoursesService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/courses/dto/create-course.dto.ts\n            \n            class\n            CreateCourseDTO\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/courses/interfaces/course.interface.ts\n            \n            interface\n            Course\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/courses/schemas/course.schema.ts\n            \n            variable\n            CourseSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/invite-user/dto/invite-user.dto.ts\n            \n            class\n            InviteUserDTO\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/invite-user/invite-user.controller.ts\n            \n            controller\n            InviteUserController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/invite-user/invite-user.service.ts\n            \n            injectable\n            InviteUserService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/mailer-edu4u/mailer-edu4u.service.ts\n            \n            injectable\n            MailerEdu4uService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/pipes/validate-object-id.pipes.ts\n            \n            injectable\n            ValidateObjectId\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/teachers/teachers.controller.ts\n            \n            controller\n            TeachersController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/teachers/teachers.service.ts\n            \n            injectable\n            TeachersService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/teachers/teachers.service.ts\n            \n            variable\n            bcrypt\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/universities/dto/create-node.dto.ts\n            \n            class\n            CreateNodeDTO\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/universities/interfaces/node.interface.ts\n            \n            interface\n            Node\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/universities/schemas/node.schema.ts\n            \n            variable\n            NodeSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/universities/universities.controller.ts\n            \n            controller\n            UniversitiesController\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/universities/universities.service.ts\n            \n            injectable\n            UniversitiesService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDTO\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/users/dto/userilogin.dto.ts\n            \n            class\n            UserLoginDTO\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                100 %\n                (8/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^1.5.1\n        \n            @nestjs/cli : ^7.0.0\n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/jwt : ^7.1.0\n        \n            @nestjs/mongoose : ^7.0.2\n        \n            @nestjs/passport : ^7.1.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/swagger : ^4.5.12\n        \n            @nestjsx/crud : ^4.6.2\n        \n            @types/mongoose : ^5.7.36\n        \n            @types/node : ^13.9.1\n        \n            bcrypt : ^5.0.0\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.2\n        \n            dotenv : ^8.2.0\n        \n            fastify-swagger : ^3.3.0\n        \n            handlebars : ^4.7.6\n        \n            jwt-decode : ^3.0.0-beta.2\n        \n            migrate-mongoose : ^4.0.0\n        \n            mjml : ^4.6.3\n        \n            mongodb : ^3.5.9\n        \n            mongoose : ^5.10.0\n        \n            nodemailer : ^6.4.11\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            swagger-ui-express : ^4.1.4\n        \n            ts-node : ^8.6.2\n        \n            typeorm : ^0.2.25\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Bootstrap\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodDatabase migrations\n# run all unapplied database migrations\n$ migrate-mongo up\n\n# undo the last applied database migration\n$ migrate-mongo down\n\n# print the changelog of the database\n$ migrate-mongo statusTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covAPI documentation\nhttp://localhost:3001/api/  \nBackend documentation\n# Compodoc documentation\n$ npm run compodocSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoursesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InviteUserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailerEdu4uModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeachersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UniversitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_exports\n\n\n\ncluster_CoursesModule_providers\n\n\n\ncluster_InviteUserModule\n\n\n\ncluster_InviteUserModule_providers\n\n\n\ncluster_MailerEdu4uModule\n\n\n\ncluster_MailerEdu4uModule_exports\n\n\n\ncluster_MailerEdu4uModule_providers\n\n\n\ncluster_TeachersModule\n\n\n\ncluster_TeachersModule_providers\n\n\n\ncluster_UniversitiesModule\n\n\n\ncluster_UniversitiesModule_exports\n\n\n\ncluster_UniversitiesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nInviteUserModule\n\nInviteUserModule\n\nInviteUserModule -->\n\nAuthModule->InviteUserModule\n\n\n\n\n\nTeachersModule\n\nTeachersModule\n\nTeachersModule -->\n\nAuthModule->TeachersModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nCoursesService \n\nCoursesService \n\nCoursesService  -->\n\nCoursesModule->CoursesService \n\n\n\nAppModule -->\n\nInviteUserModule->AppModule\n\n\n\n\n\nMailerEdu4uModule\n\nMailerEdu4uModule\n\nInviteUserModule -->\n\nMailerEdu4uModule->InviteUserModule\n\n\n\nAppModule -->\n\nMailerEdu4uModule->AppModule\n\n\n\n\n\nMailerEdu4uService \n\nMailerEdu4uService \n\nMailerEdu4uService  -->\n\nMailerEdu4uModule->MailerEdu4uService \n\n\n\nAppModule -->\n\nTeachersModule->AppModule\n\n\n\n\n\nUniversitiesModule\n\nUniversitiesModule\n\nInviteUserModule -->\n\nUniversitiesModule->InviteUserModule\n\n\n\nAppModule -->\n\nUniversitiesModule->AppModule\n\n\n\n\n\nUniversitiesService \n\nUniversitiesService \n\nUniversitiesService  -->\n\nUniversitiesModule->UniversitiesService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nInviteUserModule -->\n\nUsersModule->InviteUserModule\n\n\n\nTeachersModule -->\n\nUsersModule->TeachersModule\n\n\n\nUniversitiesModule -->\n\nUsersModule->UniversitiesModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCoursesService\n\nCoursesService\n\nCoursesModule -->\n\nCoursesService->CoursesModule\n\n\n\n\n\nInviteUserService\n\nInviteUserService\n\nInviteUserModule -->\n\nInviteUserService->InviteUserModule\n\n\n\n\n\nMailerEdu4uService\n\nMailerEdu4uService\n\nMailerEdu4uModule -->\n\nMailerEdu4uService->MailerEdu4uModule\n\n\n\n\n\nTeachersService\n\nTeachersService\n\nTeachersModule -->\n\nTeachersService->TeachersModule\n\n\n\n\n\nUniversitiesService\n\nUniversitiesService\n\nUniversitiesModule -->\n\nUniversitiesService->UniversitiesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bcrypt   (src/.../teachers.service.ts)\n                        \n                        \n                            CourseSchema   (src/.../course.schema.ts)\n                        \n                        \n                            NodeSchema   (src/.../node.schema.ts)\n                        \n                        \n                            url   (src/.../app.module.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/teachers/teachers.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bcrypt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('bcrypt')\n                        \n                    \n\n                \n                    \n                        bcrypt\n\n                    \n                \n\n            \n        \n\n    src/courses/schemas/course.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CourseSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    _id: String,\n    courseName: String,\n    parentDepartment: String,\n    hoursNumber: Number,\n    lecturesNumber: Number,\n    seminarsNumber: Number,\n    practicesNumber: Number,\n    laboratoryWorksNumber: Number,\n    selfEducationHours: Number,\n    controlWorksNumber: Number,\n    consultationsNumber: Number,\n    students: Array,\n    createdDate: Date,\n    createdDUser: String \n})\n                        \n                    \n\n                \n                    \n                        Course mongoose Schema\n\n                    \n                \n\n            \n        \n\n    src/universities/schemas/node.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NodeSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    _id: String,\n    nodeName: String,\n    parentNode: String,\n    teachers: Array,\n    mentors: Array,\n    createdDate: Date,\n    createdDUser: String,\n})\n                        \n                    \n\n                \n                    \n                        Node mongoose Schema\n\n                    \n                \n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : process.env.DB_URI || \"mongodb+srv://alex:admin@cluster0.jczgn.mongodb.net/edu4u?retryWrites=true&w=majority\"\n                        \n                    \n\n                \n                    \n                        DataBase url\n\n                    \n                \n\n            \n        \n\n    src/users/schemas/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    _id: String,\n    firstName: String,\n    lastName: String,\n    email: String,\n    password: String,\n    contactPhone: String,\n    title: String,\n    interests: String,\n    role: String,\n})\n                        \n                    \n\n                \n                    \n                        User mongoose Schema\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
